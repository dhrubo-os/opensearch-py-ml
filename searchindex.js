Search.setIndex({"docnames": ["examples/demo_notebook", "examples/index", "examples/online_retail_analysis", "index", "reference/api/DataFrame", "reference/api/DataFrame.agg", "reference/api/DataFrame.aggregate", "reference/api/DataFrame.columns", "reference/api/DataFrame.count", "reference/api/DataFrame.describe", "reference/api/DataFrame.drop", "reference/api/DataFrame.dtypes", "reference/api/DataFrame.empty", "reference/api/DataFrame.filter", "reference/api/DataFrame.get", "reference/api/DataFrame.groupby", "reference/api/DataFrame.head", "reference/api/DataFrame.hist", "reference/api/DataFrame.idxmax", "reference/api/DataFrame.idxmin", "reference/api/DataFrame.index", "reference/api/DataFrame.info", "reference/api/DataFrame.iterrows", "reference/api/DataFrame.itertuples", "reference/api/DataFrame.keys", "reference/api/DataFrame.mad", "reference/api/DataFrame.max", "reference/api/DataFrame.mean", "reference/api/DataFrame.median", "reference/api/DataFrame.min", "reference/api/DataFrame.mode", "reference/api/DataFrame.ndim", "reference/api/DataFrame.nunique", "reference/api/DataFrame.os_dtypes", "reference/api/DataFrame.os_info", "reference/api/DataFrame.os_match", "reference/api/DataFrame.os_query", "reference/api/DataFrame.quantile", "reference/api/DataFrame.query", "reference/api/DataFrame.sample", "reference/api/DataFrame.select_dtypes", "reference/api/DataFrame.shape", "reference/api/DataFrame.size", "reference/api/DataFrame.std", "reference/api/DataFrame.sum", "reference/api/DataFrame.tail", "reference/api/DataFrame.to_csv", "reference/api/DataFrame.to_html", "reference/api/DataFrame.to_numpy", "reference/api/DataFrame.to_pandas", "reference/api/DataFrame.to_string", "reference/api/DataFrame.values", "reference/api/DataFrame.var", "reference/api/Index", "reference/api/Series", "reference/api/Series.add", "reference/api/Series.describe", "reference/api/Series.div", "reference/api/Series.divide", "reference/api/Series.dtype", "reference/api/Series.dtypes", "reference/api/Series.empty", "reference/api/Series.es_dtypes", "reference/api/Series.es_match", "reference/api/Series.filter", "reference/api/Series.floordiv", "reference/api/Series.head", "reference/api/Series.hist", "reference/api/Series.index", "reference/api/Series.isin", "reference/api/Series.isna", "reference/api/Series.isnull", "reference/api/Series.mad", "reference/api/Series.max", "reference/api/Series.mean", "reference/api/Series.median", "reference/api/Series.min", "reference/api/Series.mod", "reference/api/Series.mode", "reference/api/Series.mul", "reference/api/Series.multiply", "reference/api/Series.name", "reference/api/Series.ndim", "reference/api/Series.notna", "reference/api/Series.notnull", "reference/api/Series.nunique", "reference/api/Series.os_dtype", "reference/api/Series.os_info", "reference/api/Series.pow", "reference/api/Series.quantile", "reference/api/Series.radd", "reference/api/Series.rdiv", "reference/api/Series.rdivide", "reference/api/Series.rename", "reference/api/Series.rfloordiv", "reference/api/Series.rmod", "reference/api/Series.rmul", "reference/api/Series.rmultiply", "reference/api/Series.rpow", "reference/api/Series.rsub", "reference/api/Series.rsubtract", "reference/api/Series.rtruediv", "reference/api/Series.sample", "reference/api/Series.shape", "reference/api/Series.size", "reference/api/Series.std", "reference/api/Series.sub", "reference/api/Series.subtract", "reference/api/Series.sum", "reference/api/Series.tail", "reference/api/Series.to_numpy", "reference/api/Series.to_pandas", "reference/api/Series.to_string", "reference/api/Series.truediv", "reference/api/Series.unique", "reference/api/Series.value_counts", "reference/api/Series.var", "reference/api/csv_to_opensearch", "reference/api/groupby.DataFrameGroupBy", "reference/api/groupby.DataFrameGroupBy.agg", "reference/api/groupby.DataFrameGroupBy.aggregate", "reference/api/groupby.DataFrameGroupBy.count", "reference/api/groupby.DataFrameGroupBy.mad", "reference/api/groupby.DataFrameGroupBy.max", "reference/api/groupby.DataFrameGroupBy.mean", "reference/api/groupby.DataFrameGroupBy.median", "reference/api/groupby.DataFrameGroupBy.min", "reference/api/groupby.DataFrameGroupBy.nunique", "reference/api/groupby.DataFrameGroupBy.quantile", "reference/api/groupby.DataFrameGroupBy.std", "reference/api/groupby.DataFrameGroupBy.sum", "reference/api/groupby.DataFrameGroupBy.var", "reference/api/groupby.GroupBy", "reference/api/opensearch_to_pandas", "reference/api/pandas_to_opensearch", "reference/dataframe", "reference/general_utility_functions", "reference/index", "reference/indexing", "reference/io", "reference/series"], "filenames": ["examples/demo_notebook.ipynb", "examples/index.rst", "examples/online_retail_analysis.ipynb", "index.rst", "reference/api/DataFrame.rst", "reference/api/DataFrame.agg.rst", "reference/api/DataFrame.aggregate.rst", "reference/api/DataFrame.columns.rst", "reference/api/DataFrame.count.rst", "reference/api/DataFrame.describe.rst", "reference/api/DataFrame.drop.rst", "reference/api/DataFrame.dtypes.rst", "reference/api/DataFrame.empty.rst", "reference/api/DataFrame.filter.rst", "reference/api/DataFrame.get.rst", "reference/api/DataFrame.groupby.rst", "reference/api/DataFrame.head.rst", "reference/api/DataFrame.hist.rst", "reference/api/DataFrame.idxmax.rst", "reference/api/DataFrame.idxmin.rst", "reference/api/DataFrame.index.rst", "reference/api/DataFrame.info.rst", "reference/api/DataFrame.iterrows.rst", "reference/api/DataFrame.itertuples.rst", "reference/api/DataFrame.keys.rst", "reference/api/DataFrame.mad.rst", "reference/api/DataFrame.max.rst", "reference/api/DataFrame.mean.rst", "reference/api/DataFrame.median.rst", "reference/api/DataFrame.min.rst", "reference/api/DataFrame.mode.rst", "reference/api/DataFrame.ndim.rst", "reference/api/DataFrame.nunique.rst", "reference/api/DataFrame.os_dtypes.rst", "reference/api/DataFrame.os_info.rst", "reference/api/DataFrame.os_match.rst", "reference/api/DataFrame.os_query.rst", "reference/api/DataFrame.quantile.rst", "reference/api/DataFrame.query.rst", "reference/api/DataFrame.sample.rst", "reference/api/DataFrame.select_dtypes.rst", "reference/api/DataFrame.shape.rst", "reference/api/DataFrame.size.rst", "reference/api/DataFrame.std.rst", "reference/api/DataFrame.sum.rst", "reference/api/DataFrame.tail.rst", "reference/api/DataFrame.to_csv.rst", "reference/api/DataFrame.to_html.rst", "reference/api/DataFrame.to_numpy.rst", "reference/api/DataFrame.to_pandas.rst", "reference/api/DataFrame.to_string.rst", "reference/api/DataFrame.values.rst", "reference/api/DataFrame.var.rst", "reference/api/Index.rst", "reference/api/Series.rst", "reference/api/Series.add.rst", "reference/api/Series.describe.rst", "reference/api/Series.div.rst", "reference/api/Series.divide.rst", "reference/api/Series.dtype.rst", "reference/api/Series.dtypes.rst", "reference/api/Series.empty.rst", "reference/api/Series.es_dtypes.rst", "reference/api/Series.es_match.rst", "reference/api/Series.filter.rst", "reference/api/Series.floordiv.rst", "reference/api/Series.head.rst", "reference/api/Series.hist.rst", "reference/api/Series.index.rst", "reference/api/Series.isin.rst", "reference/api/Series.isna.rst", "reference/api/Series.isnull.rst", "reference/api/Series.mad.rst", "reference/api/Series.max.rst", "reference/api/Series.mean.rst", "reference/api/Series.median.rst", "reference/api/Series.min.rst", "reference/api/Series.mod.rst", "reference/api/Series.mode.rst", "reference/api/Series.mul.rst", "reference/api/Series.multiply.rst", "reference/api/Series.name.rst", "reference/api/Series.ndim.rst", "reference/api/Series.notna.rst", "reference/api/Series.notnull.rst", "reference/api/Series.nunique.rst", "reference/api/Series.os_dtype.rst", "reference/api/Series.os_info.rst", "reference/api/Series.pow.rst", "reference/api/Series.quantile.rst", "reference/api/Series.radd.rst", "reference/api/Series.rdiv.rst", "reference/api/Series.rdivide.rst", "reference/api/Series.rename.rst", "reference/api/Series.rfloordiv.rst", "reference/api/Series.rmod.rst", "reference/api/Series.rmul.rst", "reference/api/Series.rmultiply.rst", "reference/api/Series.rpow.rst", "reference/api/Series.rsub.rst", "reference/api/Series.rsubtract.rst", "reference/api/Series.rtruediv.rst", "reference/api/Series.sample.rst", "reference/api/Series.shape.rst", "reference/api/Series.size.rst", "reference/api/Series.std.rst", "reference/api/Series.sub.rst", "reference/api/Series.subtract.rst", "reference/api/Series.sum.rst", "reference/api/Series.tail.rst", "reference/api/Series.to_numpy.rst", "reference/api/Series.to_pandas.rst", "reference/api/Series.to_string.rst", "reference/api/Series.truediv.rst", "reference/api/Series.unique.rst", "reference/api/Series.value_counts.rst", "reference/api/Series.var.rst", "reference/api/csv_to_opensearch.rst", "reference/api/groupby.DataFrameGroupBy.rst", "reference/api/groupby.DataFrameGroupBy.agg.rst", "reference/api/groupby.DataFrameGroupBy.aggregate.rst", "reference/api/groupby.DataFrameGroupBy.count.rst", "reference/api/groupby.DataFrameGroupBy.mad.rst", "reference/api/groupby.DataFrameGroupBy.max.rst", "reference/api/groupby.DataFrameGroupBy.mean.rst", "reference/api/groupby.DataFrameGroupBy.median.rst", "reference/api/groupby.DataFrameGroupBy.min.rst", "reference/api/groupby.DataFrameGroupBy.nunique.rst", "reference/api/groupby.DataFrameGroupBy.quantile.rst", "reference/api/groupby.DataFrameGroupBy.std.rst", "reference/api/groupby.DataFrameGroupBy.sum.rst", "reference/api/groupby.DataFrameGroupBy.var.rst", "reference/api/groupby.GroupBy.rst", "reference/api/opensearch_to_pandas.rst", "reference/api/pandas_to_opensearch.rst", "reference/dataframe.rst", "reference/general_utility_functions.rst", "reference/index.rst", "reference/indexing.rst", "reference/io.rst", "reference/series.rst"], "titles": ["Demo Notebook for Dataframe", "Examples", "Online Retail analysis", "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch", "DataFrame", "DataFrame.agg", "DataFrame.aggregate", "DataFrame.columns", "DataFrame.count", "DataFrame.describe", "DataFrame.drop", "DataFrame.dtypes", "DataFrame.empty", "DataFrame.filter", "DataFrame.get", "DataFrame.groupby", "DataFrame.head", "DataFrame.hist", "DataFrame.idxmax", "DataFrame.idxmin", "DataFrame.index", "DataFrame.info", "DataFrame.iterrows", "DataFrame.itertuples", "DataFrame.keys", "DataFrame.mad", "DataFrame.max", "DataFrame.mean", "DataFrame.median", "DataFrame.min", "DataFrame.mode", "DataFrame.ndim", "DataFrame.nunique", "DataFrame.os_dtypes", "DataFrame.os_info", "DataFrame.os_match", "DataFrame.os_query", "DataFrame.quantile", "DataFrame.query", "DataFrame.sample", "DataFrame.select_dtypes", "DataFrame.shape", "DataFrame.size", "DataFrame.std", "DataFrame.sum", "DataFrame.tail", "DataFrame.to_csv", "DataFrame.to_html", "DataFrame.to_numpy", "DataFrame.to_pandas", "DataFrame.to_string", "DataFrame.values", "DataFrame.var", "opensearch_py_ml.Index", "Series", "Series.add", "Series.describe", "Series.div", "Series.divide", "Series.dtype", "Series.dtypes", "Series.empty", "Series.es_dtypes", "Series.es_match", "Series.filter", "Series.floordiv", "Series.head", "Series.hist", "Series.index", "Series.isin", "Series.isna", "Series.isnull", "Series.mad", "Series.max", "Series.mean", "Series.median", "Series.min", "Series.mod", "Series.mode", "Series.mul", "Series.multiply", "Series.name", "Series.ndim", "Series.notna", "Series.notnull", "Series.nunique", "Series.os_dtype", "Series.os_info", "Series.pow", "Series.quantile", "Series.radd", "Series.rdiv", "Series.rdivide", "Series.rename", "Series.rfloordiv", "Series.rmod", "Series.rmul", "Series.rmultiply", "Series.rpow", "Series.rsub", "Series.rsubtract", "Series.rtruediv", "Series.sample", "Series.shape", "Series.size", "Series.std", "Series.sub", "Series.subtract", "Series.sum", "Series.tail", "Series.to_numpy", "Series.to_pandas", "Series.to_string", "Series.truediv", "Series.unique", "Series.value_counts", "Series.var", "csv_to_opensearch", "groupby.DataFrameGroupBy", "groupby.DataFrameGroupBy.agg", "groupby.DataFrameGroupBy.aggregate", "groupby.DataFrameGroupBy.count", "groupby.DataFrameGroupBy.mad", "groupby.DataFrameGroupBy.max", "groupby.DataFrameGroupBy.mean", "groupby.DataFrameGroupBy.median", "groupby.DataFrameGroupBy.min", "groupby.DataFrameGroupBy.nunique", "groupby.DataFrameGroupBy.quantile", "groupby.DataFrameGroupBy.std", "groupby.DataFrameGroupBy.sum", "groupby.DataFrameGroupBy.var", "groupby.GroupBy", "opensearch_to_pandas", "pandas_to_opensearch", "DataFrame", "General Utility Functions", "API Reference", "Index", "Input/Output", "Series"], "terms": {"2": [0, 2, 4, 5, 6, 8, 10, 14, 15, 16, 21, 22, 23, 25, 27, 30, 31, 36, 37, 45, 48, 54, 55, 57, 58, 65, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 113, 117, 122, 124, 125, 127, 128, 129, 130, 133, 134], "load_ext": [0, 2], "autoreload": [0, 2], "3": [0, 2, 4, 10, 14, 15, 16, 17, 22, 23, 28, 30, 36, 37, 44, 48, 52, 54, 55, 57, 58, 65, 67, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 113, 117, 121, 122, 125, 127, 128, 129, 130, 131, 133, 134], "thi": [0, 2, 4, 8, 13, 16, 21, 32, 34, 35, 42, 45, 47, 48, 50, 51, 53, 54, 64, 93, 104, 110, 112, 115, 118, 133, 134, 137], "stop": [0, 2], "py": [0, 2, 23, 114, 137], "ml": [0, 2, 8, 23, 114, 137], "from": [0, 2, 3, 4, 10, 13, 14, 17, 21, 35, 39, 64, 67, 93, 117, 133, 134], "yell": [0, 2], "everi": [0, 2, 53, 133], "time": [0, 2, 3, 42, 104], "connect": [0, 2], "made": [0, 2], "warn": [0, 2], "filterwarn": [0, 2], "ignor": [0, 2, 5, 6, 9, 10, 35, 56, 119, 120, 134], "4": [0, 2, 4, 5, 6, 10, 14, 15, 22, 23, 30, 34, 35, 37, 48, 54, 55, 57, 58, 65, 77, 78, 79, 80, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 113, 117, 123, 124, 125, 126, 128, 130, 131, 133, 134], "demonstr": [0, 2], "support": [0, 2, 5, 6, 9, 10, 26, 27, 29, 44, 56, 73, 74, 75, 76, 93, 108, 117], "pd": [0, 2, 7, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134], "numpi": [0, 2, 3, 48, 51, 110], "np": [0, 2, 5, 6, 17, 40, 98], "matplotlib": [0, 2, 67], "pyplot": [0, 2, 67], "plt": [0, 2, 17, 67], "oml": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 48, 51, 52, 54, 55, 56, 57, 58, 60, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "opensearchpi": [0, 2, 54, 117], "standard": [0, 2, 25, 43, 105, 129], "test": [0, 2, 16, 45, 134], "set": [0, 2, 9, 23, 35, 47, 50, 56, 112], "consist": [0, 2, 56], "result": [0, 2, 21, 38, 56], "conftest": [0, 2], "5": [0, 2, 4, 10, 16, 22, 23, 30, 34, 36, 37, 45, 48, 55, 57, 58, 65, 66, 67, 77, 78, 79, 80, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 109, 110, 113, 117, 122, 127, 128, 133], "cluster_url": [0, 2], "http": [0, 2], "localhost": [0, 2], "9200": [0, 2], "def": [0, 2], "get_os_cli": [0, 2], "usernam": [0, 2], "admin": [0, 2], "password": [0, 2], "param": [0, 2], "cluster": [0, 2, 133], "url": [0, 2], "like": [0, 2, 13, 36, 37, 54, 64, 89, 128, 138], "te": [0, 2], "netwo": [0, 2], "1s12ba42br23v": [0, 2], "ff1736fa7db98ff2": [0, 2], "elb": [0, 2], "u": [0, 2, 15, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "west": [0, 2], "amazonaw": [0, 2], "com": [0, 2], "443": [0, 2], "return": [0, 2, 30, 48, 51, 59, 61, 78, 86, 110], "host": [0, 2], "http_auth": [0, 2], "verify_cert": [0, 2], "fals": [0, 2, 4, 5, 6, 10, 12, 15, 17, 22, 23, 25, 26, 27, 28, 29, 30, 34, 35, 37, 43, 44, 47, 49, 50, 52, 61, 111, 112, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "6": [0, 2, 10, 15, 26, 30, 32, 35, 52, 78, 94, 117, 119, 120, 123, 128, 130], "creat": [0, 2, 8, 21, 54, 117, 133, 134], "an": [0, 2, 4, 8, 13, 23, 34, 35, 36, 42, 45, 47, 50, 53, 54, 64, 70, 71, 83, 84, 104, 112, 117, 133, 134, 137, 138], "flight": [0, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 33, 34, 37, 38, 40, 43, 44, 45, 48, 52, 54, 56, 60, 67, 68, 72, 73, 74, 75, 76, 85, 89, 93, 105, 108, 110, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "7": [0, 2, 30, 35, 78, 117, 127, 130], "oml_flight": [0, 18, 19, 37, 89, 128], "8": [0, 2, 5, 6, 30, 44, 78, 117, 134], "type": [0, 2, 9, 10, 11, 14, 16, 21, 32, 33, 35, 45, 48, 56, 60, 86, 110, 133, 134], "same": [0, 14, 26, 27, 28, 29, 37, 43, 44, 52, 122, 123, 124, 125, 126, 127, 129, 130, 131], "9": [0, 5, 6, 30, 36, 78, 94, 117], "pd_flight": 0, "opensearch_to_panda": [0, 48, 51, 110, 134, 136], "10": [0, 2, 4, 15, 17, 30, 34, 36, 67, 78, 96, 97, 115, 117, 121, 125, 127, 133], "core": [0, 4, 48, 110, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "frame": [0, 2, 48, 133, 134], "11": [0, 2, 4, 26, 30, 34, 35, 78, 117, 123, 124, 125, 133], "39": [0, 2, 30, 78, 89, 123, 124], "avgticketpric": [0, 4, 5, 6, 7, 9, 11, 15, 18, 19, 22, 23, 25, 26, 27, 28, 29, 33, 37, 40, 43, 44, 48, 52, 56, 60, 72, 73, 74, 75, 76, 105, 108, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "cancel": [0, 4, 7, 15, 22, 23, 25, 26, 27, 28, 29, 40, 43, 44, 52, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "carrier": [0, 7, 14, 20, 48, 54, 68, 85, 93, 110, 115], "dest": [0, 7, 16, 40, 45], "destairportid": [0, 7, 34], "destcitynam": [0, 7], "destcountri": [0, 5, 6, 7, 15, 25, 26, 27, 28, 29, 43, 44, 52, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "destloc": [0, 7], "destregion": [0, 7], "destweath": [0, 7], "distancekilomet": [0, 5, 6, 7], "distancemil": [0, 7], "flightdelai": [0, 7], "flightdelaymin": [0, 7, 9, 18, 19, 34, 37, 38, 128], "flightdelaytyp": [0, 7], "flightnum": [0, 7], "flighttimehour": [0, 7], "flighttimemin": [0, 7, 67], "origin": [0, 7, 11, 16, 33, 45, 60], "originairportid": [0, 7, 34], "origincitynam": [0, 7], "origincountri": [0, 7], "originloc": [0, 7], "originregion": [0, 7], "originweath": [0, 7, 67], "dayofweek": [0, 4, 7, 11, 15, 18, 19, 25, 26, 27, 28, 29, 33, 37, 40, 43, 44, 52, 60, 89, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "timestamp": [0, 4, 5, 6, 7, 11, 15, 18, 19, 25, 26, 27, 28, 29, 30, 33, 34, 37, 40, 43, 44, 52, 60, 89, 122, 123, 124, 125, 126, 128, 131, 133, 134], "object": [0, 2, 7, 9, 10, 11, 14, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 40, 42, 43, 44, 45, 48, 52, 54, 55, 56, 59, 60, 78, 93, 104, 110, 134, 137, 138], "12": [0, 2, 26, 30, 78, 89, 117, 123, 133], "13": [0, 2, 4, 15, 94, 117, 125, 133], "float64": [0, 2, 5, 6, 11, 25, 26, 27, 28, 29, 37, 40, 43, 44, 52, 55, 56, 57, 58, 60, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 113, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134], "bool": [0, 2, 5, 6, 12, 15, 21, 23, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 40, 43, 44, 49, 52, 70, 71, 72, 73, 74, 75, 76, 83, 84, 105, 108, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 129, 130, 131, 133, 134], "int64": [0, 2, 8, 11, 32, 34, 40, 55, 57, 58, 60, 65, 77, 79, 80, 88, 98, 106, 107, 113, 115, 134], "datetime64": [0, 11, 34, 40, 60, 78, 89, 134], "n": [0, 2, 8, 11, 16, 34, 39, 40, 45, 60, 66, 78, 89, 102, 109, 134], "length": [0, 2, 14, 54, 93, 112, 117], "27": [0, 2, 4, 15, 38, 89, 117, 123, 125, 126, 133], "14": [0, 2, 4, 30, 34, 78, 95, 123, 124, 133], "15": [0, 2, 30, 34, 37, 78, 124], "includ": [0, 2, 17, 21, 34, 40, 117, 134], "number": [0, 8, 16, 17, 30, 39, 40, 41, 42, 45, 78, 85, 103, 104, 115, 117, 134], "841": [0, 4, 22, 23, 48, 133], "265642": [0, 4, 22, 23, 48, 133], "16492": 0, "326654": 0, "1030": 0, "770416": 0, "882": [0, 4, 22, 23, 48, 133], "982662": [0, 4, 22, 23, 48, 133], "8823": 0, "400140": 0, "464": [0, 2], "389481": 0, "190": [0, 4, 22, 23, 48, 133], "636904": [0, 4, 22, 23, 48, 133], "000000": [0, 2, 9, 15, 25, 26, 28, 29, 37, 56], "181": [0, 4, 22, 23, 48, 133], "694216": [0, 4, 22, 23, 48, 133], "555": 0, "737767": 0, "222": 0, "749059": 0, "730": [0, 4, 22, 23, 48, 133], "041778": [0, 4, 22, 23, 48, 133], "13358": 0, "244200": 0, "785": 0, "779071": 0, "13054": [0, 14, 45, 54, 93], "1080": 0, "446279": 0, "8058": 0, "581753": 0, "402": 0, "929088": 0, "13055": [0, 14, 45, 54, 93], "646": [0, 124], "612941": 0, "7088": 0, "598322": 0, "644": 0, "418029": 0, "13056": [0, 14, 45, 54, 93], "997": 0, "751876": 0, "10920": 0, "652972": 0, "937": 0, "540811": 0, "13057": [0, 14, 45, 54, 93], "1102": 0, "814465": 0, "18748": 0, "859647": 0, "1697": 0, "404971": 0, "13058": [0, 14, 45, 54, 93], "858": 0, "144337": 0, "16809": 0, "141923": 0, "1610": 0, "761827": 0, "13059": [0, 9, 14, 38, 54, 56, 93, 133], "row": [0, 2, 4, 10, 13, 15, 16, 22, 23, 30, 34, 35, 36, 39, 41, 42, 45, 48, 64, 78, 103, 104, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134], "16": [0, 2, 37, 117, 124, 125], "17": [0, 2, 4, 15, 123, 124, 125, 126, 133], "18": [0, 2, 4, 30, 57, 58, 65, 78, 113, 124, 125, 133], "19": [0, 2, 15, 27, 30, 78, 95, 125, 126, 130], "20": [0, 2, 27, 30, 34, 37, 78, 89, 123, 125], "note": [0, 9, 20, 32, 56, 68, 114, 115, 133], "doe": [0, 13, 64, 93, 117, 134], "mirror": [0, 4], "21": [0, 2, 27, 28, 30, 37, 78, 89, 117, 123, 124, 125], "13049": 0, "13050": 0, "13051": 0, "13052": 0, "13053": 0, "22": [0, 2, 30, 36, 78, 89, 123, 124, 125], "nbval_ignore_output": [0, 2], "lt": 0, "0x1131744c0": 0, "gt": [0, 2, 34], "24": [0, 2, 15, 30, 78, 126], "os_index_field": [0, 2, 4, 20, 34, 53, 54, 68], "_id": [0, 2, 4, 20, 34, 53, 68, 117, 134], "i": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 21, 26, 27, 28, 29, 30, 37, 41, 43, 44, 45, 48, 51, 52, 53, 54, 56, 61, 64, 70, 71, 83, 84, 93, 110, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134], "25": [0, 2, 15, 17, 34, 36, 67, 117], "arrai": [0, 17, 37, 48, 89, 110, 128], "2656419677076": [0, 23, 48], "kibana": [0, 14, 48, 54, 93, 110, 115], "airlin": [0, 14, 48, 54, 93, 110, 115], "sunni": [0, 67], "2018": [0, 4, 5, 6, 15, 26, 27, 28, 29, 34, 37, 89, 123, 124, 125, 126, 133], "01": [0, 2, 4, 5, 6, 15, 27, 28, 29, 34, 37, 89, 117, 123, 124, 125, 126, 133], "00": [0, 2, 4, 5, 6, 15, 29, 30, 34, 78, 89, 123, 126, 133], "9826615595518": [0, 23, 48], "logstash": [0, 14, 48, 54, 93, 110, 115], "airwai": [0, 14, 48, 54, 93, 110, 115], "clear": 0, "6369038508356": [0, 23, 48], "rain": 0, "7518761454494": 0, "02": [0, 4, 5, 6, 15, 26, 30, 34, 37, 78, 89, 123, 124], "04": [0, 15, 30, 37, 44, 78, 89, 123, 124, 125, 126, 130], "09": [0, 15, 30, 34, 37, 78, 89, 123, 125, 126], "8144645388556": 0, "jetbeat": [0, 14, 54, 93, 115], "hail": 0, "08": [0, 2, 15, 30, 34, 78, 123, 126], "28": [0, 2, 4, 117, 124, 133], "1443369038839": 0, "54": [0, 28, 55, 89, 90, 124, 130], "34": [0, 2, 30, 78, 106, 107], "26": [0, 2, 57, 58, 65, 113, 117], "try": [0, 32], "except": [0, 47, 50, 112], "attributeerror": 0, "e": [0, 4, 5, 6, 8, 115, 117, 134], "print": [0, 2, 21, 22, 23, 34, 48, 110], "method": [0, 2, 17, 21, 32, 49, 118, 137, 138], "would": [0, 48, 51, 110], "scan": [0, 48, 51, 110], "scroll": [0, 48, 51, 110], "entir": [0, 2, 47, 48, 50, 51, 110, 112, 133], "": [0, 2, 3, 4, 5, 6, 9, 17, 20, 35, 37, 40, 48, 51, 56, 68, 72, 73, 74, 75, 76, 85, 89, 105, 108, 110, 116, 128], "memori": [0, 3, 4, 21, 48, 51, 53, 110, 133], "If": [0, 3, 5, 6, 10, 12, 15, 23, 35, 36, 41, 48, 51, 54, 110], "explicitli": [0, 47, 50, 112], "requir": [0, 35, 48, 51, 53, 110, 133], "suffici": 0, "call": [0, 5, 6, 17, 48, 51, 93, 110, 117, 134, 138], "ed": 0, "ed_df": 0, "true": [0, 2, 4, 5, 6, 10, 12, 13, 15, 17, 22, 23, 25, 26, 27, 28, 29, 30, 34, 35, 37, 43, 44, 46, 47, 50, 52, 61, 64, 67, 112, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "33": [0, 2, 4, 123, 124, 133], "05": [0, 4, 15, 123, 126, 130, 133], "29": [0, 2, 123, 133], "42": [0, 2, 124, 125, 130], "41": [0, 34, 117], "57": [0, 37, 89, 125], "30": [0, 2, 15, 36, 89, 126], "31": [0, 2, 4, 15, 123, 126], "32": [0, 2, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "name": [0, 2, 5, 6, 7, 13, 14, 22, 23, 24, 37, 54, 55, 56, 57, 58, 64, 65, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 110, 112, 113, 115, 117, 134, 140], "35": [0, 2, 15, 99, 100, 125], "frankfurt": [0, 16], "am": [0, 16, 34], "main": [0, 16], "airport": [0, 16, 45], "cape": [0, 16], "town": [0, 16], "intern": [0, 16, 34, 45, 117], "venic": [0, 16], "marco": [0, 16], "polo": [0, 16], "napl": 0, "licenciado": [0, 45], "benito": [0, 45], "juarez": [0, 45], "pisa": [0, 45], "winnipeg": [0, 45], "jame": [0, 45], "armstrong": [0, 45], "richardson": [0, 45], "internat": 0, "itami": [0, 45], "adelaid": [0, 45], "list": [0, 2, 4, 5, 6, 8, 13, 15, 34, 35, 37, 64, 89, 115, 117, 118, 119, 120, 128, 134], "input": [0, 3, 67, 137], "current": [0, 4, 5, 6, 9, 15, 26, 27, 29, 36, 44, 53, 56, 73, 74, 75, 76, 108, 117], "36": [0, 2, 4, 15, 30, 55, 57, 58, 65, 77, 78, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113, 133], "typeerror": 0, "unhash": 0, "37": [0, 15, 55, 90, 133], "900": 0, "960": 0, "869736": 0, "975": 0, "812632": 0, "38": [0, 2, 30, 55, 78, 126, 130], "311": 0, "946": 0, "358410": 0, "51": [0, 4, 37, 106, 107, 126], "651": 0, "383864": 0, "03": [0, 3, 5, 6, 15, 44, 123, 130], "950": [0, 2], "907": 0, "836523": 0, "12820": 0, "909": 0, "973606": 0, "12906": 0, "983": 0, "429244": 0, "06": [0, 2, 4, 5, 6, 15, 28, 30, 44, 78, 123, 124, 126, 130], "58": [0, 30, 78, 124], "12918": 0, "1136": 0, "678150": 0, "12919": 0, "1105": 0, "211803": 0, "13013": 0, "1055": 0, "350213": 0, "68": [0, 117], "qualifi": 0, "fail": [0, 117, 134], "aggreg": [0, 5, 8, 32, 53, 115, 119, 135], "std": [0, 2, 5, 6, 9, 25, 56, 135, 140], "261629e": [0, 5, 6], "07": [0, 2, 5, 6, 117, 124], "204365e": [0, 5, 6, 44], "000000e": [0, 5, 6], "000205e": [0, 5, 6], "578438e": 0, "663969e": 0, "onli": [0, 2, 5, 6, 8, 9, 32, 40, 56, 93, 115], "numer": [0, 2, 9, 25, 26, 27, 28, 29, 30, 32, 43, 44, 52, 56, 73, 74, 75, 76, 108, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "43": [0, 37, 133], "578614e": [0, 5, 6], "664071e": [0, 5, 6], "44": [0, 15, 30, 78, 125, 126], "45": [0, 2, 27, 35, 41, 117, 123, 126, 130], "46": [0, 2, 30, 32, 37, 78, 121, 125, 127], "628": [0, 9, 27, 56, 74], "253689": [0, 9, 27, 56], "7092": 0, "142455": 0, "511": 0, "127842": 0, "835975": [0, 27], "266": [0, 5, 6, 9, 43, 56, 105], "396861": 0, "4578": [0, 5, 6], "438497": 0, "334": 0, "753952": 0, "939439": 0, "100": [0, 2, 5, 6, 9, 15, 29, 56, 76, 95, 119, 120, 126], "020528": 0, "409": 0, "893816": 0, "2459": 0, "705673": 0, "252": 0, "333192": 0, "50": [0, 2, 26, 37, 89, 125], "640": [0, 28, 37, 75], "556668": 0, "7610": 0, "330866": 0, "503": 0, "045170": 0, "75": [0, 2, 37, 89, 117], "842": [0, 37], "185470": 0, "9736": 0, "637600": 0, "720": 0, "416036": 0, "1199": [0, 9, 15, 26, 56, 73, 119, 120, 123], "729053": 0, "19881": 0, "482315": 0, "1902": 0, "902032": 0, "mai": [0, 117, 134, 135], "vari": [0, 9, 56], "due": 0, "47": [0, 9, 15, 117, 124, 126], "128494": [0, 27], "407061": [0, 43], "334664": [0, 43], "766770": 0, "939513": [0, 43], "020531": [0, 9, 15, 29, 56, 119, 120, 126], "410": 0, "008918": 0, "251": [0, 15, 129], "938710": 0, "387285": [0, 37], "148975": 0, "213490": [0, 37], "505705": 0, "729004": [0, 9, 15, 26, 56, 119, 120, 123], "901978": 0, "48": [0, 89, 124, 125], "class": [0, 4, 21, 47, 48, 53, 54, 110, 118, 133, 134, 137], "entri": [0, 21], "total": [0, 2, 21, 93, 117], "non": [0, 8, 21, 26, 27, 29, 35, 44, 73, 74, 75, 76, 83, 84, 108], "null": [0, 18, 19, 21], "23": [0, 2, 26, 28, 30, 37, 78, 89, 123, 124, 125], "usag": [0, 17, 21, 67], "mb": 0, "49": 0, "64": [0, 117], "000": [0, 2, 125], "byte": [0, 33], "storag": [0, 21], "714": 0, "numeric_onli": [0, 5, 6, 15, 25, 26, 27, 28, 29, 30, 37, 43, 44, 52, 72, 73, 74, 75, 76, 105, 108, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131], "12353": 0, "780369": 0, "360": [0, 9, 34], "715034": 0, "482422": 0, "780273": 0, "52": [0, 34, 99, 100], "53": [0, 30, 34, 55, 57, 58, 65, 77, 78, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113, 125], "4406": 0, "853013": 0, "251168": 0, "335171": [0, 9], "518797": 0, "55": [0, 2, 36, 37, 55, 124], "142457": 0, "853010": 0, "56": [0, 117, 124, 125], "678000e": [0, 44], "754909e": 0, "280000e": 0, "181500e": 0, "112470e": 0, "674818e": 0, "703500e": [0, 44], "156": 0, "59": [0, 89, 123], "60": [0, 34, 38, 47, 50, 112], "se": [0, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "bd": 0, "IT": 0, "ch": 0, "zh": 0, "ru": [0, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "amu": 0, "dc": 0, "61": [0, 117], "62": [0, 117], "hist": [0, 2, 135, 140], "figsiz": [0, 2, 17, 67], "show": [0, 2, 67, 133], "63": [0, 15], "oml_flights2": 0, "65": [0, 2], "os_info": [0, 2, 135, 140], "os_index_pattern": [0, 2, 4, 34, 54], "is_source_field": [0, 2, 34], "map": [0, 2, 11, 32, 34, 41, 54, 60, 117, 134], "capabl": [0, 2, 3, 34], "os_field_nam": [0, 2, 34], "is_sourc": [0, 2, 34], "os_dtyp": [0, 2, 34, 135, 140], "os_date_format": [0, 2, 34], "pd_dtype": [0, 2, 34], "is_search": [0, 2, 34], "is_aggregat": [0, 2, 34], "is_script": [0, 2, 34], "aggregatable_os_field_nam": [0, 2, 34], "date": [0, 3, 33, 34], "strict_date_hour_minute_second": [0, 34], "keyword": [0, 2, 5, 6, 8, 32, 33, 34, 35, 115, 134], "none": [0, 2, 4, 5, 6, 10, 13, 14, 15, 17, 21, 23, 26, 27, 28, 29, 34, 35, 37, 39, 40, 43, 44, 46, 47, 48, 50, 52, 53, 54, 64, 67, 72, 73, 74, 75, 76, 102, 105, 108, 110, 112, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134], "integ": [0, 34, 65, 94], "oper": [0, 5, 6, 10, 15, 34, 53, 55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 113, 137], "task": [0, 2, 34], "boolean_filt": [0, 2, 34], "must": [0, 2, 4, 5, 6, 34, 36, 41, 53], "term": [0, 2, 34, 115], "rang": [0, 2, 34, 53], "sort_field": [0, 2, 34], "_doc": [0, 2, 22, 23, 34], "size": [0, 2, 4, 34, 117, 135, 140], "sort_param": [0, 2, 34], "desc": [0, 2, 34], "_sourc": [0, 2, 34, 117], "bodi": [0, 2, 34, 35], "post_process": [0, 2, 34], "sort_index": [0, 2, 22, 23, 34], "demo": [1, 3], "notebook": [1, 3, 47], "datafram": [1, 2, 53, 55, 56, 57, 58, 60, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138], "onlin": [1, 3], "retail": [1, 3], "analysi": [1, 3], "opensearch": [2, 4, 7, 8, 11, 20, 21, 22, 23, 24, 32, 33, 34, 35, 36, 41, 46, 47, 48, 51, 53, 54, 60, 68, 86, 93, 103, 110, 114, 115, 117, 133, 134, 137], "panda": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 89, 93, 104, 105, 108, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137], "opensearch_py_ml": [2, 4, 13, 15, 16, 20, 21, 22, 23, 34, 35, 36, 38, 39, 40, 45, 48, 49, 54, 55, 57, 58, 64, 65, 68, 70, 71, 77, 79, 80, 83, 84, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 113, 114, 115, 117, 118, 133, 134], "To": 2, "let": 2, "read": [2, 3, 35, 117, 133, 134], "csv": [2, 46, 117], "file": [2, 46, 117, 137], "popul": [2, 38, 134], "local": 2, "df": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 43, 44, 45, 52, 55, 56, 57, 58, 60, 65, 67, 68, 77, 79, 80, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "csv_to_opensearch": [2, 139], "gz": 2, "os_client": [2, 4, 54, 117, 134], "os_dest_index": [2, 117, 134], "es_if_exist": 2, "replac": [2, 117, 134], "os_dropna": [2, 117, 134], "es_refresh": 2, "compress": [2, 46, 117], "gzip": 2, "index_col": [2, 117], "here": 2, "we": [2, 3, 5, 6, 17, 23, 32, 47, 50, 112, 115], "see": [2, 17, 21, 24, 67], "field": [2, 4, 7, 8, 16, 20, 22, 23, 24, 32, 35, 45, 53, 54, 68, 93, 115, 134], "wa": [2, 93], "us": [2, 3, 4, 5, 6, 8, 15, 16, 32, 35, 36, 37, 39, 45, 53, 67, 89, 117, 119, 120, 128, 134, 135, 138], "our": 2, "next": 2, "can": [2, 3, 4, 8, 17, 23, 32, 35, 47, 50, 53, 54, 112, 115, 133], "check": [2, 35], "which": [2, 3, 5, 6, 13, 26, 27, 28, 29, 30, 35, 37, 43, 44, 52, 53, 64, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131], "ar": [2, 5, 6, 8, 10, 11, 13, 15, 17, 18, 19, 26, 27, 28, 29, 35, 37, 41, 43, 44, 52, 54, 60, 64, 73, 74, 75, 76, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 135, 137, 138], "avail": [2, 138], "paramet": 2, "when": [2, 5, 6, 35, 47, 50, 112, 134], "instanti": 2, "allow": [2, 3], "one": [2, 5, 6], "choos": 2, "subset": [2, 4, 13, 40, 64], "your": [2, 3, 16, 45], "sinc": 2, "didn": 2, "t": [2, 30, 35, 53, 56], "have": [2, 8], "access": [2, 3, 53], "all": [2, 5, 6, 17, 26, 27, 28, 29, 30, 35, 37, 43, 44, 52, 108, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 137], "countri": 2, "customerid": 2, "invoiced": 2, "invoiceno": 2, "quantiti": [2, 93], "stockcod": 2, "unitpric": 2, "dtype": [2, 7, 8, 14, 18, 19, 21, 22, 25, 26, 27, 28, 29, 32, 33, 37, 40, 43, 44, 48, 52, 54, 55, 56, 57, 58, 65, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 112, 113, 115, 117, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 140], "now": [2, 117], "run": 2, "also": [2, 53], "offer": 2, "info": [2, 13, 64, 135], "about": [2, 21, 35], "underli": [2, 4, 59, 86, 93, 137], "It": [2, 16, 45], "contain": [2, 4, 14, 15, 39, 40, 54, 114, 133, 138], "inform": [2, 9, 21, 56], "being": [2, 23], "pass": [2, 5, 6, 35], "more": [2, 5, 6, 9, 35, 56], "later": 2, "doubl": 2, "long": [2, 134], "understand": 2, "how": [2, 115, 117, 134], "attribut": [2, 137], "much": 2, "first": [2, 3, 16, 18, 19, 23, 55, 114, 117], "last": [2, 45], "respect": 2, "unit": 2, "kingdom": 2, "17850": 2, "85123a": 2, "71053": 2, "count": [2, 5, 6, 9, 17, 21, 30, 34, 56, 115, 135], "14998": 2, "17419": 2, "21773": 2, "14999": 2, "22149": 2, "you": [2, 3, 36], "specifi": [2, 5, 6, 10, 13, 35, 39, 64, 115], "order": [2, 16, 35, 45, 114, 117], "2010": 2, "filter": [2, 16, 18, 19, 30, 35, 36, 37, 39, 45, 128, 135, 140], "under": [2, 36], "hood": 2, "queri": [2, 8, 34, 35, 36, 41, 53, 103, 135], "construct": [2, 4], "vector": 2, "directli": [2, 17, 138], "germani": 2, "1109": 2, "12662": 2, "22809": 2, "95": 2, "1110": 2, "84347": 2, "1111": 2, "84945": 2, "85": 2, "1112": 2, "22242": 2, "1113": 2, "22244": 2, "valu": [2, 5, 6, 9, 10, 14, 15, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 37, 43, 44, 46, 48, 52, 53, 56, 70, 71, 72, 73, 74, 75, 76, 78, 83, 84, 85, 89, 105, 108, 110, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135], "isin": [2, 140], "state": [2, 117], "84406b": 2, "84029g": 2, "84029e": 2, "combin": [2, 5, 6, 119, 120], "further": 2, "90": 2, "exampl": [2, 3], "translat": 2, "begin": 2, "ask": 2, "some": 2, "question": 2, "answer": 2, "mani": [2, 115, 138], "differ": [2, 53, 114], "nuniqu": [2, 121, 135, 140], "what": [2, 3, 9, 22, 23, 56], "sum": [2, 5, 6, 135, 140], "product": [2, 30], "111960": 2, "me": 2, "mean": [2, 5, 6, 9, 15, 56, 135, 140], "min": [2, 5, 6, 9, 15, 56, 119, 120, 135, 140], "max": [2, 5, 6, 9, 15, 56, 119, 120, 135, 140], "qunat": 2, "unit_pric": 2, "agg": [2, 6, 15, 135], "61548": 2, "490000": [2, 57, 58, 113], "103233": 2, "2880": 2, "990000": [2, 57, 58, 113], "9360": 2, "give": [2, 21, 137], "describ": [2, 135, 140], "10729": 2, "15000": 2, "15590": 2, "776680": 2, "464000": 2, "1764": 2, "189592": 2, "930116": 2, "106214": 2, "12347": 2, "14222": 2, "689466": 2, "250000": 2, "15668": 2, "019608": 2, "510000": 2, "17218": 2, "806604": 2, "472000": 2, "212788": 2, "18239": 2, "histogram": [2, 17, 67], "bin": [2, 17, 67], "log": 2, "13748": 2, "22086": 2, "83": [2, 117], "15291": 2, "21733": 2, "96": [2, 9], "14688": 2, "21212": 2, "102": [2, 15, 119, 120, 126], "85071b": 2, "176": [2, 55], "16029": 2, "85099c": 2, "14784": 2, "15061": 2, "22423": 2, "14785": 2, "22075": 2, "14788": 2, "17038": 2, "14974": 2, "14739": 2, "21704": 2, "72": 2, "14980": 2, "22178": 2, "258": 2, "string": [2, 5, 6, 35, 112], "concaten": 2, "kingdom85123a": 2, "kingdom71053": 2, "kingdom84406b": 2, "kingdom84029g": 2, "kingdom84029": 2, "14995": 2, "kingdom72349b": 2, "14996": 2, "kingdom72741": 2, "14997": 2, "kingdom22762": 2, "kingdom21773": 2, "kingdom22149": 2, "nov": 3, "2022": 3, "link": [3, 38, 93], "sourc": [3, 4, 6, 8, 10, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 30, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 53, 54, 56, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 83, 85, 87, 89, 93, 102, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "repositori": 3, "issu": [3, 8], "idea": 3, "python": [3, 54], "client": [3, 4, 54, 117, 134], "explor": 3, "analyz": [3, 9, 35, 56], "data": [3, 4, 5, 6, 9, 11, 16, 17, 21, 22, 23, 33, 35, 45, 46, 47, 53, 56, 59, 60, 86, 117, 119, 120, 134, 137], "familiar": 3, "compat": [3, 40], "api": [3, 4, 20, 54, 68], "where": [3, 4, 26, 27, 28, 29, 37, 43, 44, 52, 122, 123, 124, 125, 126, 127, 129, 130, 131], "possibl": [3, 4, 26, 27, 28, 29, 32, 37, 43, 44, 52, 122, 123, 124, 125, 126, 127, 129, 130, 131], "packag": 3, "exist": [3, 8, 10, 53, 83, 84, 117, 134], "structur": [3, 4, 133], "make": [3, 17], "easi": 3, "switch": 3, "between": [3, 37, 89, 114, 128], "scikit": 3, "power": [3, 88, 98], "equival": [3, 10], "In": [3, 47, 48, 50, 51, 53, 110, 112], "gener": [3, 9, 32, 39, 56, 115, 137], "resid": 3, "larg": [3, 133], "dataset": [3, 9, 36, 56], "store": [3, 4], "pypi": 3, "via": [3, 11, 17, 35, 60], "pip": 3, "m": 3, "recommend": 3, "look": 3, "through": 3, "document": [3, 8, 39, 53], "re": [3, 13, 64, 114], "new": [3, 10, 30, 93, 117, 134], "refer": [3, 9, 54, 56], "seri": [3, 5, 6, 8, 9, 11, 13, 14, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 32, 33, 35, 42, 43, 44, 52, 117, 134, 137, 138], "util": [3, 49, 137], "function": [3, 5, 6, 16, 35, 45, 119, 120, 137], "output": [3, 9, 50, 56, 133, 137], "option": [4, 5, 6, 13, 14, 15, 21, 22, 23, 26, 27, 28, 29, 35, 37, 39, 43, 44, 46, 52, 53, 54, 64, 72, 73, 74, 75, 76, 102, 105, 108, 112, 116, 117, 119, 120, 133, 134], "str": [4, 5, 6, 13, 15, 22, 23, 34, 35, 38, 46, 53, 54, 64, 87, 93, 112, 117, 118, 119, 120, 134], "column": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 56, 60, 64, 93, 103, 104, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "_query_compil": [4, 54], "querycompil": [4, 53, 54, 118], "two": 4, "dimension": [4, 41, 103], "mutabl": 4, "potenti": 4, "heterogen": 4, "tabular": [4, 50], "label": [4, 5, 6, 7, 10, 13, 64, 137], "ax": [4, 17, 67], "referenc": [4, 20, 68, 133, 134], "indic": [4, 70, 71, 83, 84, 117, 133], "The": [4, 7, 9, 11, 13, 16, 18, 19, 22, 23, 25, 33, 43, 45, 52, 53, 54, 56, 60, 64, 133], "rather": [4, 32, 115], "than": [4, 32, 53, 115], "index": [4, 5, 6, 7, 10, 13, 16, 18, 19, 21, 22, 23, 24, 33, 34, 38, 39, 45, 46, 47, 48, 50, 51, 54, 64, 93, 110, 112, 117, 133, 134, 137], "pattern": [4, 54], "wildcard": [4, 54], "g": [4, 5, 6, 8, 134], "A": [4, 34, 35, 38, 54, 114, 134], "default": [4, 5, 6, 13, 14, 15, 16, 18, 19, 22, 23, 26, 27, 28, 29, 30, 35, 37, 39, 43, 44, 45, 52, 53, 64, 78, 89, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "pandas_api_doc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 56, 59, 60, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 89, 93, 104, 105, 108, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "configur": 4, "argument": [4, 5, 6, 9, 26, 27, 29, 32, 35, 38, 44, 56, 73, 74, 75, 76, 108, 112, 115], "opensearch_test_cli": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 48, 52, 54, 55, 56, 57, 58, 60, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "head": [4, 22, 23, 36, 48, 55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 113, 133, 135, 140], "0": [4, 5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27, 28, 29, 30, 32, 35, 37, 43, 48, 52, 54, 55, 57, 58, 64, 65, 67, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 113, 117, 119, 120, 122, 124, 126, 128, 129, 130, 131, 133, 134], "1": [4, 5, 6, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 26, 30, 32, 36, 37, 39, 43, 44, 48, 54, 55, 57, 58, 64, 65, 77, 78, 79, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 110, 113, 117, 122, 124, 125, 128, 129, 130, 133, 134], "x": [4, 10, 15, 16, 22, 23, 34, 35, 36, 45, 48, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134], "todo": [4, 8, 9, 26, 27, 29, 32, 38, 44, 53, 56, 73, 74, 75, 76, 108, 115, 117], "index_field": 4, "01t00": 4, "772": 4, "100846": 4, "159": 4, "990962": 4, "800": 4, "217104": 4, "803": 4, "015200": 4, "func": [5, 6, 119, 120], "union": [5, 6, 13, 14, 15, 22, 35, 37, 64, 69, 89, 117, 119, 120, 128, 134], "axi": [5, 6, 10, 13, 18, 19, 39, 64], "int": [5, 6, 13, 16, 18, 19, 21, 30, 31, 35, 37, 39, 42, 45, 64, 66, 72, 73, 74, 75, 76, 78, 82, 85, 89, 102, 104, 105, 108, 109, 115, 116, 128, 134], "arg": [5, 6], "kwarg": [5, 6, 35], "over": [5, 6, 18, 19, 22, 23, 35], "dict": [5, 6, 117, 134], "either": [5, 6, 13, 64], "work": [5, 6, 35], "klass": [5, 6], "appli": [5, 6, 13, 17, 35, 36, 64], "accept": [5, 6, 15, 119, 120], "mad": [5, 6, 135, 140], "median": [5, 6, 72, 122, 135, 140], "mode": [5, 6, 46, 135, 140], "quantil": [5, 6, 135, 140], "rank": [5, 6], "sem": [5, 6], "skew": [5, 6], "var": [5, 6, 105, 135, 140], "datatyp": [5, 6, 26, 27, 28, 29, 30, 37, 43, 44, 52, 117, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131], "nan": [5, 6, 9, 25, 26, 27, 28, 29, 30, 37, 43, 44, 47, 50, 52, 56, 112, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131], "nat": [5, 6, 25, 26, 27, 28, 29, 30, 37, 43, 44, 52, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131], "posit": [5, 6, 16, 45], "scalar": [5, 6], "singl": [5, 6, 8, 17, 35, 89], "sever": [5, 6], "astyp": [5, 6], "8204364": [5, 6, 108], "92616288": [5, 6], "assert": [7, 20, 68], "isinst": [7, 20, 68], "na": [8, 15, 18, 19, 70, 71, 83, 84], "cell": 8, "each": [8, 11, 23, 25, 26, 27, 28, 29, 32, 33, 37, 43, 44, 52, 60, 70, 71, 83, 84, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "base": [8, 16, 40, 45, 54], "against": [8, 35], "ineffici": [8, 53], "altern": [8, 10], "approach": 8, "value_count": [8, 140], "howev": [8, 17], "thei": [8, 56, 114], "aggregat": [8, 32, 115], "text": [8, 32, 35, 115, 134], "For": [8, 10, 17, 53, 93, 133], "multipl": [8, 30, 35, 78, 79, 80, 96, 97], "tag": 8, "project": 8, "add": [8, 9, 38, 56, 90, 93, 140], "addit": [8, 9, 35, 38, 55, 56, 90], "featur": 8, "summari": [8, 9, 21, 34, 56], "ecommerc": [8, 10, 21, 30, 32, 35, 36, 41, 55, 57, 58, 65, 77, 78, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 113], "customer_first_nam": [8, 10, 21, 32, 36, 55], "geoip": [8, 21, 30, 36], "city_nam": [8, 21, 30, 36], "4675": [8, 10, 21, 41, 103], "4094": [8, 21], "descript": [9, 56, 137], "statist": [9, 56], "summar": [9, 56], "central": [9, 56], "tendenc": [9, 56], "dispers": [9, 56], "shape": [9, 38, 56, 135, 140], "distribut": [9, 56], "exclud": [9, 18, 19, 40, 56], "both": [9, 56], "well": [9, 56], "mix": [9, 56], "depend": [9, 35, 56], "provid": [9, 56], "below": [9, 56], "detail": [9, 21, 56, 112], "percentil": [9, 56], "386661": [9, 56], "743006": 9, "level": 10, "inplac": 10, "error": [10, 35, 117], "rais": [10, 35, 117, 134], "request": [10, 18, 19, 134], "remov": [10, 23, 26, 27, 28, 29, 37, 43, 44, 52, 117, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134], "whether": [10, 70, 71, 83, 84], "multiindex": 10, "do": [10, 32, 53, 115, 134], "suppress": 10, "caller": 10, "email": 10, "user": [10, 32, 35, 38], "eddi": [10, 35, 55], "underwood": 10, "famili": 10, "zzz": 10, "mari": [10, 36, 55], "bailei": 10, "gwen": [10, 55], "butler": 10, "dian": [10, 55], "chandler": 10, "weber": 10, "4670": 10, "lambert": 10, "4671": [10, 35], "jim": [10, 35], "gilbert": 10, "4672": [10, 35], "yahya": [10, 35], "rivera": 10, "4673": 10, "hampton": 10, "4674": [10, 21, 35], "jackson": [10, 35], "hopkin": 10, "goodwin": 10, "oliv": [10, 35], "rio": 10, "_os_dtype_to_pd_dtyp": [11, 60], "__doc__": [11, 60], "determin": [12, 61, 115], "item": [13, 14, 39, 64], "sequenc": [13, 35, 64], "regex": [13, 64], "accord": [13, 64], "routin": [13, 64], "its": [13, 64], "content": [13, 53, 64], "keep": [13, 64], "regular": [13, 23, 64], "express": [13, 18, 19, 38, 64], "search": [13, 34, 35, 64, 115, 117], "By": [13, 23, 31, 35, 53, 64, 82, 133], "enforc": [13, 64], "mutual": [13, 64], "exclus": [13, 64], "kei": [14, 15, 135], "ani": [14, 23, 35, 47, 89], "given": [14, 35, 37, 89, 114, 128], "ex": 14, "found": 14, "dropna": [15, 17, 30, 117, 118, 134], "dataframegroupbi": [15, 135], "perform": 15, "group": [15, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "togeth": 15, "drop": [15, 135], "ed_flight": 15, "ae": [15, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "110": [15, 117, 119, 120, 126], "799911": [15, 119, 120, 126], "1126": [15, 119, 120, 123], "148682": [15, 119, 120, 123], "132": 15, "443756": 15, "817": [15, 128], "931030": 15, "125": [15, 119, 120, 126], "589394": [15, 119, 120, 126], "642822": [15, 119, 120, 123], "389603": 15, "1172": 15, "382568": 15, "AT": [15, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "1181": [15, 119, 120, 123], "835815": [15, 119, 120, 123], "tr": [15, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "307": 15, "915649": 15, "145966": [15, 119, 120, 126], "153069": 15, "1192": 15, "429932": 15, "za": [15, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "002663": [15, 119, 120, 126], "1196": [15, 119, 120, 123], "186157": [15, 119, 120, 123], "121": [15, 117], "280296": 15, "1175": 15, "709961": 15, "643": [15, 124], "956793": 15, "717949": 15, "388": 15, "828809": 15, "571429": 15, "673": 15, "551677": 15, "746154": 15, "682": 15, "197241": 15, "733333": 15, "647": 15, "158290": 15, "819936": 15, "598": 15, "063146": 15, "752014": 15, "579": [15, 128], "799066": 15, "767068": 15, "636": 15, "998605": 15, "738589": 15, "677": 15, "794078": 15, "928571": 15, "sort": [16, 22, 23, 45, 53, 114, 115], "quickli": [16, 45], "ha": [16, 20, 30, 32, 45, 53, 68, 78], "right": [16, 45, 55, 57, 58, 65, 77, 79, 80, 88, 106, 107, 113], "select": [16, 40, 45, 137], "sydnei": 16, "kingsford": 16, "smith": 16, "grid": [17, 67], "xlabels": [17, 67], "xrot": [17, 67], "ylabels": [17, 67], "yrot": [17, 67], "sharex": 17, "sharei": 17, "layout": 17, "kwd": [17, 67], "deriv": [17, 67, 117], "plot": [17, 67, 137], "_core": [17, 67], "hist_fram": [17, 67], "ideal": 17, "d": [17, 134], "weight": 17, "pre": 17, "col": 17, "select_dtyp": [17, 135], "occurr": [18, 19, 36, 115], "maximum": [18, 26, 73], "oml_df": [18, 19, 30, 37, 48, 51, 128, 133, 134], "1843": 18, "109": 18, "1988": 18, "minimum": [19, 29, 76], "5454": 19, "veri": [20, 53, 68], "limit": [20, 68], "compar": [20, 68], "verbos": [21, 117], "buf": [21, 47, 50, 112], "stringio": 21, "max_col": [21, 47, 50], "memory_usag": 21, "show_count": 21, "concis": 21, "full": [21, 35], "copi": 21, "lot": [21, 53], "code": [21, 117], "difficult": 21, "split": 21, "out": [21, 115], "appropri": 21, "sparsedatafram": 21, "incorrect": [21, 36], "iter": [22, 23, 117, 137], "tupl": [22, 23, 41, 103, 117, 134], "pair": [22, 23], "itertupl": [22, 135], "namedtupl": [22, 23], "element": [23, 42, 55, 57, 58, 65, 70, 71, 77, 79, 80, 83, 84, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 113], "possibli": 23, "follow": [23, 47, 50, 112], "iterrow": [23, 135], "69421554118": [23, 48], "041778346198": [23, 48], "With": 23, "custom": [23, 117], "yield": 23, "deviat": [25, 43, 72, 105, 122, 125, 129], "213": [25, 72], "35497": 25, "00000": 25, "473011": 25, "484": 25, "implement": [26, 27, 29, 32, 44, 47, 48, 50, 51, 73, 74, 75, 76, 108, 110, 112, 115], "remaind": [26, 27, 29, 32, 44, 73, 74, 75, 76, 108, 115], "preserv": [26, 27, 28, 29, 37, 43, 44, 52, 122, 123, 124, 125, 126, 127, 129, 130, 131], "73": [26, 79, 80], "254": [27, 117], "83598": 27, "564438232": 27, "363": 28, "624776611": 28, "362667": 28, "387": 28, "021": 29, "os_siz": [30, 78, 115], "calcul": [30, 37, 78, 89, 128], "don": [30, 56], "consid": 30, "oml_ecommerc": [30, 78], "total_quant": [30, 55, 57, 58, 65, 77, 79, 80, 88, 93, 98, 103, 106, 107, 113], "customer_birth_d": [30, 32], "day_of_week": [30, 78], "taxful_total_pric": [30, 55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113], "york": 30, "thursdai": [30, 78], "98": [30, 55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113], "tax_amount": 30, "order_d": [30, 78], "2016": [30, 78], "definit": [31, 82], "cardin": [32, 135], "ignore_abov": 32, "256": [32, 129], "categori": [32, 35], "currenc": [32, 35], "float": [33, 37, 39, 57, 58, 72, 73, 74, 75, 76, 89, 102, 105, 108, 113, 116, 128], "debug": 34, "compil": 34, "tail": [34, 135, 140], "12608": 34, "cyeg": 34, "120": 34, "12720": 34, "40": [34, 57, 58, 65, 113, 124, 125], "bhm": 34, "255": [34, 121, 127, 129], "12725": 34, "atl": 34, "12823": 34, "ngo": 34, "12907": 34, "lim": 34, "225": 34, "match_phras": 35, "must_not_match": 35, "multi_match_typ": 35, "match_only_text_field": 35, "fuzzi": 35, "match": [35, 134], "multi_match": 35, "within": [35, 36, 114], "otherwis": [35, 42, 61, 104], "specif": [35, 115], "instead": 35, "take": 35, "account": [35, 117], "boolean": [35, 38], "NOT": 35, "prevent": 35, "aren": 35, "properli": 35, "men": 35, "cloth": 35, "eur": 35, "accessori": 35, "shoe": 35, "abd": 35, "4663": 35, "samir": 35, "4667": 35, "sultan": 35, "women": 35, "2310": 35, "dsl": 36, "dictionari": 36, "geo": 36, "distanc": 36, "_": 36, "point": 36, "locat": 36, "geo_dist": 36, "1km": 36, "dubai": 36, "rabbia": 36, "al": 36, "robbi": 36, "nest": 36, "correct": 36, "need": 36, "q": [37, 89, 128], "comput": [37, 89, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137], "361": 37, "040768": 37, "296587520": 37, "637076736": 37, "658119680": 37, "expr": 38, "guid": 38, "pandas_user_guid": 38, "2730": 38, "frac": [39, 102], "random_st": [39, 102], "randomli": 39, "fraction": 39, "cannot": 39, "seed": 39, "random": 39, "datetim": 40, "repres": [41, 42, 103, 104], "len": [41, 103], "cach": 41, "updat": 41, "407": 43, "93951": 43, "20436e": 44, "1678": 44, "37035": 44, "xi": 45, "xianyang": 45, "zurich": 45, "ukrainka": 45, "air": [45, 115], "ministro": 45, "pistarini": 45, "washington": 45, "dull": 45, "path_or_buf": 46, "sep": [46, 117], "na_rep": [46, 47, 50, 112], "float_format": [46, 47, 50, 112], "header": [46, 47, 50, 112, 117], "index_label": 46, "w": 46, "encod": [46, 117], "infer": [46, 117], "quot": [46, 117], "quotechar": [46, 117], "line_termin": 46, "chunksiz": [46, 117, 134], "tupleize_col": 46, "date_format": 46, "doublequot": [46, 117], "escapechar": [46, 117], "decim": [46, 47, 50, 117], "write": 46, "comma": [46, 117], "separ": [46, 117], "col_spac": [47, 50], "formatt": [47, 50], "sparsifi": [47, 50], "index_nam": [47, 50], "justifi": [47, 50], "max_row": [47, 50, 112], "show_dimens": [47, 50], "bold_row": 47, "escap": 47, "border": 47, "table_id": 47, "render_link": 47, "render": [47, 50, 112], "html": 47, "tabl": 47, "scenario": [47, 50, 112], "avoid": [47, 50, 112], "accident": [47, 50, 112], "dump": [47, 50, 112], "overridden": [47, 50, 112], "Not": [48, 51, 110], "represent": [48, 51, 110, 112], "involv": [48, 51, 110], "bewar": [48, 51, 110], "pd_df": [48, 133, 134], "f": [48, 110, 134], "ntype": [48, 110], "show_progress": [49, 111, 133], "convert": [49, 117, 133, 134], "line_width": 50, "consol": 50, "friendli": 50, "to_numpi": [51, 135, 140], "varianc": [52, 116, 131], "70964": [52, 116], "570234": 52, "111987": 52, "761279": 52, "76128": 52, "query_compil": [53, 118], "behaviour": 53, "slice": 53, "docvalu": 53, "so": [53, 54, 134, 135], "discourag": 53, "load": [53, 133], "case": 53, "advis": 53, "duplic": 53, "anoth": 53, "doc_valu": 53, "enabl": 53, "proxi": 54, "o": [54, 117, 134], "delet": [54, 117, 134], "chang": [54, 93], "after": [54, 134], "rebuilt": 54, "inconsist": 54, "occur": 54, "wise": [55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 113], "binari": [55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 113, 137], "199": [55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113], "174": [55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113], "80": [55, 57, 58, 65, 77, 79, 80, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 106, 107, 113], "980000": [55, 77, 90, 99, 100, 106, 107], "200": [55, 90], "979996": [55, 77, 90, 99, 100, 106, 107], "175": [55, 90], "81": [55, 90], "980003": [55, 77, 90, 99, 100, 106, 107], "201": 55, "82": 55, "customer_last_nam": 55, "eddieunderwood": 55, "marybailei": 55, "gwenbutl": 55, "dianechandl": 55, "eddieweb": 55, "divis": [57, 58, 65, 91, 92, 94, 101, 113], "truediv": [57, 58, 140], "99": [57, 58, 65, 113, 117], "989998": [57, 58, 113], "87": [57, 58, 65, 113], "489998": [57, 58, 113], "490002": [57, 58, 113], "draw": 67, "import": [67, 117], "alpha": 67, "densiti": 67, "other": 69, "collect": 69, "booleanfilt": [69, 70, 71, 83, 84], "detect": [70, 71, 83, 84], "miss": [70, 71, 83, 84, 117, 134], "mask": [70, 71, 83, 84], "isna": [71, 140], "absolut": [72, 122, 125], "modulo": [77, 95], "959999": [79, 80], "107": [79, 80, 117], "399": [79, 80], "959991": [79, 80], "349": [79, 80], "161": [79, 80, 117], "960007": [79, 80], "mul": [80, 96, 97, 140], "notna": [84, 140], "uniqu": [85, 140], "exponenti": [88, 98], "1367": 88, "520366": 88, "2913": 88, "840351": 88, "39991": 88, "998691": 88, "30617": 88, "998905": 88, "6557": 88, "760944": 88, "289159912": 89, "031627441": 89, "256136963": 89, "844534180": 89, "left": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101], "div": [91, 92, 101, 140], "027042": [91, 92, 101], "018525": [91, 92, 101], "005001": [91, 92, 101], "005715": [91, 92, 101], "012349": [91, 92, 101], "new_nam": 93, "symbol": 93, "instanc": 93, "could": 93, "floordiv": [94, 140], "500": [94, 95, 125], "mod": [95, 140], "260006": 95, "180004": 95, "040009": 95, "150": 95, "119980": 95, "369": [96, 97], "799995": [96, 97], "539": [96, 97], "1999": [96, 97], "799957": [96, 97], "1749": [96, 97], "809": [96, 97], "800034": [96, 97], "pow": [98, 140], "int_": 98, "subtract": [99, 100, 106, 140], "sub": [99, 100, 107, 140], "198": [99, 100], "173": [99, 100], "79": [99, 100], "197": [106, 107, 117], "172": [106, 107], "78": [106, 107, 117], "oml_seri": 110, "oml_": 110, "pd_": 110, "min_row": 112, "behavior": 114, "slightli": 114, "seen": 114, "bucket": 115, "automat": 115, "descend": 115, "should": [115, 138], "overal": 115, "os_api_doc": 115, "3331": [115, 117], "3274": 115, "3234": 115, "3220": 115, "etl": [117, 133, 134, 136], "filepath_or_buff": 117, "os_if_exist": [117, 134], "os_refresh": [117, 134], "os_type_overrid": [117, 134], "delimit": 117, "usecol": 117, "prefix": 117, "engin": 117, "true_valu": 117, "false_valu": 117, "skipinitialspac": 117, "skiprow": 117, "skipfoot": 117, "nrow": 117, "na_valu": 117, "keep_default_na": 117, "na_filt": 117, "skip_blank_lin": 117, "parse_d": 117, "infer_datetime_format": 117, "keep_date_col": 117, "date_pars": 117, "dayfirst": 117, "cache_d": 117, "thousand": 117, "b": [117, 134], "linetermin": 117, "comment": 117, "dialect": 117, "warn_bad_lin": 117, "error_bad_lin": 117, "on_bad_lin": 117, "delim_whitespac": 117, "low_memori": 117, "memory_map": 117, "float_precis": 117, "modifi": [117, 134], "append": [117, 134], "behav": [117, 134], "alreadi": [117, 134], "valueerror": [117, 134], "befor": [117, 134, 138], "insert": [117, 134], "caus": [117, 134], "bulk": [117, 134], "es_typ": 117, "overrid": [117, 134], "read_csv": 117, "churn": 117, "osclient": 117, "area": 117, "phone": 117, "plan": 117, "voic": 117, "mail": 117, "vmail": 117, "messag": 117, "dai": 117, "minut": 117, "charg": 117, "ev": 117, "night": 117, "intl": 117, "servic": 117, "k": 117, "128": 117, "415": 117, "382": 117, "4657": 117, "ye": 117, "265": 117, "244": [117, 129], "91": 117, "oh": 117, "371": 117, "7191": 117, "123": 117, "195": [117, 122], "103": 117, "137": 117, "104": 117, "162": 117, "84": 117, "408": 117, "89": 117, "86": 117, "196": 117, "186": 117, "3328": 117, "192": [117, 122], "279": [117, 129], "3329": 117, "191": 117, "3330": 117, "510": 117, "184": 117, "139": 117, "3332": 117, "74": 117, "77": 117, "241": 117, "3333": 117, "valid": 117, "took": 117, "timed_out": 117, "_shard": 117, "success": 117, "skip": 117, "hit": 117, "relat": 117, "eq": 117, "max_scor": 117, "_index": 117, "_score": 117, "retain": 117, "hold": 118, "au": [119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "294312": [119, 120, 126], "1197": [119, 120, 123], "632690": [119, 120, 123], "ca": [119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "557251": [119, 120, 126], "1198": [119, 120, 123], "852539": [119, 120, 123], "101": [119, 120, 126], "004005": [119, 120, 126], "742310": [119, 120, 123], "877190": [119, 120, 126], "621582": [119, 120, 123], "142": [119, 120, 126], "876465": [119, 120, 126], "855": [119, 120, 123], "935547": [119, 120, 123], "305": [121, 127], "377": [121, 127], "416": [121, 127], "944": [121, 127], "739": [121, 127], "1987": [121, 127], "283": [121, 127], "233": 122, "697174": 122, "189": 122, "250061": 122, "823669": 122, "202": 122, "539764": 122, "203": 122, "344696": 122, "206": 122, "431702": 122, "178": 122, "658447": 122, "221": 122, "863434": 122, "228": 122, "461365": 122, "162842": 122, "605": 124, "132970": 124, "152174": 124, "695652": 124, "891304443": 124, "674": 124, "827252": 124, "147541": 124, "744262": 124, "593442627": 124, "650530": 124, "175066": 124, "872679": 124, "469496094": 124, "669": 124, "558832": 124, "129808": 124, "843750": 124, "199519287": 124, "648": 124, "747109": 124, "134534": 124, "951271": 124, "165254150": 124, "662": 124, "994963": 124, "131258": 124, "832206": 124, "534506104": 124, "660": 124, "612988": 124, "149020": 124, "682353": 124, "447058838": 124, "485": 124, "253247": 124, "100000": 124, "900000": 124, "000000000": 124, "595": 124, "774391": 124, "125315": 124, "753900": 124, "456970215": 124, "053057": 124, "148410": 124, "766784": 124, "141342773": 124, "585": 125, "720490": 125, "678": 125, "447433": 125, "659": 125, "715592": 125, "689": 125, "241348": 125, "663": 125, "516057": 125, "670": 125, "714956": 125, "680": 125, "111084": 125, "441": 125, "681122": 125, "600": 125, "591525": 125, "633": 125, "935425": 125, "572": 128, "290384": 128, "578": 128, "140564": 128, "567": 128, "980560": 128, "582": 128, "618713": 128, "590": 128, "170986": 128, "811890": 128, "574": 128, "131340": 128, "852264": 128, "591": 128, "533699": 128, "877014": 128, "791": 128, "622625": 128, "793": 128, "362946": 128, "378523": 128, "766": 128, "855530": 128, "319": 128, "925979": 128, "325": 128, "704562": 128, "327": 128, "311007": 128, "336": 128, "839572": 128, "332": 128, "323011": 128, "314": 128, "472537": 128, "652659": 128, "298": 128, "483032": 128, "290205": 128, "024850": 128, "362137": 128, "568": 128, "323944": 128, "489746": 128, "523": 128, "890680": 128, "875500": 129, "367171": 129, "020634": 129, "903626": 129, "355811": 129, "949901": 129, "883342": 129, "381035": 129, "026411": 129, "585377": 129, "336902": 129, "961486": 129, "261": 129, "263054": 129, "341587": 129, "921980": 129, "259": 129, "696213": 129, "338140": 129, "964815": 129, "232": 129, "504297": 129, "357510": 129, "991340": 129, "267": 129, "827572": 129, "333333": 129, "191454": 129, "272": 129, "774819": 129, "331242": 129, "939469": 129, "505568": 129, "356766": 129, "948258": 129, "783612e": 130, "124": 130, "058223e": 130, "837": 130, "437872e": 130, "66": 130, "1083": 130, "785365e": 130, "1183": 130, "124173e": 130, "127": 130, "2786": 130, "899533e": 130, "97": 130, "2093": 130, "684563e": 130, "684": 130, "852532e": 130, "183804e": 130, "249": 130, "5472": 130, "819840e": 130, "783": 130, "75789": 131, "979090": 131, "130443": 131, "950549": 131, "59683": 131, "055316": 131, "125979": 131, "783429": 131, "65726": 131, "669676": 131, "144610": 131, "090013": 131, "65088": 131, "483446": 131, "113094": 131, "833562": 131, "68149": 131, "950516": 131, "116496": 131, "688139": 131, "67305": 131, "277617": 131, "114107": 131, "852666": 131, "53740": 131, "570338": 131, "127062": 131, "942132": 131, "61245": 131, "521047": 131, "094868": 131, "100420": 131, "74349": 131, "939410": 131, "109638": 131, "758700": 131, "62920": 131, "072901": 131, "126608": 131, "775609": 131, "signific": 133, "signfic": 133, "progress": 133, "stdout": 133, "10000": 133, "2020": 133, "572395": 133, "309031": 133, "pandas_to_opensearch": [133, 136], "os_verify_mapping_compat": 134, "thread_count": 134, "use_pandas_index_for_os_id": 134, "mainli": 134, "destin": 134, "refresh": 134, "field_nam": 134, "es_data_typ": 134, "verifi": 134, "schema": 134, "thread": 134, "destination_index": 134, "141": 134, "c": 134, "foo": 134, "20190102": 134, "h": 134, "overwrit": 134, "if_exist": 134, "sync": 134, "readabl": 134, "empti": [135, 140], "ndim": [135, 140], "get": 135, "sampl": [135, 140], "accur": 135, "approxim": 135, "hyperloglog": 135, "algorithm": 135, "exact": 135, "idxmax": 135, "idxmin": 135, "os_match": 135, "os_queri": 135, "to_csv": 135, "to_html": 135, "to_str": [135, 140], "to_panda": [135, 140], "page": 137, "overview": 137, "public": 137, "expos": 137, "namespac": 137, "constructor": 137, "applic": 137, "groupbi": 137, "window": 137, "stat": 137, "reindex": 137, "manipul": 137, "serial": 137, "io": 137, "convers": 137, "flat": 137, "variant": 138, "thereof": 138, "those": 138, "most": 138, "multipli": 140, "divid": 140, "radd": 140, "rsub": 140, "rsubtract": 140, "rmul": 140, "rmultipli": 140, "rdiv": 140, "rdivid": 140, "rtruediv": 140, "rfloordiv": 140, "rmod": 140, "rpow": 140, "renam": 140, "isnul": 140, "notnul": 140, "es_match": 140}, "objects": {"": [[3, 0, 0, "-", "opensearch_py_ml"]], "opensearch_py_ml": [[4, 1, 1, "", "DataFrame"], [53, 1, 1, "", "Index"], [54, 1, 1, "", "Series"]], "opensearch_py_ml.DataFrame": [[5, 2, 1, "", "agg"], [6, 2, 1, "", "aggregate"], [7, 3, 1, "", "columns"], [8, 2, 1, "", "count"], [9, 2, 1, "", "describe"], [10, 2, 1, "", "drop"], [11, 3, 1, "", "dtypes"], [12, 3, 1, "", "empty"], [13, 2, 1, "", "filter"], [14, 2, 1, "", "get"], [15, 2, 1, "", "groupby"], [16, 2, 1, "", "head"], [17, 2, 1, "", "hist"], [18, 2, 1, "", "idxmax"], [19, 2, 1, "", "idxmin"], [20, 3, 1, "", "index"], [21, 2, 1, "", "info"], [22, 2, 1, "", "iterrows"], [23, 2, 1, "", "itertuples"], [24, 2, 1, "", "keys"], [25, 2, 1, "", "mad"], [26, 2, 1, "", "max"], [27, 2, 1, "", "mean"], [28, 2, 1, "", "median"], [29, 2, 1, "", "min"], [30, 2, 1, "", "mode"], [31, 3, 1, "", "ndim"], [32, 2, 1, "", "nunique"], [33, 3, 1, "", "os_dtypes"], [34, 2, 1, "", "os_info"], [35, 2, 1, "", "os_match"], [36, 2, 1, "", "os_query"], [37, 2, 1, "", "quantile"], [38, 2, 1, "", "query"], [39, 2, 1, "", "sample"], [40, 2, 1, "", "select_dtypes"], [41, 3, 1, "", "shape"], [42, 3, 1, "", "size"], [43, 2, 1, "", "std"], [44, 2, 1, "", "sum"], [45, 2, 1, "", "tail"], [46, 2, 1, "", "to_csv"], [47, 2, 1, "", "to_html"], [48, 2, 1, "", "to_numpy"], [49, 2, 1, "", "to_pandas"], [50, 2, 1, "", "to_string"], [51, 3, 1, "", "values"], [52, 2, 1, "", "var"]], "opensearch_py_ml.Series": [[55, 2, 1, "", "add"], [56, 2, 1, "", "describe"], [57, 2, 1, "", "div"], [58, 2, 1, "", "divide"], [59, 3, 1, "", "dtype"], [60, 3, 1, "", "dtypes"], [61, 3, 1, "", "empty"], [64, 2, 1, "", "filter"], [65, 2, 1, "", "floordiv"], [66, 2, 1, "", "head"], [67, 2, 1, "", "hist"], [68, 3, 1, "", "index"], [69, 2, 1, "", "isin"], [70, 2, 1, "", "isna"], [71, 2, 1, "", "isnull"], [72, 2, 1, "", "mad"], [73, 2, 1, "", "max"], [74, 2, 1, "", "mean"], [75, 2, 1, "", "median"], [76, 2, 1, "", "min"], [77, 2, 1, "", "mod"], [78, 2, 1, "", "mode"], [79, 2, 1, "", "mul"], [80, 2, 1, "", "multiply"], [81, 3, 1, "", "name"], [82, 3, 1, "", "ndim"], [83, 2, 1, "", "notna"], [84, 2, 1, "", "notnull"], [85, 2, 1, "", "nunique"], [86, 3, 1, "", "os_dtype"], [87, 2, 1, "", "os_info"], [88, 2, 1, "", "pow"], [89, 2, 1, "", "quantile"], [90, 2, 1, "", "radd"], [91, 2, 1, "", "rdiv"], [92, 2, 1, "", "rdivide"], [93, 2, 1, "", "rename"], [94, 2, 1, "", "rfloordiv"], [95, 2, 1, "", "rmod"], [96, 2, 1, "", "rmul"], [97, 2, 1, "", "rmultiply"], [98, 2, 1, "", "rpow"], [99, 2, 1, "", "rsub"], [100, 2, 1, "", "rsubtract"], [101, 2, 1, "", "rtruediv"], [102, 2, 1, "", "sample"], [103, 3, 1, "", "shape"], [104, 3, 1, "", "size"], [105, 2, 1, "", "std"], [106, 2, 1, "", "sub"], [107, 2, 1, "", "subtract"], [108, 2, 1, "", "sum"], [109, 2, 1, "", "tail"], [110, 2, 1, "", "to_numpy"], [111, 2, 1, "", "to_pandas"], [112, 2, 1, "", "to_string"], [113, 2, 1, "", "truediv"], [114, 2, 1, "", "unique"], [115, 2, 1, "", "value_counts"], [116, 2, 1, "", "var"]], "opensearch_py_ml.etl": [[117, 4, 1, "", "csv_to_opensearch"], [133, 2, 1, "", "opensearch_to_pandas"], [134, 2, 1, "", "pandas_to_opensearch"]], "opensearch_py_ml.groupby": [[118, 1, 1, "", "DataFrameGroupBy"]], "opensearch_py_ml.groupby.DataFrameGroupBy": [[119, 2, 1, "", "agg"], [120, 2, 1, "", "aggregate"], [121, 2, 1, "", "count"], [122, 2, 1, "", "mad"], [123, 2, 1, "", "max"], [124, 2, 1, "", "mean"], [125, 2, 1, "", "median"], [126, 2, 1, "", "min"], [127, 2, 1, "", "nunique"], [128, 2, 1, "", "quantile"], [129, 2, 1, "", "std"], [130, 2, 1, "", "sum"], [131, 2, 1, "", "var"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"demo": 0, "notebook": 0, "datafram": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 135], "step": [0, 2], "0": [0, 2], "import": [0, 2], "1": [0, 2], "setup": [0, 2], "client": [0, 2], "compar": 0, "similar": 0, "differ": 0, "between": 0, "panda": [0, 136], "v": 0, "opensearch_py_ml": [0, 53], "attribut": [0, 135, 140], "underli": [0, 135, 140], "data": [0, 2, 135, 140], "column": [0, 2, 7], "dtype": [0, 11, 59, 60], "select_dtyp": [0, 40], "empti": [0, 12, 61], "shape": [0, 41, 103], "index": [0, 2, 20, 53, 68, 135, 138, 140], "valu": [0, 51], "iter": [0, 135, 140], "head": [0, 2, 16, 66], "tail": [0, 2, 45, 109], "kei": [0, 24], "get": [0, 2, 3, 14], "queri": [0, 38], "boolean": [0, 2], "function": [0, 135, 136, 140], "applic": [0, 135], "groupbi": [0, 15, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "window": [0, 135], "agg": [0, 5, 119], "comput": [0, 135, 140], "descript": [0, 2, 135, 140], "stat": [0, 135, 140], "count": [0, 8, 121], "describ": [0, 9, 56], "info": [0, 21], "max": [0, 26, 73, 123], "min": [0, 29, 76, 126], "mean": [0, 27, 74, 124], "sum": [0, 44, 108, 130], "nuniqu": [0, 32, 85, 127], "drop": [0, 10], "plot": [0, 135, 140], "opensearch": [0, 3, 135, 136, 140], "util": [0, 136], "exampl": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 48, 52, 54, 55, 56, 57, 58, 60, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "onlin": 2, "retail": 2, "analysi": 2, "start": [2, 3], "select": [2, 135, 140], "aggreg": [2, 6, 120], "statist": 2, "arithmet": 2, "oper": [2, 140], "py": 3, "ml": 3, "machin": 3, "learn": 3, "back": 3, "instal": 3, "paramet": [4, 5, 6, 10, 13, 14, 15, 16, 18, 19, 22, 23, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 43, 44, 45, 52, 54, 55, 57, 58, 64, 65, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 113, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "see": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 56, 59, 60, 64, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 89, 93, 104, 105, 108, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "also": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 56, 59, 60, 64, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 89, 93, 104, 105, 108, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 52, 55, 56, 57, 58, 60, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "filter": [13, 64], "note": [13, 17, 21, 41, 54, 64, 67, 103, 117], "hist": [17, 67], "idxmax": 18, "idxmin": 19, "iterrow": 22, "yield": 22, "itertupl": 23, "mad": [25, 72, 122], "median": [28, 75, 125], "mode": [30, 78], "ndim": [31, 82], "os_dtyp": [33, 86], "os_info": [34, 87], "os_match": 35, "os_queri": 36, "quantil": [37, 89, 128], "sampl": [39, 102], "size": [42, 104], "std": [43, 105, 129], "to_csv": 46, "to_html": 47, "to_numpi": [48, 110], "to_panda": [49, 111], "to_str": [50, 112], "var": [52, 116, 131], "seri": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140], "add": 55, "div": 57, "divid": 58, "es_dtyp": 62, "es_match": 63, "floordiv": 65, "isin": 69, "isna": 70, "isnul": 71, "mod": 77, "mul": 79, "multipli": 80, "name": 81, "notna": 83, "notnul": 84, "pow": 88, "radd": 90, "rdiv": 91, "rdivid": 92, "renam": 93, "rfloordiv": 94, "rmod": 95, "rmul": 96, "rmultipli": 97, "rpow": 98, "rsub": 99, "rsubtract": 100, "rtruediv": 101, "sub": 106, "subtract": 107, "truediv": 113, "uniqu": 114, "value_count": 115, "csv_to_opensearch": 117, "other": 117, "dataframegroupbi": [118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "opensearch_to_panda": 133, "pandas_to_opensearch": 134, "constructor": [135, 138, 140], "reindex": [135, 140], "label": [135, 140], "manipul": [135, 140], "serial": [135, 140], "io": [135, 140], "convers": [135, 140], "gener": 136, "api": 137, "refer": 137, "input": 139, "output": 139, "flat": 139, "file": 139, "binari": 140}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Demo Notebook for Dataframe": [[0, "Demo-Notebook-for-Dataframe"]], "Step 0: Imports": [[0, "Step-0:-Imports"], [2, "Step-0:-Imports"]], "Step 1: Setup clients": [[0, "Step-1:-Setup-clients"], [2, "Step-1:-Setup-clients"]], "Comparing similarities and differences between panda dataframe vs opensearch_py_ml dataframe": [[0, "Comparing-similarities-and-differences-between-panda-dataframe-vs-opensearch_py_ml-dataframe"]], "Attributes and underlying data": [[0, "Attributes-and-underlying-data"]], "DataFrame.columns": [[0, "DataFrame.columns"], [7, "dataframe-columns"]], "DataFrame.dtypes": [[0, "DataFrame.dtypes"], [11, "dataframe-dtypes"]], "DataFrame.select_dtypes": [[0, "DataFrame.select_dtypes"], [40, "dataframe-select-dtypes"]], "DataFrame.empty": [[0, "DataFrame.empty"], [12, "dataframe-empty"]], "DataFrame.shape": [[0, "DataFrame.shape"], [41, "dataframe-shape"]], "DataFrame.index": [[0, "DataFrame.index"], [20, "dataframe-index"]], "DataFrame.values": [[0, "DataFrame.values"], [51, "dataframe-values"]], "Indexing, iteration": [[0, "Indexing,-iteration"]], "DataFrame.head": [[0, "DataFrame.head"], [16, "dataframe-head"]], "DataFrame.tail": [[0, "DataFrame.tail"], [45, "dataframe-tail"]], "DataFrame.keys": [[0, "DataFrame.keys"], [24, "dataframe-keys"]], "DataFrame.get": [[0, "DataFrame.get"], [14, "dataframe-get"]], "DataFrame.query": [[0, "DataFrame.query"], [38, "dataframe-query"]], "Boolean indexing query": [[0, "Boolean-indexing-query"]], "Function application, GroupBy & window": [[0, "Function-application,-GroupBy-&-window"]], "DataFrame.aggs": [[0, "DataFrame.aggs"]], "Computations / descriptive stats": [[0, "Computations-/-descriptive-stats"]], "DataFrame.count": [[0, "DataFrame.count"], [8, "dataframe-count"]], "DataFrame.describe": [[0, "DataFrame.describe"], [9, "dataframe-describe"]], "DataFrame.info": [[0, "DataFrame.info"], [21, "dataframe-info"]], "DataFrame.max, DataFrame.min, DataFrame.mean, DataFrame.sum": [[0, "DataFrame.max,-DataFrame.min,-DataFrame.mean,-DataFrame.sum"]], "max": [[0, "max"]], "min": [[0, "min"]], "mean": [[0, "mean"]], "sum": [[0, "sum"]], "DataFrame.nunique": [[0, "DataFrame.nunique"], [32, "dataframe-nunique"]], "DataFrame.drop": [[0, "DataFrame.drop"], [10, "dataframe-drop"]], "Plotting": [[0, "Plotting"], [135, "plotting"], [140, "plotting"]], "Opensearch utilities": [[0, "Opensearch-utilities"]], "Examples": [[1, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [40, "examples"], [41, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [48, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [60, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [85, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [110, "examples"], [113, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [133, "examples"], [134, "examples"]], "Online Retail analysis": [[2, "Online-Retail-analysis"]], "Getting Started": [[2, "Getting-Started"], [3, "getting-started"]], "Selecting and Indexing Data": [[2, "Selecting-and-Indexing-Data"]], "head and tail": [[2, "head-and-tail"]], "Selecting columns": [[2, "Selecting-columns"]], "Boolean Indexing": [[2, "Boolean-Indexing"]], "Aggregation and Descriptive Statistics": [[2, "Aggregation-and-Descriptive-Statistics"]], "Arithmetic Operations": [[2, "Arithmetic-Operations"]], "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch": [[3, "opensearch-py-ml-dataframes-and-machine-learning-backed-by-opensearch"]], "Installing Opensearch-py-ml": [[3, "installing-opensearch-py-ml"]], "DataFrame": [[4, "dataframe"], [135, "dataframe"]], "Parameters": [[4, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [18, "parameters"], [19, "parameters"], [22, "parameters"], [23, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [57, "parameters"], [58, "parameters"], [64, "parameters"], [65, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [106, "parameters"], [107, "parameters"], [113, "parameters"], [115, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [133, "parameters"], [134, "parameters"]], "See Also": [[4, "see-also"], [5, "see-also"], [6, "see-also"], [7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [18, "see-also"], [19, "see-also"], [20, "see-also"], [22, "see-also"], [23, "see-also"], [25, "see-also"], [26, "see-also"], [27, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [37, "see-also"], [38, "see-also"], [39, "see-also"], [42, "see-also"], [43, "see-also"], [44, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [50, "see-also"], [51, "see-also"], [52, "see-also"], [54, "see-also"], [56, "see-also"], [59, "see-also"], [60, "see-also"], [64, "see-also"], [68, "see-also"], [70, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [78, "see-also"], [82, "see-also"], [83, "see-also"], [84, "see-also"], [85, "see-also"], [89, "see-also"], [93, "see-also"], [104, "see-also"], [105, "see-also"], [108, "see-also"], [110, "see-also"], [112, "see-also"], [114, "see-also"], [115, "see-also"], [116, "see-also"], [117, "see-also"], [119, "see-also"], [120, "see-also"], [121, "see-also"], [122, "see-also"], [123, "see-also"], [124, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"], [131, "see-also"], [133, "see-also"], [134, "see-also"]], "DataFrame.agg": [[5, "dataframe-agg"]], "Returns": [[5, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [49, "returns"], [52, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [60, "returns"], [64, "returns"], [65, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [80, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [133, "returns"], [134, "returns"]], "DataFrame.aggregate": [[6, "dataframe-aggregate"]], "DataFrame.filter": [[13, "dataframe-filter"]], "Notes": [[13, "notes"], [17, "notes"], [21, "notes"], [41, "notes"], [54, "notes"], [64, "notes"], [67, "notes"], [103, "notes"], [117, "notes"]], "DataFrame.groupby": [[15, "dataframe-groupby"]], "DataFrame.hist": [[17, "dataframe-hist"]], "DataFrame.idxmax": [[18, "dataframe-idxmax"]], "DataFrame.idxmin": [[19, "dataframe-idxmin"]], "DataFrame.iterrows": [[22, "dataframe-iterrows"]], "Yields": [[22, "yields"]], "DataFrame.itertuples": [[23, "dataframe-itertuples"]], "DataFrame.mad": [[25, "dataframe-mad"]], "DataFrame.max": [[26, "dataframe-max"]], "DataFrame.mean": [[27, "dataframe-mean"]], "DataFrame.median": [[28, "dataframe-median"]], "DataFrame.min": [[29, "dataframe-min"]], "DataFrame.mode": [[30, "dataframe-mode"]], "DataFrame.ndim": [[31, "dataframe-ndim"]], "DataFrame.os_dtypes": [[33, "dataframe-os-dtypes"]], "DataFrame.os_info": [[34, "dataframe-os-info"]], "DataFrame.os_match": [[35, "dataframe-os-match"]], "DataFrame.os_query": [[36, "dataframe-os-query"]], "DataFrame.quantile": [[37, "dataframe-quantile"]], "DataFrame.sample": [[39, "dataframe-sample"]], "DataFrame.size": [[42, "dataframe-size"]], "DataFrame.std": [[43, "dataframe-std"]], "DataFrame.sum": [[44, "dataframe-sum"]], "DataFrame.to_csv": [[46, "dataframe-to-csv"]], "DataFrame.to_html": [[47, "dataframe-to-html"]], "DataFrame.to_numpy": [[48, "dataframe-to-numpy"]], "DataFrame.to_pandas": [[49, "dataframe-to-pandas"]], "DataFrame.to_string": [[50, "dataframe-to-string"]], "DataFrame.var": [[52, "dataframe-var"]], "opensearch_py_ml.Index": [[53, "opensearch-py-ml-index"]], "Series": [[54, "series"], [140, "series"]], "Series.add": [[55, "series-add"]], "Series.describe": [[56, "series-describe"]], "Series.div": [[57, "series-div"]], "Series.divide": [[58, "series-divide"]], "Series.dtype": [[59, "series-dtype"]], "Series.dtypes": [[60, "series-dtypes"]], "Series.empty": [[61, "series-empty"]], "Series.es_dtypes": [[62, "series-es-dtypes"]], "Series.es_match": [[63, "series-es-match"]], "Series.filter": [[64, "series-filter"]], "Series.floordiv": [[65, "series-floordiv"]], "Series.head": [[66, "series-head"]], "Series.hist": [[67, "series-hist"]], "Series.index": [[68, "series-index"]], "Series.isin": [[69, "series-isin"]], "Series.isna": [[70, "series-isna"]], "Series.isnull": [[71, "series-isnull"]], "Series.mad": [[72, "series-mad"]], "Series.max": [[73, "series-max"]], "Series.mean": [[74, "series-mean"]], "Series.median": [[75, "series-median"]], "Series.min": [[76, "series-min"]], "Series.mod": [[77, "series-mod"]], "Series.mode": [[78, "series-mode"]], "Series.mul": [[79, "series-mul"]], "Series.multiply": [[80, "series-multiply"]], "Series.name": [[81, "series-name"]], "Series.ndim": [[82, "series-ndim"]], "Series.notna": [[83, "series-notna"]], "Series.notnull": [[84, "series-notnull"]], "Series.nunique": [[85, "series-nunique"]], "Series.os_dtype": [[86, "series-os-dtype"]], "Series.os_info": [[87, "series-os-info"]], "Series.pow": [[88, "series-pow"]], "Series.quantile": [[89, "series-quantile"]], "Series.radd": [[90, "series-radd"]], "Series.rdiv": [[91, "series-rdiv"]], "Series.rdivide": [[92, "series-rdivide"]], "Series.rename": [[93, "series-rename"]], "Series.rfloordiv": [[94, "series-rfloordiv"]], "Series.rmod": [[95, "series-rmod"]], "Series.rmul": [[96, "series-rmul"]], "Series.rmultiply": [[97, "series-rmultiply"]], "Series.rpow": [[98, "series-rpow"]], "Series.rsub": [[99, "series-rsub"]], "Series.rsubtract": [[100, "series-rsubtract"]], "Series.rtruediv": [[101, "series-rtruediv"]], "Series.sample": [[102, "series-sample"]], "Series.shape": [[103, "series-shape"]], "Series.size": [[104, "series-size"]], "Series.std": [[105, "series-std"]], "Series.sub": [[106, "series-sub"]], "Series.subtract": [[107, "series-subtract"]], "Series.sum": [[108, "series-sum"]], "Series.tail": [[109, "series-tail"]], "Series.to_numpy": [[110, "series-to-numpy"]], "Series.to_pandas": [[111, "series-to-pandas"]], "Series.to_string": [[112, "series-to-string"]], "Series.truediv": [[113, "series-truediv"]], "Series.unique": [[114, "series-unique"]], "Series.value_counts": [[115, "series-value-counts"]], "Series.var": [[116, "series-var"]], "csv_to_opensearch": [[117, "csv-to-opensearch"]], "Other Parameters": [[117, "other-parameters"]], "groupby.DataFrameGroupBy": [[118, "groupby-dataframegroupby"]], "groupby.DataFrameGroupBy.agg": [[119, "groupby-dataframegroupby-agg"]], "groupby.DataFrameGroupBy.aggregate": [[120, "groupby-dataframegroupby-aggregate"]], "groupby.DataFrameGroupBy.count": [[121, "groupby-dataframegroupby-count"]], "groupby.DataFrameGroupBy.mad": [[122, "groupby-dataframegroupby-mad"]], "groupby.DataFrameGroupBy.max": [[123, "groupby-dataframegroupby-max"]], "groupby.DataFrameGroupBy.mean": [[124, "groupby-dataframegroupby-mean"]], "groupby.DataFrameGroupBy.median": [[125, "groupby-dataframegroupby-median"]], "groupby.DataFrameGroupBy.min": [[126, "groupby-dataframegroupby-min"]], "groupby.DataFrameGroupBy.nunique": [[127, "groupby-dataframegroupby-nunique"]], "groupby.DataFrameGroupBy.quantile": [[128, "groupby-dataframegroupby-quantile"]], "groupby.DataFrameGroupBy.std": [[129, "groupby-dataframegroupby-std"]], "groupby.DataFrameGroupBy.sum": [[130, "groupby-dataframegroupby-sum"]], "groupby.DataFrameGroupBy.var": [[131, "groupby-dataframegroupby-var"]], "groupby.GroupBy": [[132, "groupby-groupby"]], "opensearch_to_pandas": [[133, "opensearch-to-pandas"]], "pandas_to_opensearch": [[134, "pandas-to-opensearch"]], "Constructor": [[135, "constructor"], [138, "constructor"], [140, "constructor"]], "Attributes and Underlying Data": [[135, "attributes-and-underlying-data"], [140, "attributes-and-underlying-data"]], "Indexing, Iteration": [[135, "indexing-iteration"], [140, "indexing-iteration"]], "Function Application, GroupBy & Window": [[135, "function-application-groupby-window"]], "Computations / Descriptive Stats": [[135, "computations-descriptive-stats"], [140, "computations-descriptive-stats"]], "Reindexing / Selection / Label Manipulation": [[135, "reindexing-selection-label-manipulation"], [140, "reindexing-selection-label-manipulation"]], "Opensearch Functions": [[135, "opensearch-functions"], [140, "opensearch-functions"]], "Serialization / IO / Conversion": [[135, "serialization-io-conversion"], [140, "serialization-io-conversion"]], "General Utility Functions": [[136, "general-utility-functions"]], "Pandas and Opensearch": [[136, "pandas-and-opensearch"]], "API Reference": [[137, "api-reference"]], "Index": [[138, "index"]], "Input/Output": [[139, "input-output"]], "Flat File": [[139, "flat-file"]], "Binary Operator Functions": [[140, "binary-operator-functions"]]}, "indexentries": {"module": [[3, "module-opensearch_py_ml"]], "opensearch_py_ml": [[3, "module-opensearch_py_ml"]], "dataframe (class in opensearch_py_ml)": [[4, "opensearch_py_ml.DataFrame"]], "agg() (opensearch_py_ml.dataframe method)": [[5, "opensearch_py_ml.DataFrame.agg"]], "aggregate() (opensearch_py_ml.dataframe method)": [[6, "opensearch_py_ml.DataFrame.aggregate"]], "columns (opensearch_py_ml.dataframe attribute)": [[7, "opensearch_py_ml.DataFrame.columns"]], "count() (opensearch_py_ml.dataframe method)": [[8, "opensearch_py_ml.DataFrame.count"]], "describe() (opensearch_py_ml.dataframe method)": [[9, "opensearch_py_ml.DataFrame.describe"]], "drop() (opensearch_py_ml.dataframe method)": [[10, "opensearch_py_ml.DataFrame.drop"]], "dtypes (opensearch_py_ml.dataframe attribute)": [[11, "opensearch_py_ml.DataFrame.dtypes"]], "empty (opensearch_py_ml.dataframe attribute)": [[12, "opensearch_py_ml.DataFrame.empty"]], "filter() (opensearch_py_ml.dataframe method)": [[13, "opensearch_py_ml.DataFrame.filter"]], "get() (opensearch_py_ml.dataframe method)": [[14, "opensearch_py_ml.DataFrame.get"]], "groupby() (opensearch_py_ml.dataframe method)": [[15, "opensearch_py_ml.DataFrame.groupby"]], "head() (opensearch_py_ml.dataframe method)": [[16, "opensearch_py_ml.DataFrame.head"]], "hist() (opensearch_py_ml.dataframe method)": [[17, "opensearch_py_ml.DataFrame.hist"]], "idxmax() (opensearch_py_ml.dataframe method)": [[18, "opensearch_py_ml.DataFrame.idxmax"]], "idxmin() (opensearch_py_ml.dataframe method)": [[19, "opensearch_py_ml.DataFrame.idxmin"]], "index (opensearch_py_ml.dataframe attribute)": [[20, "opensearch_py_ml.DataFrame.index"]], "info() (opensearch_py_ml.dataframe method)": [[21, "opensearch_py_ml.DataFrame.info"]], "iterrows() (opensearch_py_ml.dataframe method)": [[22, "opensearch_py_ml.DataFrame.iterrows"]], "itertuples() (opensearch_py_ml.dataframe method)": [[23, "opensearch_py_ml.DataFrame.itertuples"]], "keys() (opensearch_py_ml.dataframe method)": [[24, "opensearch_py_ml.DataFrame.keys"]], "mad() (opensearch_py_ml.dataframe method)": [[25, "opensearch_py_ml.DataFrame.mad"]], "max() (opensearch_py_ml.dataframe method)": [[26, "opensearch_py_ml.DataFrame.max"]], "mean() (opensearch_py_ml.dataframe method)": [[27, "opensearch_py_ml.DataFrame.mean"]], "median() (opensearch_py_ml.dataframe method)": [[28, "opensearch_py_ml.DataFrame.median"]], "min() (opensearch_py_ml.dataframe method)": [[29, "opensearch_py_ml.DataFrame.min"]], "mode() (opensearch_py_ml.dataframe method)": [[30, "opensearch_py_ml.DataFrame.mode"]], "ndim (opensearch_py_ml.dataframe attribute)": [[31, "opensearch_py_ml.DataFrame.ndim"]], "nunique() (opensearch_py_ml.dataframe method)": [[32, "opensearch_py_ml.DataFrame.nunique"]], "os_dtypes (opensearch_py_ml.dataframe attribute)": [[33, "opensearch_py_ml.DataFrame.os_dtypes"]], "os_info() (opensearch_py_ml.dataframe method)": [[34, "opensearch_py_ml.DataFrame.os_info"]], "os_match() (opensearch_py_ml.dataframe method)": [[35, "opensearch_py_ml.DataFrame.os_match"]], "os_query() (opensearch_py_ml.dataframe method)": [[36, "opensearch_py_ml.DataFrame.os_query"]], "quantile() (opensearch_py_ml.dataframe method)": [[37, "opensearch_py_ml.DataFrame.quantile"]], "query() (opensearch_py_ml.dataframe method)": [[38, "opensearch_py_ml.DataFrame.query"]], "sample() (opensearch_py_ml.dataframe method)": [[39, "opensearch_py_ml.DataFrame.sample"]], "select_dtypes() (opensearch_py_ml.dataframe method)": [[40, "opensearch_py_ml.DataFrame.select_dtypes"]], "shape (opensearch_py_ml.dataframe attribute)": [[41, "opensearch_py_ml.DataFrame.shape"]], "size (opensearch_py_ml.dataframe attribute)": [[42, "opensearch_py_ml.DataFrame.size"]], "std() (opensearch_py_ml.dataframe method)": [[43, "opensearch_py_ml.DataFrame.std"]], "sum() (opensearch_py_ml.dataframe method)": [[44, "opensearch_py_ml.DataFrame.sum"]], "tail() (opensearch_py_ml.dataframe method)": [[45, "opensearch_py_ml.DataFrame.tail"]], "to_csv() (opensearch_py_ml.dataframe method)": [[46, "opensearch_py_ml.DataFrame.to_csv"]], "to_html() (opensearch_py_ml.dataframe method)": [[47, "opensearch_py_ml.DataFrame.to_html"]], "to_numpy() (opensearch_py_ml.dataframe method)": [[48, "opensearch_py_ml.DataFrame.to_numpy"]], "to_pandas() (opensearch_py_ml.dataframe method)": [[49, "opensearch_py_ml.DataFrame.to_pandas"]], "to_string() (opensearch_py_ml.dataframe method)": [[50, "opensearch_py_ml.DataFrame.to_string"]], "values (opensearch_py_ml.dataframe attribute)": [[51, "opensearch_py_ml.DataFrame.values"]], "var() (opensearch_py_ml.dataframe method)": [[52, "opensearch_py_ml.DataFrame.var"]], "index (class in opensearch_py_ml)": [[53, "opensearch_py_ml.Index"]], "series (class in opensearch_py_ml)": [[54, "opensearch_py_ml.Series"]], "add() (opensearch_py_ml.series method)": [[55, "opensearch_py_ml.Series.add"]], "describe() (opensearch_py_ml.series method)": [[56, "opensearch_py_ml.Series.describe"]], "div() (opensearch_py_ml.series method)": [[57, "opensearch_py_ml.Series.div"]], "divide() (opensearch_py_ml.series method)": [[58, "opensearch_py_ml.Series.divide"]], "dtype (opensearch_py_ml.series attribute)": [[59, "opensearch_py_ml.Series.dtype"]], "dtypes (opensearch_py_ml.series attribute)": [[60, "opensearch_py_ml.Series.dtypes"]], "empty (opensearch_py_ml.series attribute)": [[61, "opensearch_py_ml.Series.empty"]], "filter() (opensearch_py_ml.series method)": [[64, "opensearch_py_ml.Series.filter"]], "floordiv() (opensearch_py_ml.series method)": [[65, "opensearch_py_ml.Series.floordiv"]], "head() (opensearch_py_ml.series method)": [[66, "opensearch_py_ml.Series.head"]], "hist() (opensearch_py_ml.series method)": [[67, "opensearch_py_ml.Series.hist"]], "index (opensearch_py_ml.series attribute)": [[68, "opensearch_py_ml.Series.index"]], "isin() (opensearch_py_ml.series method)": [[69, "opensearch_py_ml.Series.isin"]], "isna() (opensearch_py_ml.series method)": [[70, "opensearch_py_ml.Series.isna"]], "isnull() (opensearch_py_ml.series method)": [[71, "opensearch_py_ml.Series.isnull"]], "mad() (opensearch_py_ml.series method)": [[72, "opensearch_py_ml.Series.mad"]], "max() (opensearch_py_ml.series method)": [[73, "opensearch_py_ml.Series.max"]], "mean() (opensearch_py_ml.series method)": [[74, "opensearch_py_ml.Series.mean"]], "median() (opensearch_py_ml.series method)": [[75, "opensearch_py_ml.Series.median"]], "min() (opensearch_py_ml.series method)": [[76, "opensearch_py_ml.Series.min"]], "mod() (opensearch_py_ml.series method)": [[77, "opensearch_py_ml.Series.mod"]], "mode() (opensearch_py_ml.series method)": [[78, "opensearch_py_ml.Series.mode"]], "mul() (opensearch_py_ml.series method)": [[79, "opensearch_py_ml.Series.mul"]], "multiply() (opensearch_py_ml.series method)": [[80, "opensearch_py_ml.Series.multiply"]], "name (opensearch_py_ml.series attribute)": [[81, "opensearch_py_ml.Series.name"]], "ndim (opensearch_py_ml.series attribute)": [[82, "opensearch_py_ml.Series.ndim"]], "notna() (opensearch_py_ml.series method)": [[83, "opensearch_py_ml.Series.notna"]], "notnull() (opensearch_py_ml.series method)": [[84, "opensearch_py_ml.Series.notnull"]], "nunique() (opensearch_py_ml.series method)": [[85, "opensearch_py_ml.Series.nunique"]], "os_dtype (opensearch_py_ml.series attribute)": [[86, "opensearch_py_ml.Series.os_dtype"]], "os_info() (opensearch_py_ml.series method)": [[87, "opensearch_py_ml.Series.os_info"]], "pow() (opensearch_py_ml.series method)": [[88, "opensearch_py_ml.Series.pow"]], "quantile() (opensearch_py_ml.series method)": [[89, "opensearch_py_ml.Series.quantile"]], "radd() (opensearch_py_ml.series method)": [[90, "opensearch_py_ml.Series.radd"]], "rdiv() (opensearch_py_ml.series method)": [[91, "opensearch_py_ml.Series.rdiv"]], "rdivide() (opensearch_py_ml.series method)": [[92, "opensearch_py_ml.Series.rdivide"]], "rename() (opensearch_py_ml.series method)": [[93, "opensearch_py_ml.Series.rename"]], "rfloordiv() (opensearch_py_ml.series method)": [[94, "opensearch_py_ml.Series.rfloordiv"]], "rmod() (opensearch_py_ml.series method)": [[95, "opensearch_py_ml.Series.rmod"]], "rmul() (opensearch_py_ml.series method)": [[96, "opensearch_py_ml.Series.rmul"]], "rmultiply() (opensearch_py_ml.series method)": [[97, "opensearch_py_ml.Series.rmultiply"]], "rpow() (opensearch_py_ml.series method)": [[98, "opensearch_py_ml.Series.rpow"]], "rsub() (opensearch_py_ml.series method)": [[99, "opensearch_py_ml.Series.rsub"]], "rsubtract() (opensearch_py_ml.series method)": [[100, "opensearch_py_ml.Series.rsubtract"]], "rtruediv() (opensearch_py_ml.series method)": [[101, "opensearch_py_ml.Series.rtruediv"]], "sample() (opensearch_py_ml.series method)": [[102, "opensearch_py_ml.Series.sample"]], "shape (opensearch_py_ml.series attribute)": [[103, "opensearch_py_ml.Series.shape"]], "size (opensearch_py_ml.series attribute)": [[104, "opensearch_py_ml.Series.size"]], "std() (opensearch_py_ml.series method)": [[105, "opensearch_py_ml.Series.std"]], "sub() (opensearch_py_ml.series method)": [[106, "opensearch_py_ml.Series.sub"]], "subtract() (opensearch_py_ml.series method)": [[107, "opensearch_py_ml.Series.subtract"]], "sum() (opensearch_py_ml.series method)": [[108, "opensearch_py_ml.Series.sum"]], "tail() (opensearch_py_ml.series method)": [[109, "opensearch_py_ml.Series.tail"]], "to_numpy() (opensearch_py_ml.series method)": [[110, "opensearch_py_ml.Series.to_numpy"]], "to_pandas() (opensearch_py_ml.series method)": [[111, "opensearch_py_ml.Series.to_pandas"]], "to_string() (opensearch_py_ml.series method)": [[112, "opensearch_py_ml.Series.to_string"]], "truediv() (opensearch_py_ml.series method)": [[113, "opensearch_py_ml.Series.truediv"]], "unique() (opensearch_py_ml.series method)": [[114, "opensearch_py_ml.Series.unique"]], "value_counts() (opensearch_py_ml.series method)": [[115, "opensearch_py_ml.Series.value_counts"]], "var() (opensearch_py_ml.series method)": [[116, "opensearch_py_ml.Series.var"]], "csv_to_opensearch() (in module opensearch_py_ml.etl)": [[117, "opensearch_py_ml.etl.csv_to_opensearch"]], "dataframegroupby (class in opensearch_py_ml.groupby)": [[118, "opensearch_py_ml.groupby.DataFrameGroupBy"]], "agg() (opensearch_py_ml.groupby.dataframegroupby method)": [[119, "opensearch_py_ml.groupby.DataFrameGroupBy.agg"]], "aggregate() (opensearch_py_ml.groupby.dataframegroupby method)": [[120, "opensearch_py_ml.groupby.DataFrameGroupBy.aggregate"]], "count() (opensearch_py_ml.groupby.dataframegroupby method)": [[121, "opensearch_py_ml.groupby.DataFrameGroupBy.count"]], "mad() (opensearch_py_ml.groupby.dataframegroupby method)": [[122, "opensearch_py_ml.groupby.DataFrameGroupBy.mad"]], "max() (opensearch_py_ml.groupby.dataframegroupby method)": [[123, "opensearch_py_ml.groupby.DataFrameGroupBy.max"]], "mean() (opensearch_py_ml.groupby.dataframegroupby method)": [[124, "opensearch_py_ml.groupby.DataFrameGroupBy.mean"]], "median() (opensearch_py_ml.groupby.dataframegroupby method)": [[125, "opensearch_py_ml.groupby.DataFrameGroupBy.median"]], "min() (opensearch_py_ml.groupby.dataframegroupby method)": [[126, "opensearch_py_ml.groupby.DataFrameGroupBy.min"]], "nunique() (opensearch_py_ml.groupby.dataframegroupby method)": [[127, "opensearch_py_ml.groupby.DataFrameGroupBy.nunique"]], "quantile() (opensearch_py_ml.groupby.dataframegroupby method)": [[128, "opensearch_py_ml.groupby.DataFrameGroupBy.quantile"]], "std() (opensearch_py_ml.groupby.dataframegroupby method)": [[129, "opensearch_py_ml.groupby.DataFrameGroupBy.std"]], "sum() (opensearch_py_ml.groupby.dataframegroupby method)": [[130, "opensearch_py_ml.groupby.DataFrameGroupBy.sum"]], "var() (opensearch_py_ml.groupby.dataframegroupby method)": [[131, "opensearch_py_ml.groupby.DataFrameGroupBy.var"]], "opensearch_to_pandas() (opensearch_py_ml.etl method)": [[133, "opensearch_py_ml.etl.opensearch_to_pandas"]], "pandas_to_opensearch() (opensearch_py_ml.etl method)": [[134, "opensearch_py_ml.etl.pandas_to_opensearch"]]}})