Search.setIndex({"docnames": ["examples/demo_ml_commons_integration", "examples/demo_notebook", "examples/demo_transformer_model_train_save_upload_to_openSearch", "examples/index", "examples/online_retail_analysis", "index", "reference/api/DataFrame", "reference/api/DataFrame.agg", "reference/api/DataFrame.aggregate", "reference/api/DataFrame.columns", "reference/api/DataFrame.count", "reference/api/DataFrame.describe", "reference/api/DataFrame.drop", "reference/api/DataFrame.dtypes", "reference/api/DataFrame.empty", "reference/api/DataFrame.filter", "reference/api/DataFrame.get", "reference/api/DataFrame.groupby", "reference/api/DataFrame.head", "reference/api/DataFrame.hist", "reference/api/DataFrame.idxmax", "reference/api/DataFrame.idxmin", "reference/api/DataFrame.index", "reference/api/DataFrame.info", "reference/api/DataFrame.iterrows", "reference/api/DataFrame.itertuples", "reference/api/DataFrame.keys", "reference/api/DataFrame.mad", "reference/api/DataFrame.max", "reference/api/DataFrame.mean", "reference/api/DataFrame.median", "reference/api/DataFrame.min", "reference/api/DataFrame.mode", "reference/api/DataFrame.ndim", "reference/api/DataFrame.nunique", "reference/api/DataFrame.os_dtypes", "reference/api/DataFrame.os_info", "reference/api/DataFrame.os_match", "reference/api/DataFrame.os_query", "reference/api/DataFrame.quantile", "reference/api/DataFrame.query", "reference/api/DataFrame.sample", "reference/api/DataFrame.select_dtypes", "reference/api/DataFrame.shape", "reference/api/DataFrame.size", "reference/api/DataFrame.std", "reference/api/DataFrame.sum", "reference/api/DataFrame.tail", "reference/api/DataFrame.to_csv", "reference/api/DataFrame.to_html", "reference/api/DataFrame.to_numpy", "reference/api/DataFrame.to_pandas", "reference/api/DataFrame.to_string", "reference/api/DataFrame.values", "reference/api/DataFrame.var", "reference/api/Index", "reference/api/Series", "reference/api/Series.add", "reference/api/Series.describe", "reference/api/Series.div", "reference/api/Series.divide", "reference/api/Series.dtype", "reference/api/Series.dtypes", "reference/api/Series.empty", "reference/api/Series.filter", "reference/api/Series.floordiv", "reference/api/Series.head", "reference/api/Series.hist", "reference/api/Series.index", "reference/api/Series.isin", "reference/api/Series.isna", "reference/api/Series.isnull", "reference/api/Series.mad", "reference/api/Series.max", "reference/api/Series.mean", "reference/api/Series.median", "reference/api/Series.min", "reference/api/Series.mod", "reference/api/Series.mode", "reference/api/Series.mul", "reference/api/Series.multiply", "reference/api/Series.name", "reference/api/Series.ndim", "reference/api/Series.notna", "reference/api/Series.notnull", "reference/api/Series.nunique", "reference/api/Series.os_dtype", "reference/api/Series.os_dtypes", "reference/api/Series.os_info", "reference/api/Series.os_match", "reference/api/Series.pow", "reference/api/Series.quantile", "reference/api/Series.radd", "reference/api/Series.rdiv", "reference/api/Series.rdivide", "reference/api/Series.rename", "reference/api/Series.rfloordiv", "reference/api/Series.rmod", "reference/api/Series.rmul", "reference/api/Series.rmultiply", "reference/api/Series.rpow", "reference/api/Series.rsub", "reference/api/Series.rsubtract", "reference/api/Series.rtruediv", "reference/api/Series.sample", "reference/api/Series.shape", "reference/api/Series.size", "reference/api/Series.std", "reference/api/Series.sub", "reference/api/Series.subtract", "reference/api/Series.sum", "reference/api/Series.tail", "reference/api/Series.to_numpy", "reference/api/Series.to_pandas", "reference/api/Series.to_string", "reference/api/Series.truediv", "reference/api/Series.unique", "reference/api/Series.value_counts", "reference/api/Series.var", "reference/api/csv_to_opensearch", "reference/api/groupby.DataFrameGroupBy", "reference/api/groupby.DataFrameGroupBy.agg", "reference/api/groupby.DataFrameGroupBy.aggregate", "reference/api/groupby.DataFrameGroupBy.count", "reference/api/groupby.DataFrameGroupBy.mad", "reference/api/groupby.DataFrameGroupBy.max", "reference/api/groupby.DataFrameGroupBy.mean", "reference/api/groupby.DataFrameGroupBy.median", "reference/api/groupby.DataFrameGroupBy.min", "reference/api/groupby.DataFrameGroupBy.nunique", "reference/api/groupby.DataFrameGroupBy.quantile", "reference/api/groupby.DataFrameGroupBy.std", "reference/api/groupby.DataFrameGroupBy.sum", "reference/api/groupby.DataFrameGroupBy.var", "reference/api/groupby.GroupBy", "reference/api/ml_commons_delete_model_api", "reference/api/ml_commons_generate_embedding_api", "reference/api/ml_commons_get_model_info_api", "reference/api/ml_commons_get_task_info_api", "reference/api/ml_commons_load_api", "reference/api/ml_commons_unload_model_api", "reference/api/ml_commons_upload_api", "reference/api/opensearch_to_pandas", "reference/api/pandas_to_opensearch", "reference/api/sentence_transformer", "reference/api/sentence_transformer.load_sentence_transformer_example", "reference/api/sentence_transformer.make_model_config_json", "reference/api/sentence_transformer.read_queries", "reference/api/sentence_transformer.save_as_pt", "reference/api/sentence_transformer.set_up_accelerate_config", "reference/api/sentence_transformer.train", "reference/api/sentence_transformer.train_model", "reference/api/sentence_transformer.zip_model", "reference/dataframe", "reference/general_utility_functions", "reference/index", "reference/io", "reference/mlcommons", "reference/sentencetransformer", "reference/series"], "filenames": ["examples/demo_ml_commons_integration.ipynb", "examples/demo_notebook.ipynb", "examples/demo_transformer_model_train_save_upload_to_openSearch.ipynb", "examples/index.rst", "examples/online_retail_analysis.ipynb", "index.rst", "reference/api/DataFrame.rst", "reference/api/DataFrame.agg.rst", "reference/api/DataFrame.aggregate.rst", "reference/api/DataFrame.columns.rst", "reference/api/DataFrame.count.rst", "reference/api/DataFrame.describe.rst", "reference/api/DataFrame.drop.rst", "reference/api/DataFrame.dtypes.rst", "reference/api/DataFrame.empty.rst", "reference/api/DataFrame.filter.rst", "reference/api/DataFrame.get.rst", "reference/api/DataFrame.groupby.rst", "reference/api/DataFrame.head.rst", "reference/api/DataFrame.hist.rst", "reference/api/DataFrame.idxmax.rst", "reference/api/DataFrame.idxmin.rst", "reference/api/DataFrame.index.rst", "reference/api/DataFrame.info.rst", "reference/api/DataFrame.iterrows.rst", "reference/api/DataFrame.itertuples.rst", "reference/api/DataFrame.keys.rst", "reference/api/DataFrame.mad.rst", "reference/api/DataFrame.max.rst", "reference/api/DataFrame.mean.rst", "reference/api/DataFrame.median.rst", "reference/api/DataFrame.min.rst", "reference/api/DataFrame.mode.rst", "reference/api/DataFrame.ndim.rst", "reference/api/DataFrame.nunique.rst", "reference/api/DataFrame.os_dtypes.rst", "reference/api/DataFrame.os_info.rst", "reference/api/DataFrame.os_match.rst", "reference/api/DataFrame.os_query.rst", "reference/api/DataFrame.quantile.rst", "reference/api/DataFrame.query.rst", "reference/api/DataFrame.sample.rst", "reference/api/DataFrame.select_dtypes.rst", "reference/api/DataFrame.shape.rst", "reference/api/DataFrame.size.rst", "reference/api/DataFrame.std.rst", "reference/api/DataFrame.sum.rst", "reference/api/DataFrame.tail.rst", "reference/api/DataFrame.to_csv.rst", "reference/api/DataFrame.to_html.rst", "reference/api/DataFrame.to_numpy.rst", "reference/api/DataFrame.to_pandas.rst", "reference/api/DataFrame.to_string.rst", "reference/api/DataFrame.values.rst", "reference/api/DataFrame.var.rst", "reference/api/Index.rst", "reference/api/Series.rst", "reference/api/Series.add.rst", "reference/api/Series.describe.rst", "reference/api/Series.div.rst", "reference/api/Series.divide.rst", "reference/api/Series.dtype.rst", "reference/api/Series.dtypes.rst", "reference/api/Series.empty.rst", "reference/api/Series.filter.rst", "reference/api/Series.floordiv.rst", "reference/api/Series.head.rst", "reference/api/Series.hist.rst", "reference/api/Series.index.rst", "reference/api/Series.isin.rst", "reference/api/Series.isna.rst", "reference/api/Series.isnull.rst", "reference/api/Series.mad.rst", "reference/api/Series.max.rst", "reference/api/Series.mean.rst", "reference/api/Series.median.rst", "reference/api/Series.min.rst", "reference/api/Series.mod.rst", "reference/api/Series.mode.rst", "reference/api/Series.mul.rst", "reference/api/Series.multiply.rst", "reference/api/Series.name.rst", "reference/api/Series.ndim.rst", "reference/api/Series.notna.rst", "reference/api/Series.notnull.rst", "reference/api/Series.nunique.rst", "reference/api/Series.os_dtype.rst", "reference/api/Series.os_dtypes.rst", "reference/api/Series.os_info.rst", "reference/api/Series.os_match.rst", "reference/api/Series.pow.rst", "reference/api/Series.quantile.rst", "reference/api/Series.radd.rst", "reference/api/Series.rdiv.rst", "reference/api/Series.rdivide.rst", "reference/api/Series.rename.rst", "reference/api/Series.rfloordiv.rst", "reference/api/Series.rmod.rst", "reference/api/Series.rmul.rst", "reference/api/Series.rmultiply.rst", "reference/api/Series.rpow.rst", "reference/api/Series.rsub.rst", "reference/api/Series.rsubtract.rst", "reference/api/Series.rtruediv.rst", "reference/api/Series.sample.rst", "reference/api/Series.shape.rst", "reference/api/Series.size.rst", "reference/api/Series.std.rst", "reference/api/Series.sub.rst", "reference/api/Series.subtract.rst", "reference/api/Series.sum.rst", "reference/api/Series.tail.rst", "reference/api/Series.to_numpy.rst", "reference/api/Series.to_pandas.rst", "reference/api/Series.to_string.rst", "reference/api/Series.truediv.rst", "reference/api/Series.unique.rst", "reference/api/Series.value_counts.rst", "reference/api/Series.var.rst", "reference/api/csv_to_opensearch.rst", "reference/api/groupby.DataFrameGroupBy.rst", "reference/api/groupby.DataFrameGroupBy.agg.rst", "reference/api/groupby.DataFrameGroupBy.aggregate.rst", "reference/api/groupby.DataFrameGroupBy.count.rst", "reference/api/groupby.DataFrameGroupBy.mad.rst", "reference/api/groupby.DataFrameGroupBy.max.rst", "reference/api/groupby.DataFrameGroupBy.mean.rst", "reference/api/groupby.DataFrameGroupBy.median.rst", "reference/api/groupby.DataFrameGroupBy.min.rst", "reference/api/groupby.DataFrameGroupBy.nunique.rst", "reference/api/groupby.DataFrameGroupBy.quantile.rst", "reference/api/groupby.DataFrameGroupBy.std.rst", "reference/api/groupby.DataFrameGroupBy.sum.rst", "reference/api/groupby.DataFrameGroupBy.var.rst", "reference/api/groupby.GroupBy.rst", "reference/api/ml_commons_delete_model_api.rst", "reference/api/ml_commons_generate_embedding_api.rst", "reference/api/ml_commons_get_model_info_api.rst", "reference/api/ml_commons_get_task_info_api.rst", "reference/api/ml_commons_load_api.rst", "reference/api/ml_commons_unload_model_api.rst", "reference/api/ml_commons_upload_api.rst", "reference/api/opensearch_to_pandas.rst", "reference/api/pandas_to_opensearch.rst", "reference/api/sentence_transformer.rst", "reference/api/sentence_transformer.load_sentence_transformer_example.rst", "reference/api/sentence_transformer.make_model_config_json.rst", "reference/api/sentence_transformer.read_queries.rst", "reference/api/sentence_transformer.save_as_pt.rst", "reference/api/sentence_transformer.set_up_accelerate_config.rst", "reference/api/sentence_transformer.train.rst", "reference/api/sentence_transformer.train_model.rst", "reference/api/sentence_transformer.zip_model.rst", "reference/dataframe.rst", "reference/general_utility_functions.rst", "reference/index.rst", "reference/io.rst", "reference/mlcommons.rst", "reference/sentencetransformer.rst", "reference/series.rst"], "titles": ["Demo Notebook for MLCommons Integration", "Demo Notebook for Dataframe", "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch", "Examples", "Online Retail analysis", "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch", "DataFrame", "DataFrame.agg", "DataFrame.aggregate", "DataFrame.columns", "DataFrame.count", "DataFrame.describe", "DataFrame.drop", "DataFrame.dtypes", "DataFrame.empty", "DataFrame.filter", "DataFrame.get", "DataFrame.groupby", "DataFrame.head", "DataFrame.hist", "DataFrame.idxmax", "DataFrame.idxmin", "DataFrame.index", "DataFrame.info", "DataFrame.iterrows", "DataFrame.itertuples", "DataFrame.keys", "DataFrame.mad", "DataFrame.max", "DataFrame.mean", "DataFrame.median", "DataFrame.min", "DataFrame.mode", "DataFrame.ndim", "DataFrame.nunique", "DataFrame.os_dtypes", "DataFrame.os_info", "DataFrame.os_match", "DataFrame.os_query", "DataFrame.quantile", "DataFrame.query", "DataFrame.sample", "DataFrame.select_dtypes", "DataFrame.shape", "DataFrame.size", "DataFrame.std", "DataFrame.sum", "DataFrame.tail", "DataFrame.to_csv", "DataFrame.to_html", "DataFrame.to_numpy", "DataFrame.to_pandas", "DataFrame.to_string", "DataFrame.values", "DataFrame.var", "opensearch_py_ml.Index", "Series", "Series.add", "Series.describe", "Series.div", "Series.divide", "Series.dtype", "Series.dtypes", "Series.empty", "Series.filter", "Series.floordiv", "Series.head", "Series.hist", "Series.index", "Series.isin", "Series.isna", "Series.isnull", "Series.mad", "Series.max", "Series.mean", "Series.median", "Series.min", "Series.mod", "Series.mode", "Series.mul", "Series.multiply", "Series.name", "Series.ndim", "Series.notna", "Series.notnull", "Series.nunique", "Series.os_dtype", "Series.os_dtypes", "Series.os_info", "Series.os_match", "Series.pow", "Series.quantile", "Series.radd", "Series.rdiv", "Series.rdivide", "Series.rename", "Series.rfloordiv", "Series.rmod", "Series.rmul", "Series.rmultiply", "Series.rpow", "Series.rsub", "Series.rsubtract", "Series.rtruediv", "Series.sample", "Series.shape", "Series.size", "Series.std", "Series.sub", "Series.subtract", "Series.sum", "Series.tail", "Series.to_numpy", "Series.to_pandas", "Series.to_string", "Series.truediv", "Series.unique", "Series.value_counts", "Series.var", "csv_to_opensearch", "groupby.DataFrameGroupBy", "groupby.DataFrameGroupBy.agg", "groupby.DataFrameGroupBy.aggregate", "groupby.DataFrameGroupBy.count", "groupby.DataFrameGroupBy.mad", "groupby.DataFrameGroupBy.max", "groupby.DataFrameGroupBy.mean", "groupby.DataFrameGroupBy.median", "groupby.DataFrameGroupBy.min", "groupby.DataFrameGroupBy.nunique", "groupby.DataFrameGroupBy.quantile", "groupby.DataFrameGroupBy.std", "groupby.DataFrameGroupBy.sum", "groupby.DataFrameGroupBy.var", "groupby.GroupBy", "Delete Model", "Generate Embedding", "Get Model Info", "Get Task Info", "Load Model", "Unload Model", "Upload Model", "opensearch_to_pandas", "pandas_to_opensearch", "Sentence Transformer", "SentenceTransformerModel.load_sentence_transformer_example", "SentenceTransformerModel.make_model_config_json", "SentenceTransformerModel.read_queries", "SentenceTransformerModel.save_as_pt", "SentenceTransformerModel.set_up_accelerate_config", "SentenceTransformerModel.train", "SentenceTransformerModel.train_model", "SentenceTransformerModel.zip_model", "DataFrame", "General Utility Functions", "API Reference", "Input/Output", "MLCommons Support", "Sentence Transformer", "Series"], "terms": {"thi": [0, 1, 4, 6, 10, 15, 18, 23, 34, 36, 37, 44, 47, 49, 50, 52, 53, 55, 56, 64, 89, 95, 106, 112, 114, 117, 120, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150, 155], "provid": [0, 2, 11, 58, 148], "walkthrough": [0, 2], "guidanc": [0, 2], "user": [0, 2, 12, 34, 37, 40, 144, 146, 147, 149, 150], "invok": 0, "api": [0, 2, 5, 6, 22, 56, 68, 135, 136, 137, 138, 139, 140, 141], "ml": [0, 1, 2, 4, 10, 25, 116, 135, 136, 137, 138, 139, 140, 141, 146, 155], "instal": [0, 2], "requir": [0, 1, 2, 37, 50, 53, 55, 112, 142, 145, 146, 147, 148, 149, 150, 151], "opensearch_py_ml": [0, 2, 4, 6, 15, 17, 18, 22, 23, 24, 25, 36, 37, 38, 40, 41, 42, 47, 50, 51, 56, 57, 59, 60, 64, 65, 68, 70, 71, 77, 79, 80, 83, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 115, 116, 117, 119, 120, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "sentence_transformer_model": [0, 2], "opensearchpi": [0, 1, 2, 4, 56, 119], "py": [0, 1, 2, 4, 25, 116, 155], "through": [0, 2, 5], "pypi": [0, 2, 5], "pip": [0, 2, 5], "warn": [0, 1, 2, 4], "filterwarn": [0, 1, 2, 4], "ignor": [0, 1, 2, 4, 7, 8, 11, 12, 37, 58, 89, 121, 122, 143], "10": [0, 1, 2, 4, 6, 17, 19, 32, 36, 38, 67, 78, 98, 99, 117, 119, 123, 127, 129, 142, 150, 151], "cluster_url": [0, 1, 2, 4], "http": [0, 1, 2, 4, 141], "localhost": [0, 1, 2, 4], "9200": [0, 1, 2, 4], "11": [0, 1, 2, 4, 6, 28, 32, 36, 37, 78, 119, 125, 126, 127, 142], "def": [0, 1, 2, 4], "get_os_cli": [0, 1, 2, 4], "usernam": [0, 1, 2, 4], "admin": [0, 1, 2, 4], "password": [0, 1, 2, 4], "param": [0, 1, 2, 4, 150], "url": [0, 1, 2, 4, 151], "like": [0, 1, 4, 15, 38, 39, 56, 64, 91, 130], "te": [0, 1, 2, 4], "netwo": [0, 1, 2, 4], "1s12ba42br23v": [0, 1, 2, 4], "ff1736fa7db98ff2": [0, 1, 2, 4], "elb": [0, 1, 2, 4], "u": [0, 1, 2, 4, 17, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "west": [0, 1, 2, 4], "amazonaw": [0, 1, 2, 4], "com": [0, 1, 2, 4], "443": [0, 1, 2, 4], "return": [0, 1, 2, 4, 32, 50, 53, 61, 63, 78, 86, 112, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152], "host": [0, 1, 2, 4], "http_auth": [0, 1, 2, 4], "verify_cert": [0, 1, 2, 4], "fals": [0, 1, 2, 4, 6, 7, 8, 12, 14, 17, 19, 24, 25, 27, 28, 29, 30, 31, 32, 36, 37, 39, 45, 46, 49, 51, 52, 54, 63, 89, 113, 114, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152], "12": [0, 1, 2, 4, 28, 32, 78, 91, 119, 125, 142], "we": [0, 2, 4, 5, 7, 8, 19, 25, 34, 49, 52, 114, 117, 138, 141, 150, 151], "can": [0, 2, 4, 5, 6, 10, 19, 25, 34, 37, 49, 52, 55, 56, 114, 117, 141, 142, 144, 149, 151], "machin": [0, 2, 149, 150], "learn": [0, 2, 150, 151], "us": [0, 2, 4, 5, 6, 7, 8, 10, 17, 18, 34, 37, 38, 39, 41, 47, 55, 67, 89, 91, 119, 121, 122, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 149, 150, 151, 152, 153], "upload_model": [0, 2, 141, 157], "In": [0, 2, 5, 49, 50, 52, 53, 55, 112, 114], "show": [0, 1, 2, 4, 67, 142], "how": [0, 4, 117, 119, 143, 149], "which": [0, 2, 4, 5, 7, 8, 15, 28, 29, 30, 31, 32, 37, 39, 45, 46, 54, 55, 64, 89, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 140], "i": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 39, 43, 45, 46, 47, 50, 53, 54, 55, 56, 58, 63, 64, 70, 71, 83, 84, 95, 112, 116, 117, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 141, 143, 146, 147, 148, 149, 150, 151], "store": [0, 2, 5, 6, 141, 144, 147, 150], "our": [0, 2, 4], "To": [0, 2, 4, 151], "demonstr": [0, 1, 2, 4], "download": [0, 2, 144, 148, 151], "zip": [0, 2, 141, 147, 148, 150, 152], "github": 0, "project": [0, 2, 5, 10], "common": [0, 2, 135, 136, 137, 138, 139, 140, 141], "raw": 0, "x": [0, 2, 6, 12, 17, 18, 24, 25, 36, 37, 38, 47, 50, 89, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 142, 143], "algorithm": [0, 153], "src": [0, 2], "test": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 50, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "resourc": 0, "org": [0, 2, 141], "engin": [0, 119], "text_embed": 0, "all": [0, 2, 4, 7, 8, 19, 28, 29, 30, 31, 32, 37, 39, 45, 46, 54, 89, 110, 116, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 140, 141, 142, 146, 149, 151, 155], "minilm": [0, 141], "l6": [0, 141], "v2_torchscript_sent": 0, "transform": [0, 3, 5, 145, 148, 150, 151, 155], "true": [0, 1, 2, 4, 6, 7, 8, 12, 14, 15, 17, 19, 24, 25, 27, 28, 29, 30, 31, 32, 36, 37, 39, 45, 46, 48, 49, 52, 54, 63, 64, 67, 89, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 142, 143, 144, 147, 150], "need": [0, 2, 38], "contain": [0, 2, 4, 6, 16, 17, 41, 42, 56, 116, 142, 147, 150], "torchscript": 0, "pt": [0, 2, 148, 150, 151, 152], "extens": [0, 148], "token": [0, 2, 148, 150, 151, 152], "json": [0, 2, 135, 136, 137, 138, 139, 140, 141, 146, 148, 152], "pleas": [0, 2], "refer": [0, 2, 5, 11, 56, 58, 141], "previou": [0, 144], "also": [0, 2, 4, 55], "defin": [0, 140], "config": [0, 2, 146, 149, 155], "inform": [0, 2, 4, 11, 23, 58, 135, 137, 138], "follow": [0, 2, 25, 49, 52, 114, 144], "request": [0, 12, 20, 21, 143], "field": [0, 4, 6, 9, 10, 18, 22, 24, 25, 26, 34, 37, 47, 55, 56, 68, 89, 95, 117, 143, 146], "doc": [0, 141], "latest": [0, 141], "plugin": [0, 139, 141], "19": [0, 1, 2, 4, 17, 29, 32, 78, 97, 127, 128, 132], "connect": [0, 1, 2, 4], "ml_common": [0, 2, 135, 136, 137, 138, 139, 140, 141], "mlcommoncli": [0, 2, 135, 136, 137, 138, 139, 140, 141], "ml_client": [0, 2], "model_path": [0, 2, 141, 152], "volum": [0, 2], "workplac": [0, 2], "upload_cont": [0, 2], "model_config_path": [0, 2, 141], "v2_torchscript": 0, "content": [0, 2, 15, 55, 64, 146], "name": [0, 1, 2, 4, 7, 8, 9, 15, 16, 24, 25, 26, 39, 56, 57, 58, 59, 60, 64, 65, 77, 78, 79, 80, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 112, 114, 115, 117, 119, 136, 141, 143, 144, 146, 148, 150, 151, 152, 159], "v2": [0, 141], "version": [0, 2, 5, 141, 146], "model_format": [0, 141], "torch_script": [0, 141], "model_config": [0, 141], "model_typ": [0, 141, 146], "bert": [0, 141], "embedding_dimens": [0, 141, 146], "384": [0, 141], "framework_typ": [0, 141], "sentence_transform": [0, 2, 141], "isverbos": [0, 2, 141], "total": [0, 1, 2, 4, 23, 95, 119], "number": [0, 1, 2, 10, 18, 19, 32, 41, 42, 43, 44, 47, 78, 85, 105, 106, 117, 119, 143, 146, 149, 150, 151], "chunk": [0, 2, 141], "9": [0, 1, 2, 7, 8, 32, 38, 78, 96, 119], "sha1": [0, 2], "valu": [0, 2, 4, 7, 8, 11, 12, 16, 17, 19, 20, 21, 23, 25, 27, 28, 29, 30, 31, 32, 39, 45, 46, 48, 50, 54, 55, 58, 70, 71, 72, 73, 74, 75, 76, 78, 83, 84, 85, 91, 107, 110, 112, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 143, 144, 146, 149, 150, 152, 153], "9376c2ebd7c83f99ec2526323786c348d2382e6d86576f750c89ea544d6bbb14": 0, "meta": [0, 2], "data": [0, 5, 6, 7, 8, 11, 13, 18, 19, 23, 24, 25, 35, 37, 47, 48, 49, 55, 58, 61, 62, 86, 87, 89, 119, 121, 122, 136, 143, 145, 151, 155], "wa": [0, 2, 4, 95], "creat": [0, 1, 2, 4, 10, 23, 56, 119, 141, 142, 143, 145], "successfulli": [0, 2], "id": [0, 2, 135, 136, 137, 138, 139, 140, 141, 144, 146], "jturoiubqb81fwkil3qa": 0, "39": [0, 1, 2, 4, 32, 78, 91, 125, 126], "statu": [0, 2, 139], "8": [0, 1, 2, 4, 7, 8, 32, 46, 78, 119, 143], "last": [0, 4, 47], "now": [0, 2, 4, 119], "memori": [0, 1, 2, 5, 6, 23, 50, 53, 55, 112, 142, 151], "30": [0, 1, 4, 17, 38, 91, 128], "load_model_output": 0, "load_model": [0, 139, 157], "print": [0, 1, 2, 4, 23, 24, 25, 36, 50, 112, 141, 146, 149, 151, 152], "task_id": [0, 138, 139], "knuaoiubqb81fwkimhoo": 0, "when": [0, 2, 4, 7, 8, 37, 49, 52, 89, 114, 138, 143, 144], "see": [0, 4, 19, 23, 26, 67], "j9uroiubqb81fwki_xqu": 0, "output": [0, 2, 5, 11, 52, 58, 142, 144, 147, 155], "detail": [0, 11, 23, 58, 114, 135, 137, 138], "31": [0, 1, 4, 6, 17, 125, 128], "task_info": 0, "get_task_info": [0, 138, 157], "model_id": [0, 135, 136, 137, 139, 140, 141, 144, 148, 150, 151, 152], "task_typ": 0, "function_nam": 0, "state": [0, 2, 4, 119], "complet": 0, "worker_nod": 0, "56rnfebpsg6p8zzli59zpg": 0, "lncik04uqx": 0, "cw3bc14wna": 0, "create_tim": 0, "1673436764200": 0, "last_update_tim": 0, "1673436768619": 0, "is_async": 0, "With": [0, 2, 25], "pull": 0, "about": [0, 4, 23, 37, 89, 135, 137, 138], "metadata": [0, 141], "32": [0, 1, 4, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "model_info": 0, "get_model_info": [0, 137, 157], "model_vers": 0, "model_st": 0, "model_content_hash_valu": 0, "created_tim": 0, "1673436174206": 0, "last_loaded_tim": 0, "1673436768616": 0, "total_chunk": 0, "list": [0, 1, 4, 6, 7, 8, 10, 15, 17, 36, 37, 39, 64, 91, 117, 119, 120, 121, 122, 130, 136, 140, 143, 145, 148, 150, 151], "33": [0, 1, 2, 4, 6, 89, 125, 126, 142], "input_sent": 0, "sentence1": 0, "sentence2": 0, "embedding_output": 0, "generate_embed": [0, 136], "inference_result": [0, 136], "sentence_embed": 0, "data_typ": [0, 136], "float32": 0, "shape": [0, 11, 40, 58, 136, 153, 159], "01634426": 0, "09597998": 0, "019145392": 0, "06294038": 0, "008701664": 0, "018567331": 0, "10390024": 0, "01438248": 0, "053841658": 0, "028416203": 0, "12721275": 0, "078425184": 0, "042815633": 0, "021008862": 0, "0083344765": 0, "015378756": 0, "025418157": 0, "057775266": 0, "08016912": 0, "04194826": 0, "0363033": 0, "03286257": 0, "0021801298": 0, "06573708": 0, "0006939303": 0, "016743109": 0, "033662688": 0, "027211811": 0, "079936594": 0, "033478886": 0, "0053786216": 0, "026796935": 0, "03215637": 0, "078822225": 0, "058919754": 0, "012447697": 0, "020444121": 0, "02177262": 0, "01903451": 0, "0064995894": 0, "013272167": 0, "12131438": 0, "06135812": 0, "029969675": 0, "018355636": 0, "018626912": 0, "031622734": 0, "050837226": 0, "07211012": 0, "05208043": 0, "080562316": 0, "03143466": 0, "12672405": 0, "026447112": 0, "01855498": 0, "008953681": 0, "033323012": 0, "013190011": 0, "015476841": 0, "02531755": 0, "014650791": 0, "04100695": 0, "045453914": 0, "013998013": 0, "14769986": 0, "047261648": 0, "012467081": 0, "08881012": 0, "05570281": 0, "0712261": 0, "039342202": 0, "038937036": 0, "051908433": 0, "00073560484": 0, "00965733": 0, "023361731": 0, "01817136": 0, "050704572": 0, "070016384": 0, "03315723": 0, "05588047": 0, "11302812": 0, "023925511": 0, "05982981": 0, "011716958": 0, "023926955": 0, "039997865": 0, "040580716": 0, "085276745": 0, "03153387": 0, "044347618": 0, "05342982": 0, "047986772": 0, "03003427": 0, "019422347": 0, "037067372": 0, "035920687": 0, "055759996": 0, "07310818": 0, "11989054": 0, "036263727": 0, "08207659": 0, "008022722": 0, "030792497": 0, "13393529": 0, "030079365": 0, "011143185": 0, "07769103": 0, "048576567": 0, "008873915": 0, "011693786": 0, "005572598": 0, "022179736": 0, "023285802": 0, "02322297": 0, "0086314585": 0, "06169645": 0, "074581005": 0, "08478598": 0, "014265052": 0, "053637274": 0, "037687458": 0, "0003650253": 0, "0025565536": 0, "069411986": 0, "03757694": 0, "10751158": 0, "6506626e": 0, "00039979295": 0, "076281495": 0, "008236987": 0, "07288374": 0, "010404403": 0, "03450566": 0, "041246623": 0, "07417152": 0, "028544689": 0, "027238453": 0, "043053217": 0, "07892754": 0, "013420991": 0, "06982227": 0, "027308218": 0, "054115873": 0, "006496352": 0, "0491422": 0, "035359364": 0, "031573195": 0, "038797047": 0, "0054345205": 0, "001889496": 0, "05236429": 0, "05850431": 0, "065740205": 0, "020804454": 0, "040512808": 0, "021420127": 0, "007874725": 0, "050352618": 0, "044390827": 0, "074056536": 0, "07783067": 0, "026813269": 0, "057499446": 0, "059855614": 0, "07843816": 0, "031994343": 0, "014461099": 0, "10742861": 0, "0012253163": 0, "02684723": 0, "037464924": 0, "082663976": 0, "028964438": 0, "040711842": 0, "029962765": 0, "036543205": 0, "047913086": 0, "027071452": 0, "05592548": 0, "011957646": 0, "011235236": 0, "07890914": 0, "03498861": 0, "013008991": 0, "0043966803": 0, "0030608699": 0, "057213582": 0, "062335074": 0, "03937604": 0, "013421687": 0, "06766718": 0, "016941072": 0, "014179919": 0, "07211461": 0, "103996426": 0, "08631027": 0, "047391485": 0, "06324244": 0, "030241685": 0, "037412625": 0, "029702762": 0, "009549861": 0, "00936647": 0, "0070465724": 0, "073045425": 0, "03230818": 0, "076140955": 0, "054314557": 0, "078628875": 0, "008608382": 0, "0001752814": 0, "10352248": 0, "04011253": 0, "039781496": 0, "10547884": 0, "05295363": 0, "014632758": 0, "020501006": 0, "0004922633": 0, "014714992": 0, "022512991": 0, "119042255": 0, "3009909e": 0, "06695981": 0, "07593038": 0, "07180961": 0, "057854734": 0, "0771047": 0, "017831368": 0, "039707676": 0, "10238095": 0, "056155723": 0, "07074799": 0, "011220892": 0, "026719425": 0, "013620614": 0, "04699431": 0, "04227398": 0, "012863522": 0, "060370754": 0, "052579205": 0, "06188015": 0, "056674514": 0, "02349881": 0, "09246634": 0, "018347887": 0, "026955727": 0, "09232782": 0, "03773358": 0, "012151918": 0, "038024627": 0, "058464605": 0, "030182807": 0, "03847946": 0, "010517141": 0, "0020448545": 0, "052692227": 0, "035475314": 0, "030654425": 0, "12824024": 0, "070657946": 0, "036348704": 0, "09540714": 0, "08978835": 0, "011235279": 0, "039276138": 0, "054187495": 0, "023046806": 0, "03394825": 0, "04372884": 0, "0822965": 0, "009858812": 0, "054309264": 0, "07950183": 0, "027309302": 0, "034415472": 0, "027562853": 0, "035126418": 0, "0013632256": 0, "048644997": 0, "013266542": 0, "013280997": 0, "008072423": 0, "058368832": 0, "08316359": 0, "023912717": 0, "059019696": 0, "007333858": 0, "10157429": 0, "042652518": 0, "044809453": 0, "049821526": 0, "007843348": 0, "01932498": 0, "0036992638": 0, "024309473": 0, "063431464": 0, "007172044": 0, "016480152": 0, "08295212": 0, "03129551": 0, "013853532": 0, "07565003": 0, "066451065": 0, "01808126": 0, "020513905": 0, "014240977": 0, "032792173": 0, "0061437194": 0, "118426874": 0, "009156214": 0, "0010845538": 0, "03584563": 0, "065727085": 0, "047776014": 0, "0010052099": 0, "033534173": 0, "011426561": 0, "4758526e": 0, "08": [0, 1, 4, 17, 32, 36, 78, 125, 128], "024822427": 0, "02113463": 0, "005916312": 0, "039044585": 0, "021751031": 0, "01278796": 0, "011611024": 0, "034474954": 0, "039748512": 0, "0053140265": 0, "056406986": 0, "05625209": 0, "04697646": 0, "04579422": 0, "011643376": 0, "0026553248": 0, "07521455": 0, "04422073": 0, "009371363": 0, "015119218": 0, "014581117": 0, "03695163": 0, "03171466": 0, "07529782": 0, "05357154": 0, "033440016": 0, "039774638": 0, "08706076": 0, "0025169866": 0, "0382578": 0, "11021784": 0, "06740451": 0, "026612226": 0, "03936226": 0, "0045970045": 0, "04209974": 0, "039566025": 0, "017948482": 0, "057373285": 0, "025577404": 0, "043269508": 0, "009497045": 0, "06392292": 0, "011329891": 0, "0017350775": 0, "10386286": 0, "056629132": 0, "050229024": 0, "033140086": 0, "11811668": 0, "030147059": 0, "016945554": 0, "0048561604": 0, "015984274": 0, "04119243": 0, "05478528": 0, "033628885": 0, "0045552105": 0, "10151723": 0, "02756038": 0, "11790716": 0, "06925377": 0, "0069620605": 0, "082503565": 0, "029890021": 0, "09822348": 0, "019957757": 0, "07651902": 0, "0013569797": 0, "020354444": 0, "095648974": 0, "021821575": 0, "04957005": 0, "009695183": 0, "1411955": 0, "07984934": 0, "04524654": 0, "036256645": 0, "00011893607": 0, "0022806316": 0, "02341174": 0, "06303974": 0, "08363444": 0, "016858013": 0, "071026385": 0, "035983488": 0, "002197475": 0, "040751398": 0, "00018642341": 0, "054280244": 0, "046747886": 0, "05143693": 0, "0795994": 0, "037969496": 0, "0049146577": 0, "019310897": 0, "0133642545": 0, "06416289": 0, "054441895": 0, "035581913": 0, "028993765": 0, "0342641": 0, "022894736": 0, "013163268": 0, "0073839137": 0, "13331115": 0, "060948387": 0, "02845979": 0, "029584795": 0, "0024815626": 0, "029877836": 0, "04145469": 0, "07078607": 0, "044555377": 0, "0864968": 0, "021645771": 0, "11845037": 0, "031633895": 0, "013730348": 0, "04959232": 0, "033084806": 0, "026348935": 0, "0017932784": 0, "017277319": 0, "023652047": 0, "033142205": 0, "05828084": 0, "023370937": 0, "1472322": 0, "058540717": 0, "0067704157": 0, "076985836": 0, "05492527": 0, "07371975": 0, "04290564": 0, "055664636": 0, "021686591": 0, "0076739225": 0, "0011026153": 0, "026553316": 0, "02833705": 0, "054923203": 0, "073237605": 0, "045602042": 0, "04053986": 0, "13309641": 0, "02452086": 0, "056935184": 0, "021789031": 0, "019202353": 0, "042757515": 0, "048649188": 0, "10916028": 0, "029957185": 0, "04291542": 0, "046399377": 0, "04101825": 0, "03916927": 0, "01434633": 0, "049800027": 0, "047455456": 0, "04616458": 0, "061777044": 0, "13315107": 0, "03745541": 0, "06764448": 0, "014000683": 0, "009649745": 0, "122041255": 0, "036858596": 0, "004643711": 0, "07573207": 0, "06717273": 0, "011294109": 0, "0054268525": 0, "024108453": 0, "017889855": 0, "034661073": 0, "011044889": 0, "025785085": 0, "040445812": 0, "07686975": 0, "07299325": 0, "014831794": 0, "062170886": 0, "037714113": 0, "02069125": 0, "01760425": 0, "07429676": 0, "04936486": 0, "1105561": 0, "7905332e": 0, "011852265": 0, "0800382": 0, "014258211": 0, "08300188": 0, "0143750515": 0, "030850943": 0, "041131783": 0, "07910475": 0, "027350277": 0, "029759267": 0, "040353704": 0, "10233099": 0, "007990642": 0, "06098539": 0, "054313872": 0, "052607622": 0, "015881486": 0, "038820058": 0, "016791245": 0, "039259758": 0, "045087006": 0, "00384578": 0, "0059468723": 0, "047981992": 0, "033978373": 0, "07355664": 0, "038137518": 0, "04436654": 0, "028767021": 0, "016650094": 0, "04195262": 0, "052975018": 0, "06422168": 0, "097124524": 0, "03126186": 0, "034069516": 0, "0638325": 0, "07341366": 0, "02375476": 0, "026233898": 0, "0861261": 0, "019097282": 0, "017946113": 0, "038809914": 0, "08312302": 0, "04264862": 0, "0058717853": 0, "016290732": 0, "06564457": 0, "038125": 0, "012984925": 0, "055059038": 0, "01222137": 0, "01667332": 0, "07152203": 0, "04760967": 0, "017634975": 0, "011020588": 0, "010761541": 0, "051334303": 0, "049065627": 0, "041859634": 0, "016465204": 0, "06156411": 0, "0148474155": 0, "02258631": 0, "072870255": 0, "10713199": 0, "08118678": 0, "059418812": 0, "05864616": 0, "035723507": 0, "0062641073": 0, "0553041": 0, "00436192": 0, "01649167": 0, "008804094": 0, "056831624": 0, "016007287": 0, "082276404": 0, "036272306": 0, "0749919": 0, "013022677": 0, "0003523263": 0, "09185644": 0, "017111592": 0, "034535103": 0, "10925177": 0, "058366645": 0, "000114755756": 0, "01322465": 0, "012895966": 0, "0026634776": 0, "02905693": 0, "12556021": 0, "174597e": 0, "34": [0, 1, 4, 32, 78, 108, 109], "062185932": 0, "093839265": 0, "067736775": 0, "055619992": 0, "07129513": 0, "025203235": 0, "034357868": 0, "08441684": 0, "04938299": 0, "071598805": 0, "0026896866": 0, "029293677": 0, "010375755": 0, "045888692": 0, "022427378": 0, "008538487": 0, "04469134": 0, "034274112": 0, "05042528": 0, "06049299": 0, "023181554": 0, "096922964": 0, "001283251": 0, "027363997": 0, "079843804": 0, "022125797": 0, "002612132": 0, "03676003": 0, "074442096": 0, "03492448": 0, "04125023": 0, "0014785945": 0, "03134513": 0, "048168607": 0, "045192797": 0, "036954265": 0, "12187": 0, "067072295": 0, "05073731": 0, "08354596": 0, "090986386": 0, "0168384": 0, "02606656": 0, "040874176": 0, "004698817": 0, "010746192": 0, "015653882": 0, "09104311": 0, "009351908": 0, "047290348": 0, "08026982": 0, "009906348": 0, "0410962": 0, "036067385": 0, "03581137": 0, "00073806883": 0, "044023": 0, "027330618": 0, "011528306": 0, "0016003717": 0, "059933245": 0, "06781199": 0, "018232884": 0, "03103683": 0, "008883944": 0, "108087465": 0, "04625325": 0, "06830844": 0, "056314223": 0, "0006508865": 0, "025790976": 0, "01133251": 0, "035103947": 0, "0476359": 0, "025700083": 0, "020045416": 0, "07982874": 0, "020322429": 0, "0055968873": 0, "08593495": 0, "059094246": 0, "02761195": 0, "014367017": 0, "016388077": 0, "04377766": 0, "011402222": 0, "09235144": 0, "009467399": 0, "017747259": 0, "040929265": 0, "06330896": 0, "04455678": 0, "004279351": 0, "02992636": 0, "02093499": 0, "4727579e": 0, "03943038": 0, "040383834": 0, "0042225793": 0, "032629047": 0, "02176627": 0, "01698233": 0, "016816363": 0, "016481314": 0, "040303707": 0, "008478312": 0, "030917661": 0, "055279437": 0, "044757076": 0, "026943574": 0, "0030834714": 0, "026121125": 0, "056304026": 0, "030277165": 0, "01823297": 0, "018756147": 0, "006627037": 0, "028671997": 0, "015978226": 0, "076803155": 0, "06691047": 0, "04744138": 0, "037455965": 0, "06437736": 0, "003293694": 0, "04117527": 0, "10529296": 0, "061080433": 0, "03605559": 0, "049858045": 0, "0012305217": 0, "0133359": 0, "05163055": 0, "03245063": 0, "045467533": 0, "039037384": 0, "020681677": 0, "024131402": 0, "062601104": 0, "0331833": 0, "013199262": 0, "11745606": 0, "038941618": 0, "06446683": 0, "025967512": 0, "119937025": 0, "020080011": 0, "02623407": 0, "0034411254": 0, "03095272": 0, "031439085": 0, "05771451": 0, "029965712": 0, "010320532": 0, "115953445": 0, "020067582": 0, "10960932": 0, "06594976": 0, "0033476541": 0, "08135458": 0, "after": [0, 2, 56, 143, 144], "want": 0, "unload_model": [0, 140, 157], "method": [0, 1, 4, 19, 23, 34, 51, 120, 135, 136, 137, 138, 139, 140, 141, 155], "take": [0, 2, 37, 89, 148, 151], "two": [0, 6], "input": [0, 1, 2, 5, 67, 145, 151, 155], "node_id": [0, 140], "node": [0, 2, 140], "where": [0, 2, 5, 6, 28, 29, 30, 31, 39, 45, 46, 54, 124, 125, 126, 127, 128, 129, 131, 132, 133], "If": [0, 1, 2, 5, 7, 8, 12, 14, 17, 25, 37, 38, 43, 50, 53, 56, 89, 112, 146, 148, 150, 151, 152], "don": [0, 32, 58], "t": [0, 4, 32, 37, 55, 58, 89], "avail": [0, 2, 4, 149], "exampl": [0, 2, 4, 5, 141, 145, 146, 148, 150], "unload_model_respons": 0, "stat": [0, 155], "index": [0, 6, 7, 8, 9, 12, 15, 18, 20, 21, 23, 24, 25, 26, 35, 36, 40, 41, 47, 48, 49, 50, 52, 53, 56, 64, 87, 95, 112, 114, 119, 142, 143, 155], "35": [0, 1, 2, 4, 17, 101, 102, 127], "delete_model_respons": 0, "delete_model": [0, 135, 157], "_index": [0, 119], "_id": [0, 1, 4, 6, 22, 36, 55, 68, 119, 143], "_version": 0, "result": [0, 1, 2, 4, 23, 40, 58, 136], "_shard": [0, 119], "success": [0, 119], "fail": [0, 1, 119, 143], "_seq_no": 0, "1397": 0, "_primary_term": 0, "38": [0, 1, 4, 32, 57, 78, 128, 132], "2": [1, 4, 6, 7, 8, 10, 12, 16, 17, 18, 23, 24, 25, 27, 29, 32, 33, 38, 39, 47, 50, 56, 57, 59, 60, 65, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 115, 119, 124, 126, 127, 129, 130, 131, 132, 142, 143], "load_ext": [1, 4], "autoreload": [1, 4], "3": [1, 4, 6, 12, 16, 17, 18, 19, 24, 25, 30, 32, 38, 39, 46, 50, 54, 56, 57, 59, 60, 65, 67, 77, 78, 79, 80, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 115, 119, 123, 124, 127, 129, 130, 131, 132, 133, 142, 143, 150], "stop": [1, 4], "from": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 54, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 140, 142, 143, 144, 146, 147, 148], "yell": [1, 4], "everi": [1, 2, 4, 55, 136, 142, 144], "time": [1, 2, 4, 5, 44, 106, 144], "made": [1, 2, 4], "4": [1, 4, 6, 7, 8, 12, 16, 17, 24, 25, 32, 36, 37, 39, 50, 56, 57, 59, 60, 65, 77, 78, 79, 80, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 115, 119, 125, 126, 127, 128, 130, 132, 133, 136, 142, 143, 150], "support": [1, 2, 4, 5, 7, 8, 11, 12, 28, 29, 31, 46, 58, 73, 74, 75, 76, 95, 110, 119, 155], "pd": [1, 2, 4, 9, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 145], "numpi": [1, 2, 4, 5, 50, 53, 112], "np": [1, 2, 4, 7, 8, 19, 42, 100], "matplotlib": [1, 2, 4, 67], "pyplot": [1, 4, 67], "plt": [1, 4, 19, 67], "oml": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 50, 53, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "standard": [1, 4, 27, 45, 107, 131], "set": [1, 4, 11, 25, 37, 49, 52, 58, 89, 114, 147, 149, 150], "consist": [1, 2, 4, 58], "conftest": [1, 4], "5": [1, 4, 6, 12, 18, 24, 25, 32, 36, 38, 39, 47, 50, 57, 59, 60, 65, 66, 67, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 111, 112, 115, 119, 124, 129, 130, 142, 150, 151], "cluster": [1, 4, 135, 137, 138, 139, 141, 142, 148, 152], "6": [1, 4, 12, 17, 28, 32, 34, 37, 54, 78, 96, 119, 121, 122, 125, 130, 132], "an": [1, 4, 5, 6, 10, 15, 25, 36, 37, 38, 44, 47, 49, 52, 55, 56, 64, 70, 71, 83, 84, 89, 106, 114, 119, 142, 143, 155], "flight": [1, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 35, 36, 39, 40, 42, 45, 46, 47, 50, 54, 56, 58, 62, 67, 68, 72, 73, 74, 75, 76, 85, 87, 91, 95, 107, 110, 112, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142], "7": [1, 2, 4, 32, 37, 78, 119, 129, 132], "oml_flight": [1, 17, 20, 21, 39, 91, 130], "type": [1, 4, 11, 12, 13, 16, 18, 23, 34, 35, 37, 47, 50, 58, 62, 86, 87, 112, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "same": [1, 16, 28, 29, 30, 31, 39, 45, 46, 54, 124, 125, 126, 127, 128, 129, 131, 132, 133], "pd_flight": 1, "opensearch_to_panda": [1, 50, 53, 112, 143, 154], "core": [1, 6, 50, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "frame": [1, 2, 4, 50, 142, 143], "avgticketpric": [1, 6, 7, 8, 9, 11, 13, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 35, 39, 42, 45, 46, 50, 54, 58, 62, 72, 73, 74, 75, 76, 87, 107, 110, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142], "cancel": [1, 6, 9, 17, 24, 25, 27, 28, 29, 30, 31, 42, 45, 46, 54, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142], "carrier": [1, 9, 16, 22, 50, 56, 68, 85, 95, 112, 117], "dest": [1, 9, 18, 42, 47], "destairportid": [1, 9, 36], "destcitynam": [1, 9], "destcountri": [1, 7, 8, 9, 17, 27, 28, 29, 30, 31, 45, 46, 54, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "destloc": [1, 9], "destregion": [1, 9], "destweath": [1, 9], "distancekilomet": [1, 7, 8, 9], "distancemil": [1, 9], "flightdelai": [1, 9], "flightdelaymin": [1, 9, 11, 20, 21, 36, 39, 40, 130], "flightdelaytyp": [1, 9], "flightnum": [1, 9], "flighttimehour": [1, 9], "flighttimemin": [1, 9, 67], "origin": [1, 2, 9, 13, 18, 35, 47, 62, 87], "originairportid": [1, 9, 36], "origincitynam": [1, 9], "origincountri": [1, 9], "originloc": [1, 9], "originregion": [1, 9], "originweath": [1, 9, 67], "dayofweek": [1, 6, 9, 13, 17, 20, 21, 27, 28, 29, 30, 31, 35, 39, 42, 45, 46, 54, 62, 87, 91, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142], "timestamp": [1, 6, 7, 8, 9, 13, 17, 20, 21, 27, 28, 29, 30, 31, 32, 35, 36, 39, 42, 45, 46, 54, 62, 87, 91, 124, 125, 126, 127, 128, 130, 133, 142, 143], "object": [1, 4, 9, 11, 12, 13, 16, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 42, 44, 45, 46, 47, 50, 54, 56, 57, 58, 61, 62, 78, 87, 95, 106, 112, 135, 136, 137, 138, 139, 140, 143, 144, 155], "13": [1, 2, 4, 6, 17, 89, 96, 119, 127, 142], "float64": [1, 4, 7, 8, 13, 27, 28, 29, 30, 31, 39, 42, 45, 46, 54, 57, 58, 59, 60, 62, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 115, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 143], "bool": [1, 4, 7, 8, 14, 17, 23, 25, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 42, 45, 46, 51, 54, 70, 71, 72, 73, 74, 75, 76, 83, 84, 89, 107, 110, 113, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152], "int64": [1, 4, 10, 13, 34, 36, 42, 57, 59, 60, 62, 65, 77, 79, 80, 90, 100, 108, 109, 115, 117, 143], "datetime64": [1, 13, 36, 42, 62, 78, 91, 143], "n": [1, 4, 10, 13, 18, 36, 41, 42, 47, 62, 66, 78, 91, 104, 111, 143], "length": [1, 2, 4, 16, 56, 95, 114, 119, 150, 151], "27": [1, 2, 4, 6, 17, 40, 91, 119, 125, 127, 128, 142], "14": [1, 2, 4, 6, 32, 36, 78, 97, 125, 126, 142], "15": [1, 2, 4, 32, 36, 39, 78, 126], "includ": [1, 2, 4, 19, 23, 36, 42, 119, 143], "841": [1, 6, 24, 25, 50, 142], "265642": [1, 6, 24, 25, 50, 142], "16492": 1, "326654": 1, "1030": 1, "770416": 1, "882": [1, 6, 24, 25, 50, 142], "982662": [1, 6, 24, 25, 50, 142], "8823": 1, "400140": 1, "464": [1, 4], "389481": 1, "190": [1, 6, 24, 25, 50, 142], "636904": [1, 6, 24, 25, 50, 142], "000000": [1, 4, 11, 17, 27, 28, 30, 31, 39, 58], "181": [1, 6, 24, 25, 50, 142], "694216": [1, 6, 24, 25, 50, 142], "555": 1, "737767": 1, "222": 1, "749059": 1, "730": [1, 6, 24, 25, 50, 142], "041778": [1, 6, 24, 25, 50, 142], "13358": 1, "244200": 1, "785": 1, "779071": 1, "13054": [1, 16, 47, 56, 95], "1080": 1, "446279": 1, "8058": 1, "581753": 1, "402": 1, "929088": 1, "13055": [1, 16, 47, 56, 95], "646": [1, 126], "612941": 1, "7088": 1, "598322": 1, "644": 1, "418029": 1, "13056": [1, 16, 47, 56, 95], "997": 1, "751876": 1, "10920": 1, "652972": 1, "937": 1, "540811": 1, "13057": [1, 16, 47, 56, 95], "1102": 1, "814465": 1, "18748": 1, "859647": 1, "1697": 1, "404971": 1, "13058": [1, 16, 47, 56, 95], "858": 1, "144337": 1, "16809": 1, "141923": 1, "1610": 1, "761827": 1, "13059": [1, 11, 16, 40, 56, 58, 95, 142], "row": [1, 4, 6, 12, 15, 17, 18, 24, 25, 32, 36, 37, 38, 41, 43, 44, 47, 50, 64, 78, 89, 105, 106, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 142, 143], "16": [1, 2, 4, 39, 119, 126, 127], "17": [1, 2, 4, 6, 17, 125, 126, 127, 128, 142], "18": [1, 2, 4, 6, 32, 59, 60, 65, 78, 115, 126, 127, 142], "20": [1, 2, 4, 29, 32, 36, 39, 78, 91, 125, 127], "note": [1, 11, 22, 34, 58, 68, 116, 117, 142], "doe": [1, 2, 15, 64, 95, 119, 143], "mirror": [1, 6], "21": [1, 2, 4, 29, 30, 32, 39, 78, 91, 119, 125, 126, 127], "13049": 1, "13050": 1, "13051": 1, "13052": 1, "13053": 1, "22": [1, 2, 4, 32, 38, 78, 91, 125, 126, 127], "nbval_ignore_output": [1, 4], "lt": [1, 2], "0x1131744c0": 1, "gt": [1, 4, 36], "24": [1, 2, 4, 17, 32, 78, 128], "os_index_field": [1, 4, 6, 22, 36, 55, 56, 68], "25": [1, 2, 4, 5, 17, 19, 36, 38, 67, 119], "arrai": [1, 19, 39, 50, 91, 112, 130], "2656419677076": [1, 25, 50], "kibana": [1, 16, 50, 56, 95, 112, 117], "airlin": [1, 16, 50, 56, 95, 112, 117], "sunni": [1, 2, 67, 148], "2018": [1, 6, 7, 8, 17, 28, 29, 30, 31, 36, 39, 91, 125, 126, 127, 128, 142], "01": [1, 2, 4, 6, 7, 8, 17, 29, 30, 31, 36, 39, 91, 119, 125, 126, 127, 128, 142], "00": [1, 2, 4, 6, 7, 8, 17, 31, 32, 36, 78, 91, 125, 128, 142], "9826615595518": [1, 25, 50], "logstash": [1, 16, 50, 56, 95, 112, 117], "airwai": [1, 16, 50, 56, 95, 112, 117], "clear": [1, 2], "6369038508356": [1, 25, 50], "rain": 1, "7518761454494": 1, "02": [1, 6, 7, 8, 17, 28, 32, 36, 39, 78, 91, 125, 126], "04": [1, 17, 32, 39, 46, 78, 91, 125, 126, 127, 128, 132], "09": [1, 17, 32, 36, 39, 78, 91, 125, 127, 128], "8144645388556": 1, "jetbeat": [1, 16, 56, 95, 117], "hail": 1, "28": [1, 4, 6, 119, 126, 142], "1443369038839": 1, "54": [1, 30, 57, 89, 91, 92, 126, 132], "26": [1, 2, 4, 59, 60, 65, 115, 119], "try": [1, 34], "except": [1, 49, 52, 114, 147, 150], "attributeerror": 1, "e": [1, 2, 6, 7, 8, 10, 117, 119, 143, 148], "would": [1, 2, 50, 53, 112], "scan": [1, 50, 53, 112], "scroll": [1, 50, 53, 112], "entir": [1, 4, 49, 50, 52, 53, 112, 114, 142], "": [1, 2, 4, 5, 6, 7, 8, 11, 19, 22, 37, 39, 42, 50, 53, 58, 68, 72, 73, 74, 75, 76, 85, 89, 91, 107, 110, 112, 118, 130, 139, 141, 144], "explicitli": [1, 49, 52, 114], "suffici": 1, "call": [1, 2, 7, 8, 19, 50, 53, 95, 112, 119, 143], "ed": 1, "ed_df": 1, "05": [1, 6, 17, 125, 128, 132, 142, 150, 151], "29": [1, 4, 125, 142], "42": [1, 4, 126, 127, 132], "41": [1, 36, 119], "57": [1, 39, 91, 127], "frankfurt": [1, 18], "am": [1, 18, 36], "main": [1, 18], "airport": [1, 18, 47], "cape": [1, 18], "town": [1, 2, 18], "intern": [1, 18, 36, 47, 119], "venic": [1, 18], "marco": [1, 2, 18], "polo": [1, 18], "napl": 1, "licenciado": [1, 47], "benito": [1, 47], "juarez": [1, 47], "pisa": [1, 47], "winnipeg": [1, 47], "jame": [1, 47], "armstrong": [1, 47], "richardson": [1, 47], "internat": 1, "itami": [1, 47], "adelaid": [1, 47], "current": [1, 2, 6, 7, 8, 11, 17, 28, 29, 31, 38, 46, 55, 58, 73, 74, 75, 76, 110, 119, 144, 147, 150, 152], "36": [1, 2, 4, 6, 17, 32, 57, 59, 60, 65, 77, 78, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115, 142], "typeerror": 1, "unhash": 1, "37": [1, 17, 57, 92, 142], "900": [1, 2], "960": 1, "869736": 1, "975": 1, "812632": 1, "311": 1, "946": 1, "358410": 1, "51": [1, 2, 6, 39, 108, 109, 128], "651": 1, "383864": 1, "03": [1, 2, 7, 8, 17, 46, 125, 132], "950": [1, 4], "907": 1, "836523": 1, "12820": 1, "909": 1, "973606": 1, "12906": 1, "983": 1, "429244": 1, "06": [1, 4, 6, 7, 8, 17, 30, 32, 46, 78, 125, 126, 128, 132], "58": [1, 32, 78, 126], "12918": 1, "1136": 1, "678150": 1, "12919": 1, "1105": 1, "211803": 1, "13013": 1, "1055": 1, "350213": 1, "68": [1, 2, 119], "qualifi": 1, "aggreg": [1, 7, 10, 34, 55, 117, 121, 153], "std": [1, 4, 7, 8, 11, 27, 58, 153, 159], "261629e": [1, 7, 8], "07": [1, 4, 7, 8, 119, 126], "204365e": [1, 7, 8, 46], "000000e": [1, 7, 8], "000205e": [1, 7, 8], "578438e": 1, "663969e": 1, "onli": [1, 2, 4, 7, 8, 10, 11, 34, 42, 58, 95, 117], "numer": [1, 4, 11, 27, 28, 29, 30, 31, 32, 34, 45, 46, 54, 58, 73, 74, 75, 76, 110, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "43": [1, 39, 142], "578614e": [1, 7, 8], "664071e": [1, 7, 8], "44": [1, 2, 17, 32, 78, 127, 128], "45": [1, 4, 29, 37, 43, 119, 125, 128, 132], "46": [1, 2, 4, 32, 34, 39, 78, 123, 127, 129], "628": [1, 11, 29, 58, 74], "253689": [1, 11, 29, 58], "7092": 1, "142455": 1, "511": 1, "127842": 1, "835975": [1, 29], "266": [1, 7, 8, 11, 45, 58, 89, 107], "396861": 1, "4578": [1, 7, 8], "438497": 1, "334": 1, "753952": 1, "939439": 1, "100": [1, 2, 4, 7, 8, 11, 17, 31, 58, 76, 97, 121, 122, 128], "020528": 1, "409": 1, "893816": 1, "2459": 1, "705673": 1, "252": 1, "333192": 1, "50": [1, 4, 28, 39, 91, 127], "640": [1, 30, 39, 75], "556668": 1, "7610": 1, "330866": 1, "503": 1, "045170": 1, "75": [1, 4, 39, 91, 119], "842": [1, 39], "185470": 1, "9736": 1, "637600": 1, "720": 1, "416036": 1, "1199": [1, 11, 17, 28, 58, 73, 121, 122, 125], "729053": 1, "19881": 1, "482315": 1, "1902": 1, "902032": 1, "mai": [1, 2, 119, 143, 153], "vari": [1, 11, 58], "due": 1, "47": [1, 11, 17, 119, 126, 128], "128494": [1, 29], "407061": [1, 45], "334664": [1, 45], "766770": 1, "939513": [1, 45], "020531": [1, 11, 17, 31, 58, 121, 122, 128], "410": 1, "008918": 1, "251": [1, 17, 131], "938710": 1, "387285": [1, 39], "148975": 1, "213490": [1, 39], "505705": 1, "729004": [1, 11, 17, 28, 58, 121, 122, 125], "901978": 1, "48": [1, 91, 126, 127], "class": [1, 6, 23, 49, 50, 55, 56, 112, 120, 142, 143, 144, 148, 155], "entri": [1, 23], "non": [1, 10, 23, 28, 29, 31, 37, 46, 73, 74, 75, 76, 83, 84, 89, 110], "null": [1, 20, 21, 23], "23": [1, 2, 4, 28, 30, 32, 39, 78, 91, 125, 126, 127], "usag": [1, 19, 23, 67], "mb": 1, "49": [1, 2], "64": [1, 119], "000": [1, 2, 4, 127], "byte": [1, 35, 87], "storag": [1, 23], "714": 1, "numeric_onli": [1, 7, 8, 17, 27, 28, 29, 30, 31, 32, 39, 45, 46, 54, 72, 73, 74, 75, 76, 107, 110, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133], "12353": 1, "780369": 1, "360": [1, 11, 36], "715034": 1, "482422": 1, "780273": 1, "52": [1, 36, 101, 102], "53": [1, 32, 36, 57, 59, 60, 65, 77, 78, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115, 127], "4406": 1, "853013": 1, "251168": 1, "335171": [1, 11], "518797": 1, "55": [1, 4, 38, 39, 57, 126], "142457": 1, "853010": 1, "56": [1, 119, 126, 127], "678000e": [1, 46], "754909e": 1, "280000e": 1, "181500e": 1, "112470e": 1, "674818e": 1, "703500e": [1, 46], "156": 1, "59": [1, 91, 125], "60": [1, 36, 40, 49, 52, 114], "se": [1, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "bd": 1, "IT": 1, "ch": 1, "zh": 1, "ru": [1, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "amu": 1, "dc": 1, "61": [1, 119], "62": [1, 119], "hist": [1, 4, 153, 159], "figsiz": [1, 4, 19, 67], "63": [1, 17], "oml_flights2": 1, "65": [1, 2, 4], "os_info": [1, 4, 153, 159], "os_index_pattern": [1, 4, 6, 36, 56], "is_source_field": [1, 4, 36], "map": [1, 4, 13, 34, 36, 43, 56, 62, 119, 143], "capabl": [1, 4, 5, 36], "os_field_nam": [1, 4, 36], "is_sourc": [1, 4, 36], "os_dtyp": [1, 4, 36, 153, 159], "os_date_format": [1, 4, 36], "pd_dtype": [1, 4, 36], "is_search": [1, 4, 36], "is_aggregat": [1, 4, 36], "is_script": [1, 4, 36], "aggregatable_os_field_nam": [1, 4, 36], "date": [1, 5, 35, 36, 87], "strict_date_hour_minute_second": [1, 36], "keyword": [1, 4, 7, 8, 10, 34, 35, 36, 37, 87, 89, 117, 143], "none": [1, 2, 4, 6, 7, 8, 12, 15, 16, 17, 19, 23, 24, 25, 28, 29, 30, 31, 36, 37, 39, 41, 42, 45, 46, 48, 49, 50, 52, 54, 55, 56, 64, 67, 72, 73, 74, 75, 76, 89, 104, 107, 110, 112, 114, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 143, 144, 146, 147, 148, 149, 150, 151, 152], "integ": [1, 2, 36, 65, 96], "oper": [1, 7, 8, 12, 17, 36, 55, 57, 59, 60, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 115, 141, 155], "task": [1, 2, 4, 36, 155], "boolean_filt": [1, 4, 36], "must": [1, 4, 6, 7, 8, 36, 38, 43, 55], "term": [1, 4, 36, 117, 150], "rang": [1, 2, 4, 36, 55], "sort_field": [1, 4, 36], "_doc": [1, 4, 24, 25, 36], "size": [1, 2, 4, 6, 36, 119, 151, 153, 159], "sort_param": [1, 4, 36], "desc": [1, 4, 36], "_sourc": [1, 4, 36, 119], "bodi": [1, 4, 36, 37, 89], "post_process": [1, 4, 36], "sort_index": [1, 4, 24, 25, 36], "deep": 2, "ar": [2, 4, 7, 8, 10, 12, 13, 15, 17, 19, 20, 21, 28, 29, 30, 31, 37, 39, 43, 45, 46, 54, 56, 62, 64, 73, 74, 75, 76, 89, 110, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 146, 149, 153, 155], "veri": [2, 22, 55, 68], "power": [2, 5, 90, 100], "have": [2, 4, 10, 151], "been": 2, "shown": 2, "improv": 2, "art": 2, "sever": [2, 7, 8], "howev": [2, 10, 19, 151], "thei": [2, 10, 58, 116], "lot": [2, 23, 55], "label": [2, 6, 7, 8, 9, 12, 15, 64, 155], "Such": 2, "often": 2, "hard": 2, "obtain": 2, "pre": [2, 19, 144, 146], "larg": [2, 5, 142], "languag": 2, "circumv": 2, "issu": [2, 5, 10], "introduc": 2, "techniqu": 2, "custom": [2, 25, 119, 144, 150, 151, 152], "built": 2, "given": [2, 16, 37, 39, 89, 91, 116, 130, 136, 140, 146], "document": [2, 5, 10, 41, 55, 150, 151], "search": [2, 15, 36, 37, 64, 89, 117, 119, 148, 151, 152], "focu": 2, "corpu": 2, "run": [2, 4, 138, 144, 149, 150], "A": [2, 6, 36, 37, 40, 56, 116, 141, 143], "could": [2, 95], "ani": [2, 16, 25, 37, 49, 89, 91], "piec": 2, "unstructur": 2, "text": [2, 10, 34, 37, 89, 117, 143], "webpag": 2, "neural": 2, "network": 2, "give": [2, 4, 23, 144, 155], "retirev": 2, "enough": 2, "dataset": [2, 5, 11, 38, 58], "For": [2, 10, 12, 19, 55, 95, 142, 150], "relev": 2, "pair": [2, 24, 25], "m": [2, 5], "natur": 2, "question": [2, 4], "more": [2, 4, 7, 8, 11, 37, 58, 89, 141, 146, 149, 151, 152], "than": [2, 6, 34, 55, 117], "500k": 2, "transfom": 2, "limit": [2, 22, 68, 151], "perform": [2, 17], "out": [2, 23, 117], "domain": 2, "arxiv": 2, "ab": 2, "2104": 2, "08663": 2, "well": [2, 11, 58], "know": 2, "fact": [2, 150], "medium": 2, "torubl": 2, "distribut": [2, 11, 58, 150], "thu": 2, "specif": [2, 37, 117], "unfortun": 2, "avaial": 2, "acquir": 2, "absenc": 2, "sqg": [2, 147], "The": [2, 6, 9, 11, 13, 15, 18, 20, 21, 24, 25, 27, 35, 45, 47, 54, 55, 56, 58, 62, 64, 87, 142, 144, 146, 147], "ha": [2, 18, 22, 32, 34, 47, 55, 68, 78, 136, 140], "human": 2, "It": [2, 4, 18, 47], "semant": [2, 151], "beat": 2, "get": [2, 149, 153, 155], "precis": 2, "embed": 2, "you": [2, 4, 5, 38], "accomplish": 2, "script": [2, 148, 151], "releas": 2, "pytorch": 2, "proper": 2, "torch": [2, 148, 151], "base": [2, 10, 18, 42, 47, 56, 144, 146, 148, 149, 151], "your": [2, 4, 5, 18, 47], "environ": [2, 149, 150], "acceler": [2, 150], "tqdm": 2, "detoxifi": 2, "ml_model": [2, 144, 145, 146, 147, 148, 149, 150, 151, 152], "sentencetransformermodel": [2, 144, 158], "boto3": 2, "load_dataset": 2, "gc": 2, "collect": [2, 69], "cuda": 2, "empty_cach": 2, "mlcommon": [2, 3, 5, 155], "later": [2, 4], "myselect": 2, "max": [2, 4, 7, 8, 11, 17, 58, 121, 122, 150, 151, 153, 159], "is_select": 2, "passage_text": 2, "argmax": 2, "There": 2, "three": 2, "local": [2, 4], "folder": [2, 144, 147, 150], "jsonl": 2, "file": [2, 4, 48, 119, 141, 144, 146, 147, 148, 150, 151, 152, 155], "index_nam": [2, 49, 52], "purpos": [2, 150], "ms_marco": 2, "v1": 2, "df": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 42, 43, 45, 46, 47, 54, 57, 58, 59, 60, 62, 65, 67, 68, 77, 79, 80, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 115, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "from_dict": 2, "valid": [2, 119], "reus": 2, "dhrubo": 2, "cach": [2, 43], "huggingfac": [2, 144, 148, 150], "0": [2, 5, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 30, 31, 32, 34, 37, 39, 45, 50, 54, 56, 57, 59, 60, 64, 65, 67, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 115, 119, 121, 122, 124, 126, 128, 130, 131, 132, 133, 142, 143, 150, 151], "b6a62715fa5219aea5275dd3556601004cd63945cb63e36e022f77bb3cbbca84": 2, "appli": [2, 7, 8, 15, 19, 37, 38, 64], "lambda": 2, "axi": [2, 7, 8, 12, 15, 20, 21, 41, 64], "abov": 2, "cell": [2, 10], "displai": 2, "full": [2, 23, 37, 89], "column": [2, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 58, 62, 64, 87, 89, 95, 105, 106, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 153], "set_opt": 2, "max_column": 2, "expand_frame_repr": 2, "max_colwidth": 2, "walgreen": 2, "sale": 2, "averag": 2, "salari": 2, "approxim": [2, 150, 153], "per": 2, "year": 2, "servic": [2, 119], "associ": 2, "cashier": 2, "179": 2, "district": 2, "manag": 2, "hourli": 2, "pai": 2, "hour": 2, "laboratori": 2, "technician": 2, "90": [2, 4], "pharmaci": 2, "come": 2, "810": 2, "point": [2, 38], "directli": [2, 4, 19, 148], "employe": 2, "job": 2, "inde": 2, "much": [2, 4], "do": [2, 12, 34, 55, 117, 143], "bartend": 2, "make": [2, 5, 19], "accord": [2, 15, 64], "bureau": 2, "labor": 2, "statist": [2, 11, 58], "wage": 2, "yearli": 2, "home": [2, 148], "550": 2, "thing": 2, "some": [2, 4], "excit": 2, "other": [2, 69, 89, 149], "exhaust": 2, "At": 2, "fun": 2, "had": 2, "rather": [2, 6, 34, 117], "dull": [2, 47], "But": 2, "most": [2, 151], "part": 2, "almost": 2, "alwai": 2, "reward": 2, "financi": 2, "sens": 2, "long": [2, 4, 143], "stick": 2, "what": [2, 4, 5, 11, 24, 25, 58], "furuncl": 2, "boil": 2, "follicul": 2, "infect": 2, "hair": 2, "follicl": 2, "commonli": 2, "caus": [2, 119, 143], "bacterium": 2, "staphylococcu": 2, "aureu": 2, "pain": 2, "swollen": 2, "area": [2, 119], "skin": 2, "accumul": 2, "pu": 2, "dead": 2, "tissu": 2, "sign": 2, "symptom": 2, "edit": 2, "bumpi": 2, "red": 2, "fill": 2, "lump": 2, "around": 2, "tender": 2, "warm": 2, "pea": 2, "golf": 2, "ball": 2, "yellow": 2, "white": 2, "center": 2, "seen": [2, 116], "readi": 2, "drain": 2, "discharg": 2, "urinalysi": 2, "detect": [2, 70, 71, 83, 84], "evalu": 2, "urin": 2, "assess": 2, "wide": 2, "disord": 2, "urinari": 2, "tract": 2, "kidnei": 2, "diseas": 2, "diabet": 2, "involv": [2, 50, 53, 112], "examin": 2, "appear": 2, "concentr": 2, "abnorm": 2, "ill": 2, "cloudi": 2, "instead": [2, 37, 89], "increas": [2, 151], "level": [2, 12], "protein": 2, "vitamin": 2, "shigellosi": 2, "nervou": 2, "system": 2, "nose": 2, "loss": 2, "smell": 2, "asthma": 2, "persist": 2, "headach": 2, "stone": 2, "overact": 2, "thyroid": 2, "iron": 2, "poor": 2, "blood": 2, "anemia": 2, "deaf": 2, "ring": 2, "ear": 2, "precancer": 2, "mouth": 2, "sore": 2, "leukoplakia": 2, "treat": 2, "defici": 2, "reduc": 2, "complic": 2, "malaria": 2, "hiv": 2, "measl": 2, "diarrhea": 2, "children": 2, "genet": 2, "alter": 2, "normal": 2, "initi": [2, 144], "lead": 2, "intercellular": 2, "extracellular": 2, "matrix": 2, "ecm": 2, "mediat": 2, "adhes": 2, "cancer": 2, "afflict": 2, "organ": 2, "induc": 2, "uncontrol": 2, "divis": [2, 59, 60, 65, 93, 94, 96, 103, 115], "either": [2, 7, 8, 15, 64, 147, 150], "constitut": 2, "migrat": 2, "cellular": 2, "regul": 2, "death": 2, "cost": 2, "basement": 2, "free": 2, "calcul": [2, 32, 39, 78, 91, 130], "recent": 2, "trust": 2, "estim": 2, "wall": 2, "basic": 2, "125": [2, 17, 121, 122, 128], "squar": 2, "feet": 2, "code": [2, 5, 23, 119], "47474": 2, "benchmark": 2, "between": [2, 5, 39, 91, 116, 130], "foot": 2, "erudit": 2, "diverg": 2, "definit": [2, 33, 82], "smart": 2, "ones": 2, "knowledg": 2, "logic": 2, "everyth": 2, "one": [2, 4, 7, 8], "five": 2, "faction": 2, "world": 2, "dedic": 2, "intellig": 2, "curios": 2, "astut": 2, "form": 2, "those": 2, "who": 2, "blame": 2, "war": 2, "occur": [2, 56], "past": 2, "them": [2, 151], "split": [2, 23], "first": [2, 4, 5, 18, 20, 21, 25, 57, 116, 119, 141], "place": 2, "dauntless": 2, "soldier": 2, "end": 2, "close": 2, "relationship": 2, "amiti": 2, "becaus": 2, "peac": 2, "No": 2, "candor": 2, "why": 2, "albumin": 2, "absent": 2, "share": 2, "present": 2, "prevent": [2, 37, 89], "molecul": 2, "being": [2, 4, 25], "excret": 2, "individu": 2, "high": 2, "even": 2, "movi": 2, "bird": 2, "film": 2, "locat": [2, 38, 144], "schoolhous": 2, "bodega": 2, "lane": 2, "northern": 2, "california": 2, "alfr": 2, "hitchcock": 2, "daphn": 2, "du": 2, "maurier": 2, "short": 2, "stori": 2, "cornwal": 2, "england": 2, "process": [2, 149], "special": 2, "effect": 2, "shot": 2, "usual": 2, "director": 2, "plai": 2, "fair": 2, "geographi": 2, "restaur": 2, "tide": 2, "wharf": 2, "bai": 2, "amp": 2, "assort": 2, "shelter": 2, "attack": 2, "expand": 2, "unrecognis": 2, "hotel": 2, "complex": 2, "sinc": [2, 4, 150], "big": 2, "surpris": 2, "real": 2, "pretend": 2, "each": [2, 10, 13, 25, 27, 28, 29, 30, 31, 34, 35, 39, 45, 46, 54, 62, 70, 71, 83, 84, 87, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "sample_passag": 2, "ss": 2, "ad": 2, "vocabulari": [2, 150], "sure": 2, "word": [2, 150, 151], "three_step_queri": 2, "generate_synthetic_queri": 2, "num_machin": [2, 149, 150], "overwrit": [2, 143, 144, 147, 150], "total_queri": 2, "numseq": 2, "num_gpu": [2, 150, 151], "toxic_cutoff": 2, "prepar": [2, 148, 152], "input_id": 2, "attention_mask": 2, "424": 2, "24it": 2, "longer": 2, "512": [2, 151], "were": 2, "discard": 2, "cpu": [2, 149], "befor": [2, 119, 143], "80": [2, 57, 59, 60, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115], "68good": 2, "kept": 2, "queries_after_detoxifi": 2, "synthetic_queries_batch_": 2, "p": 2, "clean_synthetic_queri": 2, "action": 2, "execut": 2, "elabor": 2, "consum": 2, "amount": 2, "gpt": 2, "xl": 2, "co": 2, "gpt2": 2, "startoftext": 2, "qry": 2, "append": [2, 119, 143], "begin": [2, 4], "respect": [2, 4], "5b": 2, "paramet": [2, 4, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152], "ask": [2, 4], "publicli": 2, "found": [2, 16, 146], "here": [2, 4], "ci": 2, "dbc": 2, "amazon": 2, "gpt2_xl_sqg": 2, "onc": 2, "start": 2, "ideal": [2, 19], "so": [2, 55, 56, 141, 143, 153], "less": 2, "divisor": 2, "gpu": [2, 149, 150, 151], "singl": [2, 7, 8, 10, 19, 37, 91], "instanc": [2, 95], "pass": [2, 4, 7, 8, 37, 89], "progress": [2, 142, 150, 151], "bar": 2, "empir": 2, "find": [2, 150, 151, 152], "better": 2, "peform": 2, "diminish": 2, "infer": [2, 48, 119], "remov": [2, 12, 25, 28, 29, 30, 31, 39, 45, 46, 54, 119, 124, 125, 126, 127, 128, 129, 131, 132, 133, 143], "innappropri": 2, "float": [2, 35, 39, 41, 59, 60, 72, 73, 74, 75, 76, 87, 91, 104, 107, 110, 115, 118, 130, 150, 151], "reject": 2, "toiciti": 2, "score": 2, "greater": 2, "final": 2, "along": 2, "correspond": 2, "work": [2, 7, 8, 37, 89, 144], "directori": [2, 144, 147, 150], "custom_model": 2, "folder_path": [2, 144], "model_fil": [2, 144], "read_queri": [2, 158], "read_path": [2, 147, 150], "synthetic_queri": [2, 147, 150], "synthetic_queries_batch": 2, "prob": 2, "000058": 2, "bb": 2, "67": 2, "000027": 2, "known": 2, "scienc": 2, "000088": 2, "urinali": 2, "000001": 2, "primari": 2, "role": 2, "growth": 2, "factor": 2, "000610": 2, "gene": 2, "express": [2, 15, 20, 21, 40, 64], "286169": 2, "assist": 2, "100414": 2, "kind": 2, "peopl": 2, "initit": 2, "export": [2, 155], "configur": [2, 6, 144], "plese": 2, "visit": 2, "synthest": 2, "clean": [2, 147, 150], "space": 2, "output_model_nam": [2, 150, 151], "test2_model": 2, "zip_file_nam": [2, 148, 150, 152], "num_epoch": [2, 150, 151], "verbos": [2, 23, 119, 146, 149, 150, 151, 152], "66": [2, 132], "244544": 2, "23it": 2, "without": 2, "epoch": [2, 150, 151], "379661083221436": 2, "path": [2, 141, 144, 147, 148, 150, 152], "tokenizer_json_path": 2, "auto": 2, "messag": [2, 119, 141], "indic": [2, 6, 70, 71, 83, 84, 119, 142], "pretrain": [2, 144], "save_as_pt": [2, 158], "inferenc": 2, "format": [2, 141, 148, 150, 151], "default": [2, 6, 7, 8, 15, 16, 17, 18, 20, 21, 24, 25, 28, 29, 30, 31, 32, 37, 39, 41, 45, 46, 47, 54, 55, 64, 78, 89, 91, 117, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152], "msmarco": [2, 144, 146, 148, 151], "distilbert": [2, 144, 146, 148, 151], "ta": [2, 144, 146, 148, 151], "b": [2, 119, 143, 144, 146, 148, 151], "pre_trained_model": 2, "export_huggingfac": 2, "todai": [2, 148], "sentencetransform": 2, "original_nam": 2, "auto_model": 2, "distilbertmodel": 2, "word_embed": 2, "position_embed": 2, "layernorm": 2, "dropout": 2, "layer": 2, "modulelist": 2, "transformerblock": 2, "attent": 2, "multiheadselfattent": 2, "q_lin": 2, "linear": 2, "k_lin": 2, "v_lin": 2, "out_lin": 2, "sa_layer_norm": 2, "ffn": 2, "lin1": 2, "lin2": 2, "output_layer_norm": 2, "pool": 2, "describ": [2, 4, 153, 159], "commons_model_config": [2, 146], "make_model_config_json": [2, 158], "pars": [2, 146], "son": 2, "differ": [2, 4, 55, 116, 144], "arguument": 2, "chang": [2, 56, 95], "help": 2, "1a198957ec8a759e83f1e862ad46bb120c6c1b5a031e75c415c1a893c87a3da7": 2, "cz2rloub6uqertfo8jph": 2, "demo": [3, 5], "notebook": [3, 5, 49], "datafram": [3, 4, 55, 57, 58, 59, 60, 62, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 145, 147, 155], "onlin": [3, 5], "retail": [3, 5], "analysi": [3, 5], "sentenc": [3, 5, 136, 145, 148, 150, 151, 155], "model": [3, 5, 136, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155], "train": [3, 5, 144, 145, 146, 151, 152, 155], "save": [3, 5, 144, 148, 150, 151], "upload": [3, 5, 137, 148, 152, 155], "opensearch": [3, 4, 6, 9, 10, 13, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 43, 48, 49, 50, 53, 55, 56, 62, 68, 86, 87, 89, 95, 105, 112, 116, 117, 119, 135, 137, 138, 139, 141, 142, 143, 155], "integr": 3, "panda": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 87, 91, 95, 106, 107, 110, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 147, 155], "let": 4, "read": [4, 5, 37, 89, 119, 142, 143, 146, 147, 150], "csv": [4, 48, 119], "popul": [4, 40, 143], "csv_to_opensearch": [4, 156], "gz": 4, "os_client": [4, 6, 56, 119, 143], "os_dest_index": [4, 119, 143], "es_if_exist": 4, "replac": [4, 119, 143], "os_dropna": [4, 119, 143], "es_refresh": 4, "compress": [4, 48, 119], "gzip": 4, "index_col": [4, 119], "next": 4, "check": [4, 37, 89, 149], "instanti": 4, "allow": [4, 5], "choos": [4, 144], "subset": [4, 6, 15, 42, 64], "didn": 4, "access": [4, 5, 55], "countri": 4, "customerid": 4, "invoiced": 4, "invoiceno": 4, "quantiti": [4, 95], "stockcod": 4, "unitpric": 4, "dtype": [4, 9, 10, 16, 20, 21, 23, 24, 27, 28, 29, 30, 31, 34, 35, 39, 42, 45, 46, 50, 54, 56, 57, 58, 59, 60, 65, 77, 78, 79, 80, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 114, 115, 117, 119, 124, 125, 126, 127, 128, 129, 131, 132, 133, 143, 153, 159], "offer": 4, "info": [4, 15, 64, 153, 155], "underli": [4, 6, 61, 86, 95, 155], "doubl": 4, "understand": 4, "attribut": [4, 155], "unit": 4, "kingdom": 4, "17850": 4, "85123a": 4, "71053": 4, "count": [4, 7, 8, 11, 19, 23, 32, 36, 58, 117, 153], "14998": 4, "17419": 4, "21773": 4, "14999": 4, "22149": 4, "specifi": [4, 7, 8, 12, 15, 37, 41, 64, 89, 117], "order": [4, 18, 37, 47, 89, 116, 119, 151], "2010": 4, "filter": [4, 18, 20, 21, 32, 37, 38, 39, 41, 47, 89, 130, 153, 159], "under": [4, 38, 144], "hood": 4, "queri": [4, 10, 36, 37, 38, 43, 55, 89, 105, 144, 147, 150, 153], "construct": [4, 6], "vector": 4, "germani": 4, "1109": 4, "12662": 4, "22809": 4, "95": [4, 150, 151], "1110": 4, "84347": 4, "1111": 4, "84945": 4, "85": 4, "1112": 4, "22242": 4, "1113": 4, "22244": 4, "isin": [4, 159], "84406b": 4, "84029g": 4, "84029e": 4, "combin": [4, 7, 8, 89, 121, 122], "further": [4, 141], "translat": [4, 150], "answer": 4, "mani": [4, 117, 149], "nuniqu": [4, 123, 153, 159], "sum": [4, 7, 8, 153, 159], "product": [4, 32], "111960": 4, "me": 4, "mean": [4, 7, 8, 11, 17, 58, 153, 159], "min": [4, 7, 8, 11, 17, 58, 121, 122, 153, 159], "qunat": 4, "unit_pric": 4, "agg": [4, 8, 17, 153], "61548": 4, "490000": [4, 59, 60, 115], "103233": 4, "2880": 4, "990000": [4, 59, 60, 115], "9360": 4, "10729": 4, "15000": 4, "15590": 4, "776680": 4, "464000": 4, "1764": 4, "189592": 4, "930116": 4, "106214": 4, "12347": 4, "14222": 4, "689466": 4, "250000": 4, "15668": 4, "019608": 4, "510000": 4, "17218": 4, "806604": 4, "472000": 4, "212788": 4, "18239": 4, "histogram": [4, 19, 67], "bin": [4, 19, 67], "log": [4, 146, 149, 151, 152], "13748": 4, "22086": 4, "83": [4, 119], "15291": 4, "21733": 4, "96": [4, 11, 89], "14688": 4, "21212": 4, "102": [4, 17, 121, 122, 128], "85071b": 4, "176": [4, 57], "16029": 4, "85099c": 4, "14784": 4, "15061": 4, "22423": 4, "14785": 4, "22075": 4, "14788": 4, "17038": 4, "14974": 4, "14739": 4, "21704": 4, "72": 4, "14980": 4, "22178": 4, "258": 4, "string": [4, 7, 8, 37, 89, 114, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152], "concaten": [4, 152], "kingdom85123a": 4, "kingdom71053": 4, "kingdom84406b": 4, "kingdom84029g": 4, "kingdom84029": 4, "14995": 4, "kingdom72349b": 4, "14996": 4, "kingdom72741": 4, "14997": 4, "kingdom22762": 4, "kingdom21773": 4, "kingdom22149": 4, "jan": 5, "2023": 5, "1": [5, 6, 7, 8, 12, 15, 16, 18, 19, 20, 21, 23, 24, 25, 28, 32, 34, 38, 39, 41, 45, 46, 50, 56, 57, 59, 60, 64, 65, 77, 78, 79, 80, 82, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 112, 115, 119, 124, 126, 127, 130, 131, 132, 141, 142, 143, 146, 149, 150], "0b1": 5, "link": [5, 40, 95], "sourc": [5, 6, 8, 10, 12, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 32, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 55, 56, 58, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 83, 85, 88, 89, 91, 95, 104, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142], "repositori": 5, "idea": 5, "python": [5, 56], "client": [5, 6, 56, 119, 143], "explor": 5, "analyz": [5, 11, 37, 58, 89], "familiar": 5, "compat": [5, 42], "experiment": 5, "possibl": [5, 6, 28, 29, 30, 31, 34, 39, 45, 46, 54, 124, 125, 126, 127, 128, 129, 131, 132, 133], "packag": 5, "exist": [5, 10, 12, 55, 83, 84, 119, 143], "structur": [5, 6, 142], "easi": 5, "switch": 5, "scikit": 5, "equival": [5, 12], "gener": [5, 11, 34, 41, 58, 117, 144, 146, 147, 150, 155], "resid": 5, "via": [5, 13, 19, 37, 62], "recommend": [5, 144, 147, 150], "look": 5, "re": [5, 15, 64, 116], "new": [5, 12, 32, 95, 119, 143], "seri": [5, 7, 8, 10, 11, 13, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 34, 35, 37, 44, 45, 46, 54, 119, 143, 155], "util": [5, 51, 155], "function": [5, 7, 8, 18, 37, 47, 89, 121, 122, 144, 155], "licens": 5, "contribut": 5, "conduct": 5, "str": [6, 7, 8, 15, 17, 24, 25, 36, 37, 40, 48, 55, 56, 64, 88, 89, 95, 114, 119, 120, 121, 122, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "_query_compil": [6, 56], "querycompil": [6, 55, 56, 120], "dimension": [6, 43, 105], "mutabl": 6, "potenti": 6, "heterogen": 6, "tabular": [6, 52], "ax": [6, 19, 67], "referenc": [6, 22, 68, 142, 143], "pattern": [6, 56], "wildcard": [6, 56], "g": [6, 7, 8, 10, 143, 148], "option": [6, 37, 41, 89, 119, 142, 144, 146, 147, 148, 149, 150, 151, 152, 155], "pandas_api_doc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 91, 95, 106, 107, 110, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "argument": [6, 7, 8, 11, 28, 29, 31, 34, 37, 40, 46, 58, 73, 74, 75, 76, 89, 110, 114, 117], "import": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 50, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "opensearch_test_cli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 50, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "head": [6, 24, 25, 38, 50, 57, 59, 60, 65, 77, 79, 80, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 115, 142, 153, 159], "todo": [6, 10, 11, 28, 29, 31, 34, 40, 46, 55, 58, 73, 74, 75, 76, 110, 117, 119], "index_field": 6, "01t00": 6, "772": 6, "100846": 6, "159": 6, "990962": 6, "800": 6, "217104": 6, "803": 6, "015200": 6, "func": [7, 8, 121, 122], "int": [7, 8, 15, 18, 20, 21, 23, 32, 33, 37, 39, 41, 44, 47, 64, 66, 72, 73, 74, 75, 76, 78, 82, 85, 89, 91, 104, 106, 107, 110, 111, 117, 118, 130, 143, 146, 149, 150, 151], "arg": [7, 8], "kwarg": [7, 8, 37, 89], "over": [7, 8, 20, 21, 24, 25, 37], "dict": [7, 8, 119, 143, 146], "klass": [7, 8], "accept": [7, 8, 17, 121, 122], "mad": [7, 8, 153, 159], "median": [7, 8, 72, 124, 153, 159], "mode": [7, 8, 48, 144, 153, 159], "quantil": [7, 8, 153, 159], "rank": [7, 8], "sem": [7, 8], "skew": [7, 8], "var": [7, 8, 107, 153, 159], "datatyp": [7, 8, 28, 29, 30, 31, 32, 39, 45, 46, 54, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133], "nan": [7, 8, 11, 27, 28, 29, 30, 31, 32, 39, 45, 46, 49, 52, 54, 58, 114, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133], "nat": [7, 8, 27, 28, 29, 30, 31, 32, 39, 45, 46, 54, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133], "posit": [7, 8, 18, 47], "scalar": [7, 8], "astyp": [7, 8], "8204364": [7, 8, 110], "92616288": [7, 8], "assert": [9, 22, 68], "isinst": [9, 22, 68], "na": [10, 17, 20, 21, 70, 71, 83, 84], "against": [10, 37], "ineffici": [10, 55], "altern": [10, 12], "approach": 10, "value_count": [10, 159], "aggregat": [10, 34, 117], "multipl": [10, 32, 37, 78, 79, 80, 98, 99, 141], "tag": 10, "add": [10, 11, 40, 58, 92, 95, 148, 159], "addit": [10, 11, 37, 40, 57, 58, 89, 92], "featur": 10, "summari": [10, 11, 23, 36, 58], "ecommerc": [10, 12, 23, 32, 34, 37, 38, 43, 57, 59, 60, 65, 77, 78, 79, 80, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 115], "customer_first_nam": [10, 12, 23, 34, 38, 57], "geoip": [10, 23, 32, 38], "city_nam": [10, 23, 32, 38], "4675": [10, 12, 23, 43, 105], "4094": [10, 23], "descript": [11, 58, 144, 151, 152, 155], "summar": [11, 58], "central": [11, 58], "tendenc": [11, 58], "dispers": [11, 58], "exclud": [11, 20, 21, 42, 58], "both": [11, 58], "mix": [11, 58], "depend": [11, 37, 58, 89], "below": [11, 58], "percentil": [11, 58, 150, 151], "386661": [11, 58], "743006": 11, "inplac": 12, "error": [12, 37, 89, 119], "rais": [12, 37, 89, 119, 143, 147, 150], "whether": [12, 70, 71, 83, 84], "multiindex": 12, "suppress": 12, "caller": 12, "email": 12, "eddi": [12, 37, 57], "underwood": 12, "famili": 12, "zzz": 12, "mari": [12, 38, 57], "bailei": 12, "gwen": [12, 57], "butler": 12, "dian": [12, 57], "chandler": 12, "weber": 12, "4670": 12, "lambert": 12, "4671": [12, 37], "jim": [12, 37], "gilbert": 12, "4672": [12, 37], "yahya": [12, 37], "rivera": 12, "4673": 12, "hampton": 12, "4674": [12, 23, 37], "jackson": [12, 37], "hopkin": 12, "goodwin": 12, "oliv": [12, 37], "rio": 12, "_os_dtype_to_pd_dtyp": [13, 62], "__doc__": [13, 62], "determin": [14, 63, 117], "item": [15, 16, 41, 64, 136], "sequenc": [15, 37, 64], "regex": [15, 64], "routin": [15, 64], "its": [15, 64, 148, 152], "keep": [15, 64], "regular": [15, 25, 64], "By": [15, 25, 33, 37, 55, 64, 82, 142], "enforc": [15, 64], "mutual": [15, 64], "exclus": [15, 64], "kei": [16, 17, 139, 150, 153], "ex": 16, "dropna": [17, 19, 32, 119, 120, 143], "dataframegroupbi": [17, 153], "group": [17, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "togeth": 17, "drop": [17, 153], "ae": [17, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "110": [17, 119, 121, 122, 128], "799911": [17, 121, 122, 128], "1126": [17, 121, 122, 125], "148682": [17, 121, 122, 125], "132": 17, "443756": 17, "817": [17, 130], "931030": 17, "589394": [17, 121, 122, 128], "642822": [17, 121, 122, 125], "389603": 17, "1172": 17, "382568": 17, "AT": [17, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "1181": [17, 121, 122, 125], "835815": [17, 121, 122, 125], "tr": [17, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "307": 17, "915649": 17, "145966": [17, 121, 122, 128], "153069": 17, "1192": 17, "429932": 17, "za": [17, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "002663": [17, 121, 122, 128], "1196": [17, 121, 122, 125], "186157": [17, 121, 122, 125], "121": [17, 119], "280296": 17, "1175": 17, "709961": 17, "643": [17, 126], "956793": 17, "717949": 17, "388": 17, "828809": 17, "571429": 17, "673": 17, "551677": 17, "746154": 17, "682": 17, "197241": 17, "733333": 17, "647": 17, "158290": 17, "819936": 17, "598": 17, "063146": 17, "752014": 17, "579": [17, 130], "799066": 17, "767068": 17, "636": 17, "998605": 17, "738589": 17, "677": 17, "794078": 17, "928571": 17, "sort": [18, 24, 25, 47, 55, 116, 117, 151], "quickli": [18, 47], "right": [18, 47, 57, 59, 60, 65, 77, 79, 80, 90, 108, 109, 115], "select": [18, 42, 47, 155], "sydnei": 18, "kingsford": 18, "smith": 18, "grid": [19, 67], "xlabels": [19, 67], "xrot": [19, 67], "ylabels": [19, 67], "yrot": [19, 67], "sharex": 19, "sharei": 19, "layout": 19, "kwd": [19, 67], "deriv": [19, 67, 119], "plot": [19, 67, 150, 151, 155], "_core": [19, 67], "hist_fram": [19, 67], "d": [19, 143], "weight": 19, "col": 19, "select_dtyp": [19, 153], "occurr": [20, 21, 38, 117], "maximum": [20, 28, 73], "oml_df": [20, 21, 32, 39, 50, 53, 130, 142, 143], "1843": 20, "109": 20, "1988": 20, "minimum": [21, 31, 76], "5454": 21, "compar": [22, 68], "buf": [23, 49, 52, 114], "stringio": 23, "max_col": [23, 49, 52], "memory_usag": 23, "show_count": 23, "concis": 23, "copi": 23, "difficult": 23, "appropri": 23, "sparsedatafram": 23, "incorrect": [23, 38], "iter": [24, 25, 119, 155], "tupl": [24, 25, 43, 105, 119, 143], "itertupl": [24, 153], "namedtupl": [24, 25], "element": [25, 44, 57, 59, 60, 65, 70, 71, 77, 79, 80, 83, 84, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 115], "possibli": 25, "iterrow": [25, 153], "69421554118": [25, 50], "041778346198": [25, 50], "yield": 25, "deviat": [27, 45, 72, 107, 124, 127, 131], "213": [27, 72], "35497": 27, "00000": 27, "473011": 27, "484": 27, "implement": [28, 29, 31, 34, 46, 49, 50, 52, 53, 73, 74, 75, 76, 110, 112, 114, 117], "remaind": [28, 29, 31, 34, 46, 73, 74, 75, 76, 110, 117], "preserv": [28, 29, 30, 31, 39, 45, 46, 54, 124, 125, 126, 127, 128, 129, 131, 132, 133], "73": [28, 79, 80], "254": [29, 119], "83598": 29, "564438232": 29, "363": 30, "624776611": 30, "362667": 30, "387": 30, "021": 31, "os_siz": [32, 78, 117], "consid": 32, "oml_ecommerc": [32, 78], "total_quant": [32, 57, 59, 60, 65, 77, 79, 80, 90, 95, 100, 105, 108, 109, 115], "customer_birth_d": [32, 34], "day_of_week": [32, 78], "taxful_total_pric": [32, 57, 59, 60, 65, 77, 79, 80, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115], "york": 32, "thursdai": [32, 78], "98": [32, 57, 59, 60, 65, 77, 79, 80, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115], "tax_amount": 32, "order_d": [32, 78], "2016": [32, 78], "cardin": [34, 153], "ignore_abov": 34, "256": [34, 131], "categori": [34, 37, 89], "currenc": [34, 37], "debug": 36, "compil": 36, "tail": [36, 153, 159], "12608": 36, "cyeg": 36, "120": 36, "12720": 36, "40": [36, 59, 60, 65, 115, 126, 127], "bhm": 36, "255": [36, 123, 129, 131], "12725": 36, "atl": 36, "12823": 36, "ngo": 36, "12907": 36, "lim": 36, "225": 36, "match_phras": [37, 89], "must_not_match": 37, "multi_match_typ": 37, "match_only_text_field": [37, 89], "fuzzi": [37, 89], "match": [37, 89, 143], "multi_match": 37, "within": [37, 38, 116, 147], "otherwis": [37, 44, 63, 106], "account": [37, 89, 119], "boolean": [37, 40, 89, 141], "NOT": 37, "aren": [37, 89], "properli": [37, 89], "men": [37, 89], "cloth": [37, 89], "eur": 37, "accessori": [37, 89], "shoe": [37, 89], "abd": 37, "4663": 37, "samir": 37, "4667": 37, "sultan": 37, "women": [37, 89], "2310": 37, "dsl": 38, "dictionari": [38, 150], "geo": 38, "distanc": 38, "_": 38, "geo_dist": 38, "1km": 38, "dubai": 38, "rabbia": 38, "al": 38, "robbi": 38, "nest": 38, "correct": 38, "q": [39, 91, 130], "comput": [39, 91, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 149, 150, 155], "361": 39, "040768": 39, "296587520": 39, "637076736": 39, "658119680": 39, "expr": 40, "guid": 40, "pandas_user_guid": 40, "2730": 40, "frac": [41, 104], "random_st": [41, 104], "randomli": 41, "fraction": 41, "cannot": 41, "seed": 41, "random": 41, "datetim": 42, "repres": [43, 44, 105, 106], "len": [43, 105], "updat": 43, "407": 45, "93951": 45, "20436e": 46, "1678": 46, "37035": 46, "xi": 47, "xianyang": 47, "zurich": 47, "ukrainka": 47, "air": [47, 117], "ministro": 47, "pistarini": 47, "washington": 47, "path_or_buf": 48, "sep": [48, 119], "na_rep": [48, 49, 52, 114], "float_format": [48, 49, 52, 114], "header": [48, 49, 52, 114, 119], "index_label": 48, "w": 48, "encod": [48, 119], "quot": [48, 119], "quotechar": [48, 119], "line_termin": 48, "chunksiz": [48, 119, 143], "tupleize_col": 48, "date_format": 48, "doublequot": [48, 119], "escapechar": [48, 119], "decim": [48, 49, 52, 119], "write": 48, "comma": [48, 119], "separ": [48, 119], "col_spac": [49, 52], "formatt": [49, 52], "sparsifi": [49, 52], "justifi": [49, 52], "max_row": [49, 52, 114], "show_dimens": [49, 52], "bold_row": 49, "escap": 49, "border": 49, "table_id": 49, "render_link": 49, "render": [49, 52, 114], "html": 49, "tabl": 49, "scenario": [49, 52, 114], "avoid": [49, 52, 114], "accident": [49, 52, 114], "dump": [49, 52, 114], "overridden": [49, 52, 114], "Not": [50, 53, 112], "represent": [50, 53, 112, 114], "bewar": [50, 53, 112], "pd_df": [50, 142, 143], "f": [50, 112, 143], "ntype": [50, 112], "show_progress": [51, 113, 142], "convert": [51, 119, 142, 143, 148], "line_width": 52, "consol": 52, "friendli": 52, "to_numpi": [53, 153, 159], "varianc": [54, 118, 133], "70964": [54, 118], "570234": 54, "111987": 54, "761279": 54, "76128": 54, "query_compil": [55, 120], "behaviour": 55, "slice": 55, "docvalu": 55, "discourag": 55, "load": [55, 138, 142, 145, 155], "case": 55, "advis": 55, "duplic": 55, "anoth": 55, "doc_valu": 55, "enabl": [55, 147, 150], "proxi": 56, "o": [56, 119, 143], "delet": [56, 119, 143, 155], "rebuilt": 56, "inconsist": 56, "wise": [57, 59, 60, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 115], "binari": [57, 59, 60, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 115, 155], "199": [57, 59, 60, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115], "174": [57, 59, 60, 65, 77, 79, 80, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 109, 115], "980000": [57, 77, 92, 101, 102, 108, 109], "200": [57, 89, 92], "979996": [57, 77, 92, 101, 102, 108, 109], "175": [57, 92], "81": [57, 92], "980003": [57, 77, 92, 101, 102, 108, 109], "201": 57, "82": 57, "customer_last_nam": 57, "eddieunderwood": 57, "marybailei": 57, "gwenbutl": 57, "dianechandl": 57, "eddieweb": 57, "truediv": [59, 60, 159], "99": [59, 60, 65, 115, 119], "989998": [59, 60, 115], "87": [59, 60, 65, 115], "489998": [59, 60, 115], "490002": [59, 60, 115], "draw": 67, "noqa": 67, "f401": 67, "alpha": 67, "densiti": 67, "booleanfilt": [69, 70, 71, 83, 84], "miss": [70, 71, 83, 84, 119, 143], "mask": [70, 71, 83, 84], "isna": [71, 159], "absolut": [72, 124, 127], "modulo": [77, 97], "959999": [79, 80], "107": [79, 80, 119], "399": [79, 80], "959991": [79, 80], "349": [79, 80], "161": [79, 80, 119], "960007": [79, 80], "mul": [80, 98, 99, 159], "notna": [84, 159], "uniqu": [85, 135, 136, 137, 138, 139, 140, 159], "queryfilt": 89, "221": [89, 124], "234": 89, "93": 89, "239": 89, "273": 89, "214": 89, "exponenti": [90, 100], "1367": 90, "520366": 90, "2913": 90, "840351": 90, "39991": 90, "998691": 90, "30617": 90, "998905": 90, "6557": 90, "760944": 90, "289159912": 91, "031627441": 91, "256136963": 91, "844534180": 91, "left": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "div": [93, 94, 103, 159], "027042": [93, 94, 103], "018525": [93, 94, 103], "005001": [93, 94, 103], "005715": [93, 94, 103], "012349": [93, 94, 103], "new_nam": 95, "symbol": 95, "floordiv": [96, 159], "500": [96, 97, 127], "mod": [97, 159], "260006": 97, "180004": 97, "040009": 97, "150": 97, "119980": 97, "369": [98, 99], "799995": [98, 99], "539": [98, 99], "1999": [98, 99], "799957": [98, 99], "1749": [98, 99], "809": [98, 99], "800034": [98, 99], "pow": [100, 159], "int_": 100, "subtract": [101, 102, 108, 159], "sub": [101, 102, 109, 159], "198": [101, 102], "173": [101, 102], "79": [101, 102], "197": [108, 109, 119], "172": [108, 109], "78": [108, 109, 119], "oml_seri": 112, "oml_": 112, "pd_": 112, "min_row": 114, "behavior": 116, "slightli": 116, "bucket": 117, "automat": 117, "descend": 117, "should": [117, 150], "overal": 117, "os_api_doc": 117, "3331": [117, 119], "3274": 117, "3234": 117, "3220": 117, "etl": [119, 142, 143, 154], "filepath_or_buff": 119, "os_if_exist": [119, 143], "os_refresh": [119, 143], "os_type_overrid": [119, 143], "delimit": 119, "usecol": 119, "prefix": 119, "true_valu": 119, "false_valu": 119, "skipinitialspac": 119, "skiprow": 119, "skipfoot": 119, "nrow": 119, "na_valu": 119, "keep_default_na": 119, "na_filt": 119, "skip_blank_lin": 119, "parse_d": 119, "infer_datetime_format": 119, "keep_date_col": 119, "date_pars": 119, "dayfirst": 119, "cache_d": 119, "thousand": 119, "linetermin": 119, "comment": 119, "dialect": 119, "warn_bad_lin": 119, "error_bad_lin": 119, "on_bad_lin": 119, "delim_whitespac": 119, "low_memori": 119, "memory_map": 119, "float_precis": 119, "modifi": [119, 143], "behav": [119, 143], "alreadi": [119, 143], "valueerror": [119, 143], "insert": [119, 143], "bulk": [119, 143], "es_typ": 119, "overrid": [119, 143], "read_csv": 119, "churn": 119, "osclient": 119, "phone": 119, "plan": 119, "voic": 119, "mail": 119, "vmail": 119, "dai": 119, "minut": 119, "charg": 119, "ev": 119, "night": 119, "intl": 119, "k": 119, "128": 119, "415": 119, "382": 119, "4657": 119, "ye": 119, "265": 119, "244": [119, 131], "91": 119, "oh": 119, "371": 119, "7191": 119, "123": 119, "195": [119, 124], "103": 119, "137": 119, "104": 119, "162": 119, "84": 119, "408": 119, "89": 119, "86": 119, "196": 119, "186": 119, "3328": 119, "192": [119, 124], "279": [119, 131], "3329": 119, "191": 119, "3330": 119, "510": 119, "184": 119, "139": 119, "3332": 119, "74": 119, "77": 119, "241": 119, "3333": 119, "took": 119, "timed_out": 119, "skip": [119, 146], "hit": 119, "relat": 119, "eq": 119, "max_scor": 119, "_score": 119, "retain": 119, "hold": 120, "au": [121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "294312": [121, 122, 128], "1197": [121, 122, 125], "632690": [121, 122, 125], "ca": [121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "557251": [121, 122, 128], "1198": [121, 122, 125], "852539": [121, 122, 125], "101": [121, 122, 128], "004005": [121, 122, 128], "742310": [121, 122, 125], "877190": [121, 122, 128], "621582": [121, 122, 125], "142": [121, 122, 128], "876465": [121, 122, 128], "855": [121, 122, 125], "935547": [121, 122, 125], "305": [123, 129], "377": [123, 129], "416": [123, 129], "944": [123, 129], "739": [123, 129], "1987": [123, 129], "283": [123, 129], "233": 124, "697174": 124, "189": 124, "250061": 124, "823669": 124, "202": 124, "539764": 124, "203": 124, "344696": 124, "206": 124, "431702": 124, "178": 124, "658447": 124, "863434": 124, "228": 124, "461365": 124, "162842": 124, "605": 126, "132970": 126, "152174": 126, "695652": 126, "891304443": 126, "674": 126, "827252": 126, "147541": 126, "744262": 126, "593442627": 126, "650530": 126, "175066": 126, "872679": 126, "469496094": 126, "669": 126, "558832": 126, "129808": 126, "843750": 126, "199519287": 126, "648": 126, "747109": 126, "134534": 126, "951271": 126, "165254150": 126, "662": 126, "994963": 126, "131258": 126, "832206": 126, "534506104": 126, "660": 126, "612988": 126, "149020": 126, "682353": 126, "447058838": 126, "485": 126, "253247": 126, "100000": 126, "900000": 126, "000000000": 126, "595": 126, "774391": 126, "125315": 126, "753900": 126, "456970215": 126, "053057": 126, "148410": 126, "766784": 126, "141342773": 126, "585": 127, "720490": 127, "678": 127, "447433": 127, "659": 127, "715592": 127, "689": 127, "241348": 127, "663": 127, "516057": 127, "670": 127, "714956": 127, "680": 127, "111084": 127, "441": 127, "681122": 127, "600": 127, "591525": 127, "633": 127, "935425": 127, "572": 130, "290384": 130, "578": 130, "140564": 130, "567": 130, "980560": 130, "582": 130, "618713": 130, "590": 130, "170986": 130, "811890": 130, "574": 130, "131340": 130, "852264": 130, "591": 130, "533699": 130, "877014": 130, "791": 130, "622625": 130, "793": 130, "362946": 130, "378523": 130, "766": 130, "855530": 130, "319": 130, "925979": 130, "325": 130, "704562": 130, "327": 130, "311007": 130, "336": 130, "839572": 130, "332": 130, "323011": 130, "314": 130, "472537": 130, "652659": 130, "298": 130, "483032": 130, "290205": 130, "024850": 130, "362137": 130, "568": 130, "323944": 130, "489746": 130, "523": 130, "890680": 130, "875500": 131, "367171": 131, "020634": 131, "903626": 131, "355811": 131, "949901": 131, "883342": 131, "381035": 131, "026411": 131, "585377": 131, "336902": 131, "961486": 131, "261": 131, "263054": 131, "341587": 131, "921980": 131, "259": 131, "696213": 131, "338140": 131, "964815": 131, "232": 131, "504297": 131, "357510": 131, "991340": 131, "267": 131, "827572": 131, "333333": 131, "191454": 131, "272": 131, "774819": 131, "331242": 131, "939469": 131, "505568": 131, "356766": 131, "948258": 131, "783612e": 132, "124": 132, "058223e": 132, "837": 132, "437872e": 132, "1083": 132, "785365e": 132, "1183": 132, "124173e": 132, "127": 132, "2786": 132, "899533e": 132, "97": 132, "2093": 132, "684563e": 132, "684": 132, "852532e": 132, "183804e": 132, "249": 132, "5472": 132, "819840e": 132, "783": 132, "75789": 133, "979090": 133, "130443": 133, "950549": 133, "59683": 133, "055316": 133, "125979": 133, "783429": 133, "65726": 133, "669676": 133, "144610": 133, "090013": 133, "65088": 133, "483446": 133, "113094": 133, "833562": 133, "68149": 133, "950516": 133, "116496": 133, "688139": 133, "67305": 133, "277617": 133, "114107": 133, "852666": 133, "53740": 133, "570338": 133, "127062": 133, "942132": 133, "61245": 133, "521047": 133, "094868": 133, "100420": 133, "74349": 133, "939410": 133, "109638": 133, "758700": 133, "62920": 133, "072901": 133, "126608": 133, "775609": 133, "self": [135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152], "_predict": 136, "nlp": [136, 140], "properti": 136, "_unload": 140, "break": 141, "filepath": 141, "expect": [141, 144, 146, 149, 150, 152], "serv": [141, 144], "framework": 141, "signific": 142, "signfic": 142, "stdout": 142, "10000": 142, "2020": 142, "572395": 142, "309031": 142, "pandas_to_opensearch": [142, 154], "os_verify_mapping_compat": 143, "thread_count": 143, "use_pandas_index_for_os_id": 143, "mainli": 143, "destin": 143, "refresh": 143, "field_nam": 143, "es_data_typ": 143, "verifi": 143, "schema": 143, "thread": 143, "destination_index": 143, "141": 143, "c": 143, "foo": 143, "20190102": 143, "h": 143, "if_exist": 143, "sync": 143, "readabl": 143, "__init__": [144, 158], "hug": [144, 146], "face": [144, 146], "design": 144, "query_df": 145, "model_nam": [146, 148, 152], "version_numb": 146, "all_config": 146, "768": 146, "synthet": [147, 150], "unzip": [147, 150], "empti": [147, 150, 153, 159], "up": [147, 150], "save_json_folder_path": 148, "open": [148, 152], "els": 148, "sample_model": 148, "save_pre_trained_model_json": 148, "default_folder_path": 148, "constructor": [148, 155], "compute_environ": [149, 150], "num_process": 149, "accler": 149, "local_machin": [149, 150], "learning_r": [150, 151], "2e": [150, 151], "fine": 150, "tune": 150, "pickl": 150, "probabl": 150, "passag": [150, 151], "q1": 150, "p1": 150, "pa1": 150, "launch": 150, "rate": [150, 151], "measur": 150, "multipli": [150, 159], "english": 150, "roughli": 150, "rtype": 150, "train_exampl": 151, "while": 151, "truncat": 151, "beyond": 151, "certain": 151, "max_length": 151, "middl": 151, "corpora": 151, "shorter": 151, "ndim": [153, 159], "sampl": [153, 159], "accur": 153, "hyperloglog": 153, "exact": 153, "idxmax": 153, "idxmin": 153, "os_match": [153, 159], "os_queri": 153, "to_csv": 153, "to_html": 153, "to_str": [153, 159], "to_panda": [153, 159], "page": 155, "overview": 155, "public": 155, "expos": 155, "namespac": 155, "applic": 155, "groupbi": 155, "window": 155, "reindex": 155, "manipul": 155, "serial": 155, "io": 155, "convers": 155, "flat": 155, "unload": 155, "step": 155, "load_sentence_transformer_exampl": 158, "set_up_accelerate_config": 158, "train_model": 158, "zip_model": 158, "divid": 159, "radd": 159, "rsub": 159, "rsubtract": 159, "rmul": 159, "rmultipli": 159, "rdiv": 159, "rdivid": 159, "rtruediv": 159, "rfloordiv": 159, "rmod": 159, "rpow": 159, "renam": 159, "isnul": 159, "notnul": 159}, "objects": {"": [[5, 0, 0, "-", "opensearch_py_ml"]], "opensearch_py_ml": [[6, 1, 1, "", "DataFrame"], [55, 1, 1, "", "Index"], [56, 1, 1, "", "Series"]], "opensearch_py_ml.DataFrame": [[7, 2, 1, "", "agg"], [8, 2, 1, "", "aggregate"], [9, 3, 1, "", "columns"], [10, 2, 1, "", "count"], [11, 2, 1, "", "describe"], [12, 2, 1, "", "drop"], [13, 3, 1, "", "dtypes"], [14, 3, 1, "", "empty"], [15, 2, 1, "", "filter"], [16, 2, 1, "", "get"], [17, 2, 1, "", "groupby"], [18, 2, 1, "", "head"], [19, 2, 1, "", "hist"], [20, 2, 1, "", "idxmax"], [21, 2, 1, "", "idxmin"], [22, 3, 1, "", "index"], [23, 2, 1, "", "info"], [24, 2, 1, "", "iterrows"], [25, 2, 1, "", "itertuples"], [26, 2, 1, "", "keys"], [27, 2, 1, "", "mad"], [28, 2, 1, "", "max"], [29, 2, 1, "", "mean"], [30, 2, 1, "", "median"], [31, 2, 1, "", "min"], [32, 2, 1, "", "mode"], [33, 3, 1, "", "ndim"], [34, 2, 1, "", "nunique"], [35, 3, 1, "", "os_dtypes"], [36, 2, 1, "", "os_info"], [37, 2, 1, "", "os_match"], [38, 2, 1, "", "os_query"], [39, 2, 1, "", "quantile"], [40, 2, 1, "", "query"], [41, 2, 1, "", "sample"], [42, 2, 1, "", "select_dtypes"], [43, 3, 1, "", "shape"], [44, 3, 1, "", "size"], [45, 2, 1, "", "std"], [46, 2, 1, "", "sum"], [47, 2, 1, "", "tail"], [48, 2, 1, "", "to_csv"], [49, 2, 1, "", "to_html"], [50, 2, 1, "", "to_numpy"], [51, 2, 1, "", "to_pandas"], [52, 2, 1, "", "to_string"], [53, 3, 1, "", "values"], [54, 2, 1, "", "var"]], "opensearch_py_ml.Series": [[57, 2, 1, "", "add"], [58, 2, 1, "", "describe"], [59, 2, 1, "", "div"], [60, 2, 1, "", "divide"], [61, 3, 1, "", "dtype"], [62, 3, 1, "", "dtypes"], [63, 3, 1, "", "empty"], [64, 2, 1, "", "filter"], [65, 2, 1, "", "floordiv"], [66, 2, 1, "", "head"], [67, 2, 1, "", "hist"], [68, 3, 1, "", "index"], [69, 2, 1, "", "isin"], [70, 2, 1, "", "isna"], [71, 2, 1, "", "isnull"], [72, 2, 1, "", "mad"], [73, 2, 1, "", "max"], [74, 2, 1, "", "mean"], [75, 2, 1, "", "median"], [76, 2, 1, "", "min"], [77, 2, 1, "", "mod"], [78, 2, 1, "", "mode"], [79, 2, 1, "", "mul"], [80, 2, 1, "", "multiply"], [81, 3, 1, "", "name"], [82, 3, 1, "", "ndim"], [83, 2, 1, "", "notna"], [84, 2, 1, "", "notnull"], [85, 2, 1, "", "nunique"], [86, 3, 1, "", "os_dtype"], [87, 3, 1, "", "os_dtypes"], [88, 2, 1, "", "os_info"], [89, 2, 1, "", "os_match"], [90, 2, 1, "", "pow"], [91, 2, 1, "", "quantile"], [92, 2, 1, "", "radd"], [93, 2, 1, "", "rdiv"], [94, 2, 1, "", "rdivide"], [95, 2, 1, "", "rename"], [96, 2, 1, "", "rfloordiv"], [97, 2, 1, "", "rmod"], [98, 2, 1, "", "rmul"], [99, 2, 1, "", "rmultiply"], [100, 2, 1, "", "rpow"], [101, 2, 1, "", "rsub"], [102, 2, 1, "", "rsubtract"], [103, 2, 1, "", "rtruediv"], [104, 2, 1, "", "sample"], [105, 3, 1, "", "shape"], [106, 3, 1, "", "size"], [107, 2, 1, "", "std"], [108, 2, 1, "", "sub"], [109, 2, 1, "", "subtract"], [110, 2, 1, "", "sum"], [111, 2, 1, "", "tail"], [112, 2, 1, "", "to_numpy"], [113, 2, 1, "", "to_pandas"], [114, 2, 1, "", "to_string"], [115, 2, 1, "", "truediv"], [116, 2, 1, "", "unique"], [117, 2, 1, "", "value_counts"], [118, 2, 1, "", "var"]], "opensearch_py_ml.etl": [[119, 4, 1, "", "csv_to_opensearch"], [142, 2, 1, "", "opensearch_to_pandas"], [143, 2, 1, "", "pandas_to_opensearch"]], "opensearch_py_ml.groupby": [[120, 1, 1, "", "DataFrameGroupBy"]], "opensearch_py_ml.groupby.DataFrameGroupBy": [[121, 2, 1, "", "agg"], [122, 2, 1, "", "aggregate"], [123, 2, 1, "", "count"], [124, 2, 1, "", "mad"], [125, 2, 1, "", "max"], [126, 2, 1, "", "mean"], [127, 2, 1, "", "median"], [128, 2, 1, "", "min"], [129, 2, 1, "", "nunique"], [130, 2, 1, "", "quantile"], [131, 2, 1, "", "std"], [132, 2, 1, "", "sum"], [133, 2, 1, "", "var"]], "opensearch_py_ml.ml_commons.MLCommonClient": [[135, 4, 1, "", "delete_model"], [136, 4, 1, "", "generate_embedding"], [137, 4, 1, "", "get_model_info"], [138, 4, 1, "", "get_task_info"], [139, 4, 1, "", "load_model"], [140, 4, 1, "", "unload_model"], [141, 4, 1, "", "upload_model"]], "opensearch_py_ml.ml_models.SentenceTransformerModel": [[144, 4, 1, "", "__init__"], [145, 4, 1, "", "load_sentence_transformer_example"], [146, 4, 1, "", "make_model_config_json"], [147, 4, 1, "", "read_queries"], [148, 4, 1, "", "save_as_pt"], [149, 4, 1, "", "set_up_accelerate_config"], [150, 4, 1, "", "train"], [151, 4, 1, "", "train_model"], [152, 4, 1, "", "zip_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"demo": [0, 1, 2], "notebook": [0, 1, 2], "mlcommon": [0, 157], "integr": 0, "step": [0, 1, 2, 4, 158], "0": [0, 1, 4], "import": [0, 1, 2, 4], "packag": [0, 2], "set": [0, 2], "up": [0, 2], "client": [0, 1, 2, 4], "1": [0, 1, 2, 4], "upload": [0, 2, 141, 157], "nlp": 0, "model": [0, 2, 135, 137, 139, 140, 141, 157, 158], "from": 0, "local": 0, "file": [0, 156], "opensearch": [0, 1, 2, 5, 153, 154, 159], "cluster": [0, 2], "2": [0, 2], "load": [0, 2, 139, 157], "3": [0, 2], "get": [0, 1, 4, 5, 16, 137, 138, 157], "task": [0, 138, 157], "4": [0, 2], "5": [0, 2], "gener": [0, 2, 136, 154], "sentenc": [0, 2, 144, 158], "embed": [0, 136], "6": [0, 2], "unload": [0, 140, 157], "7": 0, "delet": [0, 135, 157], "datafram": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 153], "setup": [1, 4], "compar": 1, "similar": 1, "differ": 1, "between": 1, "panda": [1, 2, 154], "v": 1, "opensearch_py_ml": [1, 55], "attribut": [1, 153, 159], "underli": [1, 153, 159], "data": [1, 2, 4, 153, 159], "column": [1, 4, 9], "dtype": [1, 13, 61, 62], "select_dtyp": [1, 42], "empti": [1, 14, 63], "shape": [1, 43, 105], "index": [1, 4, 22, 55, 68, 153, 159], "valu": [1, 53], "iter": [1, 153, 159], "head": [1, 4, 18, 66], "tail": [1, 4, 47, 111], "kei": [1, 26], "queri": [1, 2, 40], "boolean": [1, 4], "function": [1, 2, 153, 154, 159], "applic": [1, 153], "groupbi": [1, 17, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 153], "window": [1, 153], "agg": [1, 7, 121], "comput": [1, 153, 159], "descript": [1, 4, 153, 159], "stat": [1, 153, 159], "count": [1, 10, 123], "describ": [1, 11, 58], "info": [1, 23, 137, 138, 157], "max": [1, 28, 73, 125], "min": [1, 31, 76, 128], "mean": [1, 29, 74, 126], "sum": [1, 46, 110, 132], "nuniqu": [1, 34, 85, 129], "drop": [1, 12], "plot": [1, 153, 159], "util": [1, 154], "transform": [2, 144, 158], "train": [2, 150, 158], "save": 2, "introduct": 2, "passag": 2, "retriev": 2, "synthet": 2, "bert": 2, "defin": 2, "helper": 2, "convert": 2, "list": 2, "string": 2, "instanti": 2, "an": 2, "object": 2, "class": 2, "synthetic_query_gener": 2, "thi": 2, "i": 2, "how": 2, "sampl": [2, 41, 104], "look": 2, "like": 2, "read": 2, "fine": 2, "tune": 2, "hug": 2, "face": 2, "option": [2, 158], "exampl": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 50, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "onlin": 4, "retail": 4, "analysi": 4, "start": [4, 5], "select": [4, 153, 159], "aggreg": [4, 8, 122], "statist": 4, "arithmet": 4, "oper": [4, 159], "py": 5, "ml": 5, "machin": 5, "learn": 5, "back": 5, "instal": 5, "paramet": [6, 7, 8, 12, 15, 16, 17, 18, 20, 21, 24, 25, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 45, 46, 47, 54, 56, 57, 59, 60, 64, 65, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 115, 117, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 150], "see": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 61, 62, 64, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 91, 95, 106, 107, 110, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "also": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 61, 62, 64, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 91, 95, 106, 107, 110, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 54, 57, 58, 59, 60, 62, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 150], "filter": [15, 64], "note": [15, 19, 23, 43, 56, 64, 67, 105, 119], "hist": [19, 67], "idxmax": 20, "idxmin": 21, "iterrow": 24, "yield": 24, "itertupl": 25, "mad": [27, 72, 124], "median": [30, 75, 127], "mode": [32, 78], "ndim": [33, 82], "os_dtyp": [35, 86, 87], "os_info": [36, 88], "os_match": [37, 89], "os_queri": 38, "quantil": [39, 91, 130], "size": [44, 106], "std": [45, 107, 131], "to_csv": 48, "to_html": 49, "to_numpi": [50, 112], "to_panda": [51, 113], "to_str": [52, 114], "var": [54, 118, 133], "seri": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 159], "add": 57, "div": 59, "divid": 60, "floordiv": 65, "isin": 69, "isna": 70, "isnul": 71, "mod": 77, "mul": 79, "multipli": 80, "name": 81, "notna": 83, "notnul": 84, "pow": 90, "radd": 92, "rdiv": 93, "rdivid": 94, "renam": 95, "rfloordiv": 96, "rmod": 97, "rmul": 98, "rmultipli": 99, "rpow": 100, "rsub": 101, "rsubtract": 102, "rtruediv": 103, "sub": 108, "subtract": 109, "truediv": 115, "uniqu": 116, "value_count": 117, "csv_to_opensearch": 119, "other": 119, "dataframegroupbi": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "opensearch_to_panda": 142, "pandas_to_opensearch": 143, "sentencetransformermodel": [145, 146, 147, 148, 149, 150, 151, 152], "load_sentence_transformer_exampl": 145, "make_model_config_json": 146, "read_queri": 147, "save_as_pt": 148, "set_up_accelerate_config": 149, "train_model": 151, "zip_model": 152, "constructor": [153, 158, 159], "reindex": [153, 159], "label": [153, 159], "manipul": [153, 159], "serial": [153, 159], "io": [153, 159], "convers": [153, 159], "api": 155, "refer": 155, "input": 156, "output": 156, "flat": 156, "support": 157, "export": 158, "config": 158, "binari": 159}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Demo Notebook for MLCommons Integration": [[0, "Demo-Notebook-for-MLCommons-Integration"]], "Step 0: Import packages and set up client": [[0, "Step-0:-Import-packages-and-set-up-client"]], "Step 1: Upload NLP model from local file to Opensearch cluster": [[0, "Step-1:-Upload-NLP-model-from-local-file-to-Opensearch-cluster"]], "Step 2: Load Model": [[0, "Step-2:-Load-Model"]], "Step 3: Get Task": [[0, "Step-3:-Get-Task"]], "Step 4: Get Model": [[0, "Step-4:-Get-Model"]], "Step 5: Generate Sentence Embedding": [[0, "Step-5:-Generate-Sentence-Embedding"]], "Step 6: Unload Model": [[0, "Step-6:-Unload-Model"]], "Step 7: Delete Model": [[0, "Step-7:-Delete-Model"]], "Demo Notebook for Dataframe": [[1, "Demo-Notebook-for-Dataframe"]], "Step 0: Imports": [[1, "Step-0:-Imports"], [4, "Step-0:-Imports"]], "Step 1: Setup clients": [[1, "Step-1:-Setup-clients"], [4, "Step-1:-Setup-clients"]], "Comparing similarities and differences between panda dataframe vs opensearch_py_ml dataframe": [[1, "Comparing-similarities-and-differences-between-panda-dataframe-vs-opensearch_py_ml-dataframe"]], "Attributes and underlying data": [[1, "Attributes-and-underlying-data"]], "DataFrame.columns": [[1, "DataFrame.columns"], [9, "dataframe-columns"]], "DataFrame.dtypes": [[1, "DataFrame.dtypes"], [13, "dataframe-dtypes"]], "DataFrame.select_dtypes": [[1, "DataFrame.select_dtypes"], [42, "dataframe-select-dtypes"]], "DataFrame.empty": [[1, "DataFrame.empty"], [14, "dataframe-empty"]], "DataFrame.shape": [[1, "DataFrame.shape"], [43, "dataframe-shape"]], "DataFrame.index": [[1, "DataFrame.index"], [22, "dataframe-index"]], "DataFrame.values": [[1, "DataFrame.values"], [53, "dataframe-values"]], "Indexing, iteration": [[1, "Indexing,-iteration"]], "DataFrame.head": [[1, "DataFrame.head"], [18, "dataframe-head"]], "DataFrame.tail": [[1, "DataFrame.tail"], [47, "dataframe-tail"]], "DataFrame.keys": [[1, "DataFrame.keys"], [26, "dataframe-keys"]], "DataFrame.get": [[1, "DataFrame.get"], [16, "dataframe-get"]], "DataFrame.query": [[1, "DataFrame.query"], [40, "dataframe-query"]], "Boolean indexing query": [[1, "Boolean-indexing-query"]], "Function application, GroupBy & window": [[1, "Function-application,-GroupBy-&-window"]], "DataFrame.aggs": [[1, "DataFrame.aggs"]], "Computations / descriptive stats": [[1, "Computations-/-descriptive-stats"]], "DataFrame.count": [[1, "DataFrame.count"], [10, "dataframe-count"]], "DataFrame.describe": [[1, "DataFrame.describe"], [11, "dataframe-describe"]], "DataFrame.info": [[1, "DataFrame.info"], [23, "dataframe-info"]], "DataFrame.max, DataFrame.min, DataFrame.mean, DataFrame.sum": [[1, "DataFrame.max,-DataFrame.min,-DataFrame.mean,-DataFrame.sum"]], "max": [[1, "max"]], "min": [[1, "min"]], "mean": [[1, "mean"]], "sum": [[1, "sum"]], "DataFrame.nunique": [[1, "DataFrame.nunique"], [34, "dataframe-nunique"]], "DataFrame.drop": [[1, "DataFrame.drop"], [12, "dataframe-drop"]], "Plotting": [[1, "Plotting"], [153, "plotting"], [159, "plotting"]], "Opensearch utilities": [[1, "Opensearch-utilities"]], "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch": [[2, "Demo-Notebook-for-Sentence-Transformer-Model-Training,-Saving-and-Uploading-to-OpenSearch"]], "Introduction": [[2, "Introduction"]], "Passage retrieval": [[2, "Passage-retrieval"]], "Synthetic query generation": [[2, "Synthetic-query-generation"]], "Train BERT Model with synthetic query data": [[2, "Train-BERT-Model-with-synthetic-query-data"]], "Step 1: Import packages, set up client and define helper functions": [[2, "Step-1:-Import-packages,-set-up-client-and-define-helper-functions"]], "Step 2: Import the data/passages for synthetic query generation": [[2, "Step-2:-Import-the-data/passages-for-synthetic-query-generation"]], "2.1) Load the data and convert into a pandas dataframe": [[2, "2.1)-Load-the-data-and-convert-into-a-pandas-dataframe"]], "2.2) Convert the data into a list of strings and instantiate an object of the class Synthetic_Query_Generation": [[2, "2.2)-Convert-the-data-into-a-list-of-strings-and-instantiate-an-object-of-the-class-Synthetic_Query_Generation"]], "Step 3: Generate synthetic queries": [[2, "Step-3:-Generate-synthetic-queries"]], "This is how the sample queries look like,": [[2, "This-is-how-the-sample-queries-look-like,"]], "Step 4: Read synthetic queries and train/fine-tune a hugging face sentence transformer model on synthetic data": [[2, "Step-4:-Read-synthetic-queries-and-train/fine-tune-a-hugging-face-sentence-transformer-model-on-synthetic-data"]], "Step 5: (Optional) Save model": [[2, "Step-5:-(Optional)-Save-model"]], "Step 6: Upload the model to OpenSearch cluster": [[2, "Step-6:-Upload-the-model-to-OpenSearch-cluster"]], "Examples": [[3, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [42, "examples"], [43, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [50, "examples"], [54, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [62, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [85, "examples"], [87, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [105, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [115, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [142, "examples"], [143, "examples"]], "Online Retail analysis": [[4, "Online-Retail-analysis"]], "Getting Started": [[4, "Getting-Started"], [5, "getting-started"]], "Selecting and Indexing Data": [[4, "Selecting-and-Indexing-Data"]], "head and tail": [[4, "head-and-tail"]], "Selecting columns": [[4, "Selecting-columns"]], "Boolean Indexing": [[4, "Boolean-Indexing"]], "Aggregation and Descriptive Statistics": [[4, "Aggregation-and-Descriptive-Statistics"]], "Arithmetic Operations": [[4, "Arithmetic-Operations"]], "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch": [[5, "opensearch-py-ml-dataframes-and-machine-learning-backed-by-opensearch"]], "Installing Opensearch-py-ml": [[5, "installing-opensearch-py-ml"]], "DataFrame": [[6, "dataframe"], [153, "dataframe"]], "Parameters": [[6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [20, "parameters"], [21, "parameters"], [24, "parameters"], [25, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [54, "parameters"], [56, "parameters"], [57, "parameters"], [59, "parameters"], [60, "parameters"], [64, "parameters"], [65, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [108, "parameters"], [109, "parameters"], [115, "parameters"], [117, "parameters"], [119, "parameters"], [121, "parameters"], [122, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [142, "parameters"], [143, "parameters"], [150, "parameters"]], "See Also": [[6, "see-also"], [7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [18, "see-also"], [20, "see-also"], [21, "see-also"], [22, "see-also"], [24, "see-also"], [25, "see-also"], [27, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [34, "see-also"], [39, "see-also"], [40, "see-also"], [41, "see-also"], [44, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [50, "see-also"], [52, "see-also"], [53, "see-also"], [54, "see-also"], [56, "see-also"], [58, "see-also"], [61, "see-also"], [62, "see-also"], [64, "see-also"], [68, "see-also"], [70, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [78, "see-also"], [82, "see-also"], [83, "see-also"], [84, "see-also"], [85, "see-also"], [91, "see-also"], [95, "see-also"], [106, "see-also"], [107, "see-also"], [110, "see-also"], [112, "see-also"], [114, "see-also"], [116, "see-also"], [117, "see-also"], [118, "see-also"], [119, "see-also"], [121, "see-also"], [122, "see-also"], [123, "see-also"], [124, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"], [131, "see-also"], [132, "see-also"], [133, "see-also"], [142, "see-also"], [143, "see-also"]], "DataFrame.agg": [[7, "dataframe-agg"]], "Returns": [[7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [51, "returns"], [54, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [80, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [142, "returns"], [143, "returns"], [150, "returns"]], "DataFrame.aggregate": [[8, "dataframe-aggregate"]], "DataFrame.filter": [[15, "dataframe-filter"]], "Notes": [[15, "notes"], [19, "notes"], [23, "notes"], [43, "notes"], [56, "notes"], [64, "notes"], [67, "notes"], [105, "notes"], [119, "notes"]], "DataFrame.groupby": [[17, "dataframe-groupby"]], "DataFrame.hist": [[19, "dataframe-hist"]], "DataFrame.idxmax": [[20, "dataframe-idxmax"]], "DataFrame.idxmin": [[21, "dataframe-idxmin"]], "DataFrame.iterrows": [[24, "dataframe-iterrows"]], "Yields": [[24, "yields"]], "DataFrame.itertuples": [[25, "dataframe-itertuples"]], "DataFrame.mad": [[27, "dataframe-mad"]], "DataFrame.max": [[28, "dataframe-max"]], "DataFrame.mean": [[29, "dataframe-mean"]], "DataFrame.median": [[30, "dataframe-median"]], "DataFrame.min": [[31, "dataframe-min"]], "DataFrame.mode": [[32, "dataframe-mode"]], "DataFrame.ndim": [[33, "dataframe-ndim"]], "DataFrame.os_dtypes": [[35, "dataframe-os-dtypes"]], "DataFrame.os_info": [[36, "dataframe-os-info"]], "DataFrame.os_match": [[37, "dataframe-os-match"]], "DataFrame.os_query": [[38, "dataframe-os-query"]], "DataFrame.quantile": [[39, "dataframe-quantile"]], "DataFrame.sample": [[41, "dataframe-sample"]], "DataFrame.size": [[44, "dataframe-size"]], "DataFrame.std": [[45, "dataframe-std"]], "DataFrame.sum": [[46, "dataframe-sum"]], "DataFrame.to_csv": [[48, "dataframe-to-csv"]], "DataFrame.to_html": [[49, "dataframe-to-html"]], "DataFrame.to_numpy": [[50, "dataframe-to-numpy"]], "DataFrame.to_pandas": [[51, "dataframe-to-pandas"]], "DataFrame.to_string": [[52, "dataframe-to-string"]], "DataFrame.var": [[54, "dataframe-var"]], "opensearch_py_ml.Index": [[55, "opensearch-py-ml-index"]], "Series": [[56, "series"], [159, "series"]], "Series.add": [[57, "series-add"]], "Series.describe": [[58, "series-describe"]], "Series.div": [[59, "series-div"]], "Series.divide": [[60, "series-divide"]], "Series.dtype": [[61, "series-dtype"]], "Series.dtypes": [[62, "series-dtypes"]], "Series.empty": [[63, "series-empty"]], "Series.filter": [[64, "series-filter"]], "Series.floordiv": [[65, "series-floordiv"]], "Series.head": [[66, "series-head"]], "Series.hist": [[67, "series-hist"]], "Series.index": [[68, "series-index"]], "Series.isin": [[69, "series-isin"]], "Series.isna": [[70, "series-isna"]], "Series.isnull": [[71, "series-isnull"]], "Series.mad": [[72, "series-mad"]], "Series.max": [[73, "series-max"]], "Series.mean": [[74, "series-mean"]], "Series.median": [[75, "series-median"]], "Series.min": [[76, "series-min"]], "Series.mod": [[77, "series-mod"]], "Series.mode": [[78, "series-mode"]], "Series.mul": [[79, "series-mul"]], "Series.multiply": [[80, "series-multiply"]], "Series.name": [[81, "series-name"]], "Series.ndim": [[82, "series-ndim"]], "Series.notna": [[83, "series-notna"]], "Series.notnull": [[84, "series-notnull"]], "Series.nunique": [[85, "series-nunique"]], "Series.os_dtype": [[86, "series-os-dtype"]], "Series.os_dtypes": [[87, "series-os-dtypes"]], "Series.os_info": [[88, "series-os-info"]], "Series.os_match": [[89, "series-os-match"]], "Series.pow": [[90, "series-pow"]], "Series.quantile": [[91, "series-quantile"]], "Series.radd": [[92, "series-radd"]], "Series.rdiv": [[93, "series-rdiv"]], "Series.rdivide": [[94, "series-rdivide"]], "Series.rename": [[95, "series-rename"]], "Series.rfloordiv": [[96, "series-rfloordiv"]], "Series.rmod": [[97, "series-rmod"]], "Series.rmul": [[98, "series-rmul"]], "Series.rmultiply": [[99, "series-rmultiply"]], "Series.rpow": [[100, "series-rpow"]], "Series.rsub": [[101, "series-rsub"]], "Series.rsubtract": [[102, "series-rsubtract"]], "Series.rtruediv": [[103, "series-rtruediv"]], "Series.sample": [[104, "series-sample"]], "Series.shape": [[105, "series-shape"]], "Series.size": [[106, "series-size"]], "Series.std": [[107, "series-std"]], "Series.sub": [[108, "series-sub"]], "Series.subtract": [[109, "series-subtract"]], "Series.sum": [[110, "series-sum"]], "Series.tail": [[111, "series-tail"]], "Series.to_numpy": [[112, "series-to-numpy"]], "Series.to_pandas": [[113, "series-to-pandas"]], "Series.to_string": [[114, "series-to-string"]], "Series.truediv": [[115, "series-truediv"]], "Series.unique": [[116, "series-unique"]], "Series.value_counts": [[117, "series-value-counts"]], "Series.var": [[118, "series-var"]], "csv_to_opensearch": [[119, "csv-to-opensearch"]], "Other Parameters": [[119, "other-parameters"]], "groupby.DataFrameGroupBy": [[120, "groupby-dataframegroupby"]], "groupby.DataFrameGroupBy.agg": [[121, "groupby-dataframegroupby-agg"]], "groupby.DataFrameGroupBy.aggregate": [[122, "groupby-dataframegroupby-aggregate"]], "groupby.DataFrameGroupBy.count": [[123, "groupby-dataframegroupby-count"]], "groupby.DataFrameGroupBy.mad": [[124, "groupby-dataframegroupby-mad"]], "groupby.DataFrameGroupBy.max": [[125, "groupby-dataframegroupby-max"]], "groupby.DataFrameGroupBy.mean": [[126, "groupby-dataframegroupby-mean"]], "groupby.DataFrameGroupBy.median": [[127, "groupby-dataframegroupby-median"]], "groupby.DataFrameGroupBy.min": [[128, "groupby-dataframegroupby-min"]], "groupby.DataFrameGroupBy.nunique": [[129, "groupby-dataframegroupby-nunique"]], "groupby.DataFrameGroupBy.quantile": [[130, "groupby-dataframegroupby-quantile"]], "groupby.DataFrameGroupBy.std": [[131, "groupby-dataframegroupby-std"]], "groupby.DataFrameGroupBy.sum": [[132, "groupby-dataframegroupby-sum"]], "groupby.DataFrameGroupBy.var": [[133, "groupby-dataframegroupby-var"]], "groupby.GroupBy": [[134, "groupby-groupby"]], "Delete Model": [[135, "delete-model"], [157, "delete-model"]], "Generate Embedding": [[136, "generate-embedding"]], "Get Model Info": [[137, "get-model-info"], [157, "get-model-info"]], "Get Task Info": [[138, "get-task-info"], [157, "get-task-info"]], "Load Model": [[139, "load-model"], [157, "load-model"]], "Unload Model": [[140, "unload-model"], [157, "unload-model"]], "Upload Model": [[141, "upload-model"], [157, "upload-model"]], "opensearch_to_pandas": [[142, "opensearch-to-pandas"]], "pandas_to_opensearch": [[143, "pandas-to-opensearch"]], "Sentence Transformer": [[144, "sentence-transformer"], [158, "sentence-transformer"]], "SentenceTransformerModel.load_sentence_transformer_example": [[145, "sentencetransformermodel-load-sentence-transformer-example"]], "SentenceTransformerModel.make_model_config_json": [[146, "sentencetransformermodel-make-model-config-json"]], "SentenceTransformerModel.read_queries": [[147, "sentencetransformermodel-read-queries"]], "SentenceTransformerModel.save_as_pt": [[148, "sentencetransformermodel-save-as-pt"]], "SentenceTransformerModel.set_up_accelerate_config": [[149, "sentencetransformermodel-set-up-accelerate-config"]], "SentenceTransformerModel.train": [[150, "sentencetransformermodel-train"]], "SentenceTransformerModel.train_model": [[151, "sentencetransformermodel-train-model"]], "SentenceTransformerModel.zip_model": [[152, "sentencetransformermodel-zip-model"]], "Constructor": [[153, "constructor"], [158, "constructor"], [159, "constructor"]], "Attributes and Underlying Data": [[153, "attributes-and-underlying-data"], [159, "attributes-and-underlying-data"]], "Indexing, Iteration": [[153, "indexing-iteration"], [159, "indexing-iteration"]], "Function Application, GroupBy & Window": [[153, "function-application-groupby-window"]], "Computations / Descriptive Stats": [[153, "computations-descriptive-stats"], [159, "computations-descriptive-stats"]], "Reindexing / Selection / Label Manipulation": [[153, "reindexing-selection-label-manipulation"], [159, "reindexing-selection-label-manipulation"]], "Opensearch Functions": [[153, "opensearch-functions"], [159, "opensearch-functions"]], "Serialization / IO / Conversion": [[153, "serialization-io-conversion"], [159, "serialization-io-conversion"]], "General Utility Functions": [[154, "general-utility-functions"]], "Pandas and Opensearch": [[154, "pandas-and-opensearch"]], "API Reference": [[155, "api-reference"]], "Input/Output": [[156, "input-output"]], "Flat File": [[156, "flat-file"]], "MLCommons Support": [[157, "mlcommons-support"]], "Train Model": [[158, "train-model"]], "(Optional) Step by Step Train Model": [[158, "optional-step-by-step-train-model"]], "Export Model": [[158, "export-model"]], "Config Model": [[158, "config-model"]], "Binary Operator Functions": [[159, "binary-operator-functions"]]}, "indexentries": {"module": [[5, "module-opensearch_py_ml"]], "opensearch_py_ml": [[5, "module-opensearch_py_ml"]], "dataframe (class in opensearch_py_ml)": [[6, "opensearch_py_ml.DataFrame"]], "agg() (opensearch_py_ml.dataframe method)": [[7, "opensearch_py_ml.DataFrame.agg"]], "aggregate() (opensearch_py_ml.dataframe method)": [[8, "opensearch_py_ml.DataFrame.aggregate"]], "columns (opensearch_py_ml.dataframe attribute)": [[9, "opensearch_py_ml.DataFrame.columns"]], "count() (opensearch_py_ml.dataframe method)": [[10, "opensearch_py_ml.DataFrame.count"]], "describe() (opensearch_py_ml.dataframe method)": [[11, "opensearch_py_ml.DataFrame.describe"]], "drop() (opensearch_py_ml.dataframe method)": [[12, "opensearch_py_ml.DataFrame.drop"]], "dtypes (opensearch_py_ml.dataframe attribute)": [[13, "opensearch_py_ml.DataFrame.dtypes"]], "empty (opensearch_py_ml.dataframe attribute)": [[14, "opensearch_py_ml.DataFrame.empty"]], "filter() (opensearch_py_ml.dataframe method)": [[15, "opensearch_py_ml.DataFrame.filter"]], "get() (opensearch_py_ml.dataframe method)": [[16, "opensearch_py_ml.DataFrame.get"]], "groupby() (opensearch_py_ml.dataframe method)": [[17, "opensearch_py_ml.DataFrame.groupby"]], "head() (opensearch_py_ml.dataframe method)": [[18, "opensearch_py_ml.DataFrame.head"]], "hist() (opensearch_py_ml.dataframe method)": [[19, "opensearch_py_ml.DataFrame.hist"]], "idxmax() (opensearch_py_ml.dataframe method)": [[20, "opensearch_py_ml.DataFrame.idxmax"]], "idxmin() (opensearch_py_ml.dataframe method)": [[21, "opensearch_py_ml.DataFrame.idxmin"]], "index (opensearch_py_ml.dataframe attribute)": [[22, "opensearch_py_ml.DataFrame.index"]], "info() (opensearch_py_ml.dataframe method)": [[23, "opensearch_py_ml.DataFrame.info"]], "iterrows() (opensearch_py_ml.dataframe method)": [[24, "opensearch_py_ml.DataFrame.iterrows"]], "itertuples() (opensearch_py_ml.dataframe method)": [[25, "opensearch_py_ml.DataFrame.itertuples"]], "keys() (opensearch_py_ml.dataframe method)": [[26, "opensearch_py_ml.DataFrame.keys"]], "mad() (opensearch_py_ml.dataframe method)": [[27, "opensearch_py_ml.DataFrame.mad"]], "max() (opensearch_py_ml.dataframe method)": [[28, "opensearch_py_ml.DataFrame.max"]], "mean() (opensearch_py_ml.dataframe method)": [[29, "opensearch_py_ml.DataFrame.mean"]], "median() (opensearch_py_ml.dataframe method)": [[30, "opensearch_py_ml.DataFrame.median"]], "min() (opensearch_py_ml.dataframe method)": [[31, "opensearch_py_ml.DataFrame.min"]], "mode() (opensearch_py_ml.dataframe method)": [[32, "opensearch_py_ml.DataFrame.mode"]], "ndim (opensearch_py_ml.dataframe attribute)": [[33, "opensearch_py_ml.DataFrame.ndim"]], "nunique() (opensearch_py_ml.dataframe method)": [[34, "opensearch_py_ml.DataFrame.nunique"]], "os_dtypes (opensearch_py_ml.dataframe attribute)": [[35, "opensearch_py_ml.DataFrame.os_dtypes"]], "os_info() (opensearch_py_ml.dataframe method)": [[36, "opensearch_py_ml.DataFrame.os_info"]], "os_match() (opensearch_py_ml.dataframe method)": [[37, "opensearch_py_ml.DataFrame.os_match"]], "os_query() (opensearch_py_ml.dataframe method)": [[38, "opensearch_py_ml.DataFrame.os_query"]], "quantile() (opensearch_py_ml.dataframe method)": [[39, "opensearch_py_ml.DataFrame.quantile"]], "query() (opensearch_py_ml.dataframe method)": [[40, "opensearch_py_ml.DataFrame.query"]], "sample() (opensearch_py_ml.dataframe method)": [[41, "opensearch_py_ml.DataFrame.sample"]], "select_dtypes() (opensearch_py_ml.dataframe method)": [[42, "opensearch_py_ml.DataFrame.select_dtypes"]], "shape (opensearch_py_ml.dataframe attribute)": [[43, "opensearch_py_ml.DataFrame.shape"]], "size (opensearch_py_ml.dataframe attribute)": [[44, "opensearch_py_ml.DataFrame.size"]], "std() (opensearch_py_ml.dataframe method)": [[45, "opensearch_py_ml.DataFrame.std"]], "sum() (opensearch_py_ml.dataframe method)": [[46, "opensearch_py_ml.DataFrame.sum"]], "tail() (opensearch_py_ml.dataframe method)": [[47, "opensearch_py_ml.DataFrame.tail"]], "to_csv() (opensearch_py_ml.dataframe method)": [[48, "opensearch_py_ml.DataFrame.to_csv"]], "to_html() (opensearch_py_ml.dataframe method)": [[49, "opensearch_py_ml.DataFrame.to_html"]], "to_numpy() (opensearch_py_ml.dataframe method)": [[50, "opensearch_py_ml.DataFrame.to_numpy"]], "to_pandas() (opensearch_py_ml.dataframe method)": [[51, "opensearch_py_ml.DataFrame.to_pandas"]], "to_string() (opensearch_py_ml.dataframe method)": [[52, "opensearch_py_ml.DataFrame.to_string"]], "values (opensearch_py_ml.dataframe attribute)": [[53, "opensearch_py_ml.DataFrame.values"]], "var() (opensearch_py_ml.dataframe method)": [[54, "opensearch_py_ml.DataFrame.var"]], "index (class in opensearch_py_ml)": [[55, "opensearch_py_ml.Index"]], "series (class in opensearch_py_ml)": [[56, "opensearch_py_ml.Series"]], "add() (opensearch_py_ml.series method)": [[57, "opensearch_py_ml.Series.add"]], "describe() (opensearch_py_ml.series method)": [[58, "opensearch_py_ml.Series.describe"]], "div() (opensearch_py_ml.series method)": [[59, "opensearch_py_ml.Series.div"]], "divide() (opensearch_py_ml.series method)": [[60, "opensearch_py_ml.Series.divide"]], "dtype (opensearch_py_ml.series attribute)": [[61, "opensearch_py_ml.Series.dtype"]], "dtypes (opensearch_py_ml.series attribute)": [[62, "opensearch_py_ml.Series.dtypes"]], "empty (opensearch_py_ml.series attribute)": [[63, "opensearch_py_ml.Series.empty"]], "filter() (opensearch_py_ml.series method)": [[64, "opensearch_py_ml.Series.filter"]], "floordiv() (opensearch_py_ml.series method)": [[65, "opensearch_py_ml.Series.floordiv"]], "head() (opensearch_py_ml.series method)": [[66, "opensearch_py_ml.Series.head"]], "hist() (opensearch_py_ml.series method)": [[67, "opensearch_py_ml.Series.hist"]], "index (opensearch_py_ml.series attribute)": [[68, "opensearch_py_ml.Series.index"]], "isin() (opensearch_py_ml.series method)": [[69, "opensearch_py_ml.Series.isin"]], "isna() (opensearch_py_ml.series method)": [[70, "opensearch_py_ml.Series.isna"]], "isnull() (opensearch_py_ml.series method)": [[71, "opensearch_py_ml.Series.isnull"]], "mad() (opensearch_py_ml.series method)": [[72, "opensearch_py_ml.Series.mad"]], "max() (opensearch_py_ml.series method)": [[73, "opensearch_py_ml.Series.max"]], "mean() (opensearch_py_ml.series method)": [[74, "opensearch_py_ml.Series.mean"]], "median() (opensearch_py_ml.series method)": [[75, "opensearch_py_ml.Series.median"]], "min() (opensearch_py_ml.series method)": [[76, "opensearch_py_ml.Series.min"]], "mod() (opensearch_py_ml.series method)": [[77, "opensearch_py_ml.Series.mod"]], "mode() (opensearch_py_ml.series method)": [[78, "opensearch_py_ml.Series.mode"]], "mul() (opensearch_py_ml.series method)": [[79, "opensearch_py_ml.Series.mul"]], "multiply() (opensearch_py_ml.series method)": [[80, "opensearch_py_ml.Series.multiply"]], "name (opensearch_py_ml.series attribute)": [[81, "opensearch_py_ml.Series.name"]], "ndim (opensearch_py_ml.series attribute)": [[82, "opensearch_py_ml.Series.ndim"]], "notna() (opensearch_py_ml.series method)": [[83, "opensearch_py_ml.Series.notna"]], "notnull() (opensearch_py_ml.series method)": [[84, "opensearch_py_ml.Series.notnull"]], "nunique() (opensearch_py_ml.series method)": [[85, "opensearch_py_ml.Series.nunique"]], "os_dtype (opensearch_py_ml.series attribute)": [[86, "opensearch_py_ml.Series.os_dtype"]], "os_dtypes (opensearch_py_ml.series attribute)": [[87, "opensearch_py_ml.Series.os_dtypes"]], "os_info() (opensearch_py_ml.series method)": [[88, "opensearch_py_ml.Series.os_info"]], "os_match() (opensearch_py_ml.series method)": [[89, "opensearch_py_ml.Series.os_match"]], "pow() (opensearch_py_ml.series method)": [[90, "opensearch_py_ml.Series.pow"]], "quantile() (opensearch_py_ml.series method)": [[91, "opensearch_py_ml.Series.quantile"]], "radd() (opensearch_py_ml.series method)": [[92, "opensearch_py_ml.Series.radd"]], "rdiv() (opensearch_py_ml.series method)": [[93, "opensearch_py_ml.Series.rdiv"]], "rdivide() (opensearch_py_ml.series method)": [[94, "opensearch_py_ml.Series.rdivide"]], "rename() (opensearch_py_ml.series method)": [[95, "opensearch_py_ml.Series.rename"]], "rfloordiv() (opensearch_py_ml.series method)": [[96, "opensearch_py_ml.Series.rfloordiv"]], "rmod() (opensearch_py_ml.series method)": [[97, "opensearch_py_ml.Series.rmod"]], "rmul() (opensearch_py_ml.series method)": [[98, "opensearch_py_ml.Series.rmul"]], "rmultiply() (opensearch_py_ml.series method)": [[99, "opensearch_py_ml.Series.rmultiply"]], "rpow() (opensearch_py_ml.series method)": [[100, "opensearch_py_ml.Series.rpow"]], "rsub() (opensearch_py_ml.series method)": [[101, "opensearch_py_ml.Series.rsub"]], "rsubtract() (opensearch_py_ml.series method)": [[102, "opensearch_py_ml.Series.rsubtract"]], "rtruediv() (opensearch_py_ml.series method)": [[103, "opensearch_py_ml.Series.rtruediv"]], "sample() (opensearch_py_ml.series method)": [[104, "opensearch_py_ml.Series.sample"]], "shape (opensearch_py_ml.series attribute)": [[105, "opensearch_py_ml.Series.shape"]], "size (opensearch_py_ml.series attribute)": [[106, "opensearch_py_ml.Series.size"]], "std() (opensearch_py_ml.series method)": [[107, "opensearch_py_ml.Series.std"]], "sub() (opensearch_py_ml.series method)": [[108, "opensearch_py_ml.Series.sub"]], "subtract() (opensearch_py_ml.series method)": [[109, "opensearch_py_ml.Series.subtract"]], "sum() (opensearch_py_ml.series method)": [[110, "opensearch_py_ml.Series.sum"]], "tail() (opensearch_py_ml.series method)": [[111, "opensearch_py_ml.Series.tail"]], "to_numpy() (opensearch_py_ml.series method)": [[112, "opensearch_py_ml.Series.to_numpy"]], "to_pandas() (opensearch_py_ml.series method)": [[113, "opensearch_py_ml.Series.to_pandas"]], "to_string() (opensearch_py_ml.series method)": [[114, "opensearch_py_ml.Series.to_string"]], "truediv() (opensearch_py_ml.series method)": [[115, "opensearch_py_ml.Series.truediv"]], "unique() (opensearch_py_ml.series method)": [[116, "opensearch_py_ml.Series.unique"]], "value_counts() (opensearch_py_ml.series method)": [[117, "opensearch_py_ml.Series.value_counts"]], "var() (opensearch_py_ml.series method)": [[118, "opensearch_py_ml.Series.var"]], "csv_to_opensearch() (in module opensearch_py_ml.etl)": [[119, "opensearch_py_ml.etl.csv_to_opensearch"]], "dataframegroupby (class in opensearch_py_ml.groupby)": [[120, "opensearch_py_ml.groupby.DataFrameGroupBy"]], "agg() (opensearch_py_ml.groupby.dataframegroupby method)": [[121, "opensearch_py_ml.groupby.DataFrameGroupBy.agg"]], "aggregate() (opensearch_py_ml.groupby.dataframegroupby method)": [[122, "opensearch_py_ml.groupby.DataFrameGroupBy.aggregate"]], "count() (opensearch_py_ml.groupby.dataframegroupby method)": [[123, "opensearch_py_ml.groupby.DataFrameGroupBy.count"]], "mad() (opensearch_py_ml.groupby.dataframegroupby method)": [[124, "opensearch_py_ml.groupby.DataFrameGroupBy.mad"]], "max() (opensearch_py_ml.groupby.dataframegroupby method)": [[125, "opensearch_py_ml.groupby.DataFrameGroupBy.max"]], "mean() (opensearch_py_ml.groupby.dataframegroupby method)": [[126, "opensearch_py_ml.groupby.DataFrameGroupBy.mean"]], "median() (opensearch_py_ml.groupby.dataframegroupby method)": [[127, "opensearch_py_ml.groupby.DataFrameGroupBy.median"]], "min() (opensearch_py_ml.groupby.dataframegroupby method)": [[128, "opensearch_py_ml.groupby.DataFrameGroupBy.min"]], "nunique() (opensearch_py_ml.groupby.dataframegroupby method)": [[129, "opensearch_py_ml.groupby.DataFrameGroupBy.nunique"]], "quantile() (opensearch_py_ml.groupby.dataframegroupby method)": [[130, "opensearch_py_ml.groupby.DataFrameGroupBy.quantile"]], "std() (opensearch_py_ml.groupby.dataframegroupby method)": [[131, "opensearch_py_ml.groupby.DataFrameGroupBy.std"]], "sum() (opensearch_py_ml.groupby.dataframegroupby method)": [[132, "opensearch_py_ml.groupby.DataFrameGroupBy.sum"]], "var() (opensearch_py_ml.groupby.dataframegroupby method)": [[133, "opensearch_py_ml.groupby.DataFrameGroupBy.var"]], "delete_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[135, "opensearch_py_ml.ml_commons.MLCommonClient.delete_model"]], "generate_embedding() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[136, "opensearch_py_ml.ml_commons.MLCommonClient.generate_embedding"]], "get_model_info() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[137, "opensearch_py_ml.ml_commons.MLCommonClient.get_model_info"]], "get_task_info() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[138, "opensearch_py_ml.ml_commons.MLCommonClient.get_task_info"]], "load_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[139, "opensearch_py_ml.ml_commons.MLCommonClient.load_model"]], "unload_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[140, "opensearch_py_ml.ml_commons.MLCommonClient.unload_model"]], "upload_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[141, "opensearch_py_ml.ml_commons.MLCommonClient.upload_model"]], "opensearch_to_pandas() (opensearch_py_ml.etl method)": [[142, "opensearch_py_ml.etl.opensearch_to_pandas"]], "pandas_to_opensearch() (opensearch_py_ml.etl method)": [[143, "opensearch_py_ml.etl.pandas_to_opensearch"]], "__init__() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[144, "opensearch_py_ml.ml_models.SentenceTransformerModel.__init__"]], "load_sentence_transformer_example() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[145, "opensearch_py_ml.ml_models.SentenceTransformerModel.load_sentence_transformer_example"]], "make_model_config_json() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[146, "opensearch_py_ml.ml_models.SentenceTransformerModel.make_model_config_json"]], "read_queries() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[147, "opensearch_py_ml.ml_models.SentenceTransformerModel.read_queries"]], "save_as_pt() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[148, "opensearch_py_ml.ml_models.SentenceTransformerModel.save_as_pt"]], "set_up_accelerate_config() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[149, "opensearch_py_ml.ml_models.SentenceTransformerModel.set_up_accelerate_config"]], "train() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[150, "opensearch_py_ml.ml_models.SentenceTransformerModel.train"]], "train_model() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[151, "opensearch_py_ml.ml_models.SentenceTransformerModel.train_model"]], "zip_model() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[152, "opensearch_py_ml.ml_models.SentenceTransformerModel.zip_model"]]}})